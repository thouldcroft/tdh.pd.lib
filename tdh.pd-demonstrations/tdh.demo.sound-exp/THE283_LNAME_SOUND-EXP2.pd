#N canvas 1960 66 1413 855 10;
#X obj 8 -14 cnv 15 1000 30 empty empty THE283\ SOUND\ EXP\ 2 20 12
0 14 #e0e0e0 #404040 0;
#X obj 6 101 cnv 5 1000 5 empty empty Part\ 1\ -\ Pd\ Coding 20 12
0 14 #e0e0e0 #404040 0;
#X text 30 30 For this assignment you conduct ALL of your work in this
Pd patch. Please perform a SAVE AS and replace. "LNAME" with YOUR LAST
NAME for the filename., f 150;
#X obj 21 190 cnv 15 4 15 empty empty 1 4 5 0 14 #909090 #404040 0
;
#X obj 20 330 cnv 15 4 15 empty empty 2 4 5 0 14 #909090 #404040 0
;
#X msg 50 380 32;
#X text 40 330 Using the objects below \, connect the [message] objects
so that the math operation "85 - 32" is performed. Have the result
get sent to the Pd Console via [print]. PLEASE ARRANGE THE OBJECTS
SO THAT THE CODING IS CLEAR AND DATA FLOWS FROM TOP TO BOTTOM (when
applicable)., f 149;
#X msg 50 410 85;
#X floatatom 50 440 5 0 0 0 - - -, f 5;
#X obj 50 470 print;
#X obj 20 650 cnv 15 4 15 empty empty 3 4 5 0 14 #909090 #404040 0
;
#X msg 49 718;
#X obj 49 809 metro;
#X obj 49 838 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000;
#X text 41 190 PUT a [comment] below \, set the text to display your
name:;
#X obj 20 910 cnv 15 4 15 empty empty 4 4 5 0 14 #909090 #404040 0
;
#X obj 50 950 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X obj 50 980 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000;
#X obj 20 1110 cnv 15 4 15 empty empty 5 4 5 0 14 #909090 #404040 0
;
#X text 980 5151 _;
#X text 40 1110 The following objects should create the equation "50
divided by 2 equals 25". Move the[comment] object with the text "1st"
over the message you must click FIRST in order to get the correct result.
Move the [comment] object with the text "2nd" over the message that
you must click SECOND in order to get the correct result. Confirm your
order by clicking inside the [/] object \, retype the object name ("/")
\, click in empty space \, and the leave edit mode. Click on your objects
in the order you have indicated to see if the correct number is produced.
, f 153;
#X msg 90 1200 50;
#X msg 150 1200 2;
#X floatatom 120 1290 5 0 0 0 - - -, f 5;
#X text 250 1200 1st;
#X text 250 1230 2nd;
#X obj 20 1350 cnv 15 4 15 empty empty 6 4 5 0 14 #909090 #404040 0
;
#X text 40 1350 Insert the following items from the SOUND ART TOOLKIT
and connect them in the indicated order., f 153;
#X text 40 1410 tdh.satk.channelstrip~;
#X text 40 1440 tdh.satk.audioout~;
#X obj 20 2650 cnv 15 4 15 empty empty 7 4 5 0 14 #909090 #404040 0
;
#X text 80 1980 (This space is left empty to provide space for the
size of the SATK objects. Feel free to delete this!);
#X text 40 1380 tdh.satk.audiofile~;
#X text 40 2700 Place the following SATK objects into the patch below
\, and connect them as indicated:, f 153;
#X text 40 2750 tdh.satk.channelstrip~;
#X text 40 2770 tdh.satk.audioout~;
#X text 40 2800 Connect in the following order/signal flow: [tdh.satk.3oscil~]=>[tdh.satk.channelstrip~]=>[tdh.satk.audioout~]
, f 114;
#X text 40 2730 tdh.satk.3oscil~;
#X text 40 1470 Connect in the following order/signal flow: [tdh.satk.audiofile~]=>[tdh.satk.channelstrip~]=>[tdh.satk.audioout~]
, f 114;
#X text 40 2830 Now add the following items from the "Put" menu:;
#X text 40 2910 You will configure this patch by taking ONE of the
[number] objects \, and connect it to the two [+] objects (not in a
row \, in parallel - so two patch cables will come out of this one
[number] box). You will take the two remaining [number] objects \,
and have the output of each [+] object go into these [number] objects.
, f 153;
#X text 40 2970 The [3oscil~] object has labelled inlets that indicate
what each inlet does. "1Frq" \, "2Frq" \, and "3Frq" are the frequency
setting inlets for the 3 oscillators in the module. Connect the [number]
objects that are receiving the output from the two [+] objects to the
two frequency inlets for oscillator 2 and 3 - one [number] object connects
to "2Frq" \, and the other connects to "3Frq"., f 153;
#X text 40 3030 To finish up this algorithm \, connect a THIRD cable
from the "main" [number] box (the one that is connected to the inlets
of the two [+] objects) to the inlet marked "1Frq". Finally \, add
an ARGUMENT to the two [+] objects. This will be a number that gets
ADDED to the frequency value set by the main [number] box. Experiment
with different values in these [+] objects until you hit on ones that
you find interesting - I suggest keeping the values between 1-8. By
typing a number (or clicking and dragging) in the main number box \,
you will be setting the frequency of each oscillator to something different
\, but they will all be related to the value in the main number box.
Keep in mind \, every time you change the argument for the two [+]
objects \, you will need to RE-SEND the frequency value in the main
number box to hear the result of the new values in each [+] object
box., f 153;
#X text 40 3120 Also experiment with different octaves and wave-forms
for each oscillator. And make sure the gain is turned up for each oscillator
\, otherwise you won't be able to hear the result of the two [+] objects.
, f 153;
#X text 40 2880 *2* [+] objects (via the "Put -> Object" menu item)
;
#X obj 50 500 -;
#X text 672 377 right operand;
#X text 640 440 a + b;
#X msg 49 748 1;
#X msg 49 778 0;
#X obj 118 1243 /;
#X text 40 2650 The [tdh.satk.3oscil~] object has inlets that let you
set the FREQUENCY of each oscillator. The frequency inlets are based
on a single octave of MIDI notes \, 0-11 \, so 0 sets the frequency
to "C" \, 1 sets the frequency to C# \, etc. You can use math operators
to *algorithmically* set the frequency for the oscillators based on
a single frequency. This item will help you explore this approach.
, f 153;
#X obj 21 1323 cnv 5 1000 5 empty empty Part\ 2\ Sound\ Art\ Toolkit
20 12 0 14 #e0e0e0 #404040 0;
#X text 40 2860 *3* [number] objects (via "Put -> Number" menu item)
;
#X text 30 60 Parts of this code relies on the SOUND ART TOOLKIT \,
so please save this patch in the most recent SATK folder., f 150;
#X text 20 140 Follow the directions to build the code requested.;
#X obj 644 414 +;
#X text 640 460 a -> left operand;
#X text 640 480 b -> right operand;
#X text 656 392 v;
#X text 658 373 __;
#X text 656 384 |;
#X text 550 380 right operand;
#X text 643 392 v;
#X text 634 373 __;
#X text 643 384 |;
#X text 409 386 A reminder of how binary operators work in Pd, f 17
;
#X text 525 403 >;
#X text 516 397 __;
#X text 40 910 PUT a [metro] object into the space below \, and set
it to output a "bang" every 250 ms using a TYPED IN ARGUMENT. Connect
the [toggle/tgl] object (which outputs "1" or "0") to the correct inlet
to turn the [metro] on/off. Have the [metro] output to the [bang/bng]
object., f 153;
#X text 40 650 Set the [metro] object to output a "bang" every 1000
ms using a [message] object with "1000" typed in it \, sent to the
appropriate inlet. Connect the "1" and "0" [message] objects to the
correct inlet to turn the [metro] on and off. Have [metro] output to
the [bang/bng] object to visualze the output of [metro]., f 151;
#X connect 21 0 50 0;
#X connect 22 0 50 1;
#X connect 50 0 23 0;
