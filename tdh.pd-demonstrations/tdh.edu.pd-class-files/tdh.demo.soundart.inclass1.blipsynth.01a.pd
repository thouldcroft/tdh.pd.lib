#N canvas 79 41 787 582 10;
#N canvas 25 23 1415 855 blip_synth 0;
#X obj 237 -519 phasor~;
#X obj 237 -497 *~ 2;
#X obj 237 -475 -~ 1;
#X obj 237 -273 *~;
#X text 295 -504 <-- builds a bipolar sawtooth wave from the unipolar
[phasor~], f 23;
#X obj 447 -686 inlet;
#X text 496 -685 frequency;
#X obj 650 -683 inlet;
#X text 695 -685 note duration;
#X obj 599 -574 float 250;
#X text 444 -582 trigger note duration-->;
#X text 662 -579 <-- store note duration;
#X obj 548 -423 delay 250;
#X obj 449 -501 trigger bang bang;
#X text 617 -423 we delay this bang by the note duration \, because
this bang triggers the decay portion of the amplitude envelope;
#X text 300 -379 starts the note envelope;
#X obj 1167 -670 inlet;
#X text 76 -537 set oscillator frequency-->;
#X obj 447 -639 trigger bang bang float bang;
#X obj 314 -312 line~;
#X text 633 -638 <-- first triggered bang silences the oscillator \,
otherwise if you sent a frequency before the note was done playing
\, you would get a change in frequency;
#X obj 237 -227 *~;
#X text 274 -229 volume;
#X text 271 -271 envelope;
#X obj 237 -166 outlet~;
#X msg 549 -379 0 50;
#X msg 450 -380 0 \, 0.8 50;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 21 0;
#X connect 5 0 18 0;
#X connect 7 0 9 1;
#X connect 9 0 12 1;
#X connect 12 0 25 0;
#X connect 13 0 26 0;
#X connect 13 1 12 0;
#X connect 16 0 21 1;
#X connect 18 0 13 0;
#X connect 18 1 9 0;
#X connect 18 2 0 0;
#X connect 18 3 25 0;
#X connect 19 0 3 1;
#X connect 21 0 24 0;
#X connect 25 0 19 0;
#X connect 26 0 19 0;
#X restore 171 457 pd blip_synth;
#X obj 195 401 random;
#X obj 171 503 dac~ 1 2;
#X floatatom 290 403 5 0 0 0 - - -, f 5;
#X msg 51 398 1;
#X msg 97 397 0;
#X obj 143 424 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text 387 461 Inlet;
#X text 458 461 Message;
#X text 387 483 0;
#X text 458 483 A frequency value for the note;
#X text 387 503 1;
#X text 387 523 2;
#X text 385 424 [blip_synth] inlets:;
#X text 458 503 Note duration in ms;
#X floatatom 332 402 5 0 0 0 - - -, f 5;
#X floatatom 378 402 5 0 0 0 - - -, f 5;
#X text 17 11 In-Class Work #1 - BlipSynth, f 95;
#X text 17 40 tdh.demo.soundart.blipsynth.01a, f 95;
#X text 17 122 All the objects that you need to create this algorithm
are in the patch already \, you just need to unlock the patch and connect
them., f 95;
#X text 17 157 You may have forgotten how many of these objects work
from the last class \, so use the help files to remind yourself of
how they work., f 95;
#X text 17 73 For your first in-class work \, you will use a random
number generator to set the frequency of notes that are created by
blip_synth. You will use an object to automatically trigger the random
number generator to output numbers., f 95;
#X text 458 523 Volume (0.0-1.0);
#X text 17 192 I have made one connection for you \, that technically
isn't needed but will help you visualize the output of the [metro]
object. The object that it is connected to and it's help file will
help you figure where these objects go in the chain., f 95;
#X text 17 245 Hints:, f 95;
#X text 17 267 - Use the "Introduction to Pure Data" notes \, as all
of the objects (with the exception of blip_synth) were used as examples.
, f 95;
#X text 17 302 - Read all of the help files \, and particularly focus
on what objects/messages are going to the inlets of the [metro] and
[random] objects, f 95;
#X floatatom 248 402 5 0 0 0 - - -, f 5;
#X obj 141 398 metro;
#X text 17 337 - Don't use a volume over 1.0!! I suggest you keep your
headphones off when you raise the volume \, or directly type it in
(and use something like 0.5 to start), f 95;
#X connect 0 0 2 0;
#X connect 0 0 2 1;
#X connect 28 0 6 0;
