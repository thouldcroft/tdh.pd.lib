#N canvas 290 23 935 828 10;
#N canvas 25 23 1415 855 blip_synth_MIDI 0;
#X obj 237 -459 phasor~;
#X obj 237 -437 *~ 2;
#X obj 237 -415 -~ 1;
#X obj 237 -273 *~;
#X text 295 -444 <-- builds a bipolar sawtooth wave from the unipolar
[phasor~], f 23;
#X obj 240 -677 inlet;
#X obj 456 -673 inlet;
#X text 300 -379 starts the note envelope;
#X obj 876 -668 inlet;
#X text 67 -477 set oscillator frequency-->;
#X obj 451 -318 line~;
#X text 918 -671 volume;
#X text 271 -271 envelope;
#X obj 468 -116 outlet~;
#X text 289 -676 pitch/frequency;
#X msg 451 -380 0 \, 0.8 \$1;
#X msg 550 -379 0 \$1;
#X obj 456 -624 > 0;
#X obj 456 -602 sel 1;
#X obj 456 -580 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 554 -603 sel 1;
#X obj 554 -581 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 554 -625 <= 0;
#X obj 451 -410 f 150;
#X obj 550 -409 f 100;
#X obj 705 -669 inlet;
#X obj 809 -669 inlet;
#X obj 468 -177 *~ 0.5;
#X text 513 -176 volume;
#X text 504 -673 MIDI velocity;
#X text 656 -668 Attack;
#X text 759 -669 Release;
#X obj 235 -625 mtof;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 27 0;
#X connect 5 0 32 0;
#X connect 6 0 22 0;
#X connect 6 0 17 0;
#X connect 8 0 27 1;
#X connect 10 0 3 1;
#X connect 15 0 10 0;
#X connect 16 0 10 0;
#X connect 17 0 18 0;
#X connect 18 0 19 0;
#X connect 19 0 23 0;
#X connect 20 0 21 0;
#X connect 21 0 24 0;
#X connect 22 0 20 0;
#X connect 23 0 15 0;
#X connect 24 0 16 0;
#X connect 25 0 23 1;
#X connect 26 0 24 1;
#X connect 27 0 13 0;
#X connect 32 0 0 0;
#X restore 227 769 pd blip_synth_MIDI;
#X obj 227 828 dac~ 1 2;
#X obj 181 703 makenote;
#X text 30 68 A very convienient way to play notes is using the MIDI
protocol. MIDI stands for the Musical Instrument Digital Interface
\, and it is a way to send performance *instructions* \, NOT sound.
, f 95;
#X text 30 33 tdh.demo.soundart.blipsynth.01b, f 95;
#X text 30 4 In-Class Work #2 - BlipSynth MIDI, f 95;
#X text 30 113 But that's not all MIDI can be used for. In the future
we will see that we can use MIDI as a convienient way to get control
information into Pd \, using devices other than the mouse and QWERTY
keyboard., f 95;
#X text 30 171 MIDI functions on a scale from 0-127 for (almost) all
its data transmission. The most widely used elements of MIDI are NOTES
\, VELOCITY \, and CONTROLLER CHANGE information., f 95;
#X text 30 226 For this example you will focus on note making. I have
modified blip_synth to now accept a MIDI-style note message. A note
message is the message we transmit when we use a piano keyboard connected
to a computer. A note message consists of a NOTE value (from 0-127)
that corresponds to all 88 keys of the piano (plus more) \, as well
as a VELOCITY value (also 0-127) that describes how hard the piano
key was pressed. The velocity value also is used to tell the computer
when a keyboard key is released - the MIDI system will transmit a velocity
of 0 when the key is released., f 95;
#X text 30 496 Use the help file for [makenote] to determine the messages
that it accepts in its inlets \, and also the messages that are sent
out the outlets. Then use the information listed next to [blip_synth_MIDI]
to detemrine which outlets of [makenote] you want to connect to [blip_synth_MIDI]
\, as well as any additional messages you should send to [blip_synth_MIDI].
, f 95;
#X text 541 738 Inlet;
#X text 612 738 Message;
#X text 541 760 0;
#X text 541 780 1;
#X text 612 780 MIDI velocity value;
#X text 541 800 2;
#X text 541 820 3;
#X text 539 711 [blip_synth_MIDI] inlets:;
#X text 541 840 4;
#X text 612 800 Attack time for the amplitude envelope in ms;
#X text 612 820 Decay time for the ampitude envelope in ms;
#X text 612 840 Volume (0.0-1.0);
#X floatatom 22 701 5 0 0 0 - - -, f 5;
#X floatatom 78 702 5 0 0 0 - - -, f 5;
#X floatatom 130 704 5 0 0 0 - - -, f 5;
#X text 612 760 MIDI pitch value;
#X floatatom 250 702 5 0 0 0 - - -, f 5;
#X floatatom 306 703 5 0 0 0 - - -, f 5;
#X floatatom 358 705 5 0 0 0 - - -, f 5;
#X text 30 336 The modification to blip_synth that I have made is that
there is no longer a duration inlet \, instead we use the MIDI note
message to tell us when to start and when to stop the note. A velocity
value that isn't 0 starts the note \, and a value of 0 ends the note.
, f 95;
#X text 30 402 We could use our MIDI keyboards \, and we will \, but
for the in-class work \, you will use a Pd object that simulates a
keyboard note - the [makenote] object. [makenote] does this by the
user supplying a duration for the note (in milliseconds) \, and then
supplying a note starting velocity and pitch. The object starts the
note and also ends the note for you by sending a velocity of 0 when
the note is supposed to end., f 95;
#X text 30 567 Hints/Clarification:, f 95;
#X text 30 595 - MIDI pitches are in the range of 0-127 that correspond
to notes \, with "60" being middle C on the piano. Our old blip_synth
wanted frequencies \, but this version wants MIDI notes in the range
of 0-127., f 95;
#X text 30 643 - You should set your MIDI pitch LAST \, set all other
paramters first, f 95;
#X text 30 665 - To hear sound \, make sure DSP is on and that "built
in output" is selected in the preferences, f 95;
#X connect 0 0 1 0;
#X connect 0 0 1 1;
