#N canvas 1546 -73 1253 755 12;
#X declare -lib dependencies;
#X declare -path sounds;
#X declare -path sounds;
#X declare -path sounds;
#X declare -path sounds;
#N canvas 27 23 1253 732 main 1;
#X obj 1362 487 receive~ sig4;
#X obj 185 485 bng 15 250 50 0 \$0-harmonicspec_a empty Harmonic_Spectrum_B_(Sawtooth_Wave)
17 7 0 12 -4032 -1 -1;
#X obj 1484 566 bng 15 250 50 0 empty \$0-harmonicspec_a empty 17 7
0 10 -262144 -1 -1;
#X obj 185 451 bng 15 250 50 0 \$0-sine empty Sine_Wave 17 7 0 12 -4032
-1 -1;
#X obj 1482 457 bng 15 250 50 0 empty \$0-harmonicspec_b empty 17 7
0 10 -262144 -1 -1;
#X obj 185 468 bng 15 250 50 0 \$0-harmonicspec_b empty Harmonic_Spectrum_A_(Triangle_Wave)
17 7 0 12 -4032 -1 -1;
#X obj 185 502 bng 15 250 50 0 \$0-harmonicspec_c empty Harmonic_Spectrum_C_(Rectangle_Wave)
17 7 0 12 -4032 -1 -1;
#X text -325 286 All frequency and amplitude controls in the user interface
remotely receive from the preset freq and amp values to the right using
the receive symbol "\$0-freq#a" and "\$0-amp#a". All freq and amp controls
also remotely send to the number boxes below \, which actually set
the oscillators to develop the various timbre. These use the remote
send symbol "\$0-freq#b" and "\$0-amp#b". All remote send and receive
symbols can be seen in each object's properties., f 24;
#X text 183 588 Individual Partials/Harmonics:;
#X text 1480 350 Sine Wave preset (silences all partials other than
the first), f 62;
#X obj 185 519 bng 15 250 50 0 \$0-inharmonicspec empty Inharmonic_Spectrum_(different_every_time)
17 7 0 12 -4032 -1 -1;
#X obj 1484 591 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#N canvas 25 23 1415 855 freq.calc.sawtooth 0;
#X obj 54 111 until;
#X obj 115 133 + 1;
#X obj 54 133 float 1;
#X obj 189 386 f;
#X text 226 386 the iterator is stored here as an index to be used
by the [route] object, f 72;
#X text 142 133 iterator \, increase by 1 each time [until] sends a
"bang";
#X obj 117 351 trigger b f;
#X obj 135 427 pack f f;
#X text 196 425 combine the iterator/partial number with the calculated
partial amplitude value as a pair for [route];
#X msg 295 233 1;
#X obj 295 211 sel 48;
#X text 341 207 this mechanism resets the iterator to "1" when the
max iterations have occured, f 40;
#X obj 328 233 loadbang;
#X obj 54 160 trigger f f;
#X text 131 157 send the iterator first to the loop mechanism \, then
to the [sel] object to test if the loop is over (and reset the iterator
back to 1);
#X obj 117 268 t f f, f 15;
#X obj 24 468 route 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
43 44 45 46 47 48, f 227;
#X obj 54 88 t f f;
#X msg 54 67 48;
#X obj 138 19 inlet;
#X text 179 18 Fundamental Frequency;
#X obj 54 20 inlet;
#X obj 24 524 send \$0-freq1a;
#X obj 123 524 send \$0-freq2a;
#X obj 220 524 send \$0-freq3a;
#X obj 317 524 send \$0-freq4a;
#X obj 414 524 send \$0-freq5a;
#X obj 511 524 send \$0-freq6a;
#X obj 610 524 send \$0-freq7a;
#X obj 707 524 send \$0-freq8a;
#X obj 804 524 send \$0-freq9a;
#X obj 901 524 send \$0-freq10a;
#X obj 997 524 send \$0-freq11a;
#X obj 1095 524 send \$0-freq12a;
#X obj 1191 524 send \$0-freq13a;
#X obj 1288 524 send \$0-freq14a;
#X obj 1386 524 send \$0-freq15a;
#X obj 1484 523 send \$0-freq16a;
#X obj 24 551 send \$0-freq17a;
#X obj 123 551 send \$0-freq18a;
#X obj 220 551 send \$0-freq19a;
#X obj 317 551 send \$0-freq20a;
#X obj 414 551 send \$0-freq21a;
#X obj 511 551 send \$0-freq22a;
#X obj 611 551 send \$0-freq23a;
#X obj 708 551 send \$0-freq24a;
#X obj 805 551 send \$0-freq25a;
#X obj 902 551 send \$0-freq26a;
#X obj 998 551 send \$0-freq27a;
#X obj 1095 551 send \$0-freq28a;
#X obj 1191 551 send \$0-freq29a;
#X obj 1288 551 send \$0-freq30a;
#X obj 1386 551 send \$0-freq31a;
#X obj 1483 551 send \$0-freq32a;
#X obj 24 578 send \$0-freq33a;
#X obj 123 578 send \$0-freq34a;
#X obj 220 578 send \$0-freq35a;
#X obj 319 578 send \$0-freq36a;
#X obj 415 578 send \$0-freq37a;
#X obj 511 578 send \$0-freq38a;
#X obj 611 578 send \$0-freq39a;
#X obj 710 578 send \$0-freq40a;
#X obj 807 578 send \$0-freq41a;
#X obj 904 578 send \$0-freq42a;
#X obj 1001 578 send \$0-freq43a;
#X obj 1097 578 send \$0-freq44a;
#X obj 1194 578 send \$0-freq45a;
#X obj 1291 578 send \$0-freq46a;
#X obj 1388 578 send \$0-freq47a;
#X obj 1485 578 send \$0-freq48a;
#X obj 117 312 * 440;
#X connect 0 0 2 0;
#X connect 1 0 2 1;
#X connect 2 0 1 0;
#X connect 2 0 13 0;
#X connect 3 0 7 0;
#X connect 6 0 3 0;
#X connect 6 1 7 1;
#X connect 7 0 16 0;
#X connect 9 0 2 1;
#X connect 10 0 9 0;
#X connect 12 0 9 0;
#X connect 13 0 10 0;
#X connect 13 1 15 0;
#X connect 15 0 70 0;
#X connect 15 1 3 1;
#X connect 16 0 22 0;
#X connect 16 1 23 0;
#X connect 16 2 24 0;
#X connect 16 3 25 0;
#X connect 16 4 26 0;
#X connect 16 5 27 0;
#X connect 16 6 28 0;
#X connect 16 7 29 0;
#X connect 16 8 30 0;
#X connect 16 9 31 0;
#X connect 16 10 32 0;
#X connect 16 11 33 0;
#X connect 16 12 34 0;
#X connect 16 13 35 0;
#X connect 16 14 36 0;
#X connect 16 15 37 0;
#X connect 16 16 38 0;
#X connect 16 17 39 0;
#X connect 16 18 40 0;
#X connect 16 19 41 0;
#X connect 16 20 42 0;
#X connect 16 21 43 0;
#X connect 16 22 44 0;
#X connect 16 23 45 0;
#X connect 16 24 46 0;
#X connect 16 25 47 0;
#X connect 16 26 48 0;
#X connect 16 27 49 0;
#X connect 16 28 50 0;
#X connect 16 29 51 0;
#X connect 16 30 52 0;
#X connect 16 31 53 0;
#X connect 16 32 54 0;
#X connect 16 33 55 0;
#X connect 16 34 56 0;
#X connect 16 35 57 0;
#X connect 16 36 58 0;
#X connect 16 37 59 0;
#X connect 16 38 60 0;
#X connect 16 39 61 0;
#X connect 16 40 62 0;
#X connect 16 41 63 0;
#X connect 16 42 64 0;
#X connect 16 43 65 0;
#X connect 16 44 66 0;
#X connect 16 45 67 0;
#X connect 16 46 68 0;
#X connect 16 47 69 0;
#X connect 17 0 0 0;
#X connect 17 1 10 1;
#X connect 18 0 17 0;
#X connect 19 0 70 1;
#X connect 21 0 18 0;
#X connect 70 0 6 0;
#X restore 1484 616 pd freq.calc.sawtooth;
#X obj 1630 586 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#N canvas 274 104 1111 673 amp.calc.sawtooth 0;
#X obj 52 91 until;
#X obj 113 113 + 1;
#X obj 52 113 float 1;
#X obj 115 298 /;
#X obj 187 386 f;
#X text 145 298 divide 1/n \, where n is the interator (and the partial
number), f 61;
#X text 224 386 the iterator is stored here as an index to be used
by the [route] object, f 72;
#X text 140 113 iterator \, increase by 1 each time [until] sends a
"bang";
#X obj 115 351 trigger b f;
#X obj 133 427 pack f f;
#X text 194 425 combine the iterator/partial number with the calculated
partial amplitude value as a pair for [route];
#X msg 293 213 1;
#X obj 293 191 sel 48;
#X text 339 187 this mechanism resets the iterator to "1" when the
max iterations have occured, f 40;
#X obj 326 213 loadbang;
#X obj 52 140 trigger f f;
#X text 129 137 send the iterator first to the loop mechanism \, then
to the [sel] object to test if the loop is over (and reset the iterator
back to 1);
#X obj 115 271 swap 1;
#X floatatom 115 325 5 0 0 0 - - -, f 5;
#X obj 115 248 t f f, f 15;
#X obj 52 68 t f f;
#X msg 52 47 48;
#X obj 24 488 route 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
43 44 45 46 47 48, f 227;
#X obj 24 544 send \$0-amp1a;
#X obj 123 544 send \$0-amp2a;
#X obj 220 544 send \$0-amp3a;
#X obj 317 544 send \$0-amp4a;
#X obj 414 544 send \$0-amp5a;
#X obj 511 544 send \$0-amp6a;
#X obj 610 544 send \$0-amp7a;
#X obj 707 544 send \$0-amp8a;
#X obj 804 544 send \$0-amp9a;
#X obj 901 544 send \$0-amp10a;
#X obj 997 544 send \$0-amp11a;
#X obj 1095 544 send \$0-amp12a;
#X obj 1191 544 send \$0-amp13a;
#X obj 1288 544 send \$0-amp4a;
#X obj 1386 544 send \$0-amp15a;
#X obj 1484 543 send \$0-amp16a;
#X obj 24 571 send \$0-amp17a;
#X obj 123 571 send \$0-amp18a;
#X obj 220 571 send \$0-amp19a;
#X obj 317 571 send \$0-amp20a;
#X obj 414 571 send \$0-amp21a;
#X obj 511 571 send \$0-amp22a;
#X obj 611 571 send \$0-amp23a;
#X obj 708 571 send \$0-amp24a;
#X obj 805 571 send \$0-amp25a;
#X obj 902 571 send \$0-amp26a;
#X obj 998 571 send \$0-amp27a;
#X obj 1191 571 send \$0-amp29a;
#X obj 1288 571 send \$0-amp30a;
#X obj 1386 571 send \$0-amp31a;
#X obj 1483 571 send \$0-amp32a;
#X obj 24 598 send \$0-amp33a;
#X obj 123 598 send \$0-amp34a;
#X obj 220 598 send \$0-amp35a;
#X obj 319 598 send \$0-amp36a;
#X obj 415 598 send \$0-amp37a;
#X obj 511 598 send \$0-amp38a;
#X obj 611 598 send \$0-amp39a;
#X obj 709 598 send \$0-amp40a;
#X obj 807 598 send \$0-amp41a;
#X obj 904 598 send \$0-amp42a;
#X obj 1001 598 send \$0-amp43a;
#X obj 1291 598 send \$0-amp46a;
#X obj 1388 598 send \$0-amp47a;
#X obj 1485 598 send \$0-amp48a;
#X obj 52 20 inlet;
#X obj 1095 571 send \$0-amp28a;
#X obj 1097 598 send \$0-amp44a;
#X obj 1194 598 send \$0-amp45a;
#X connect 0 0 2 0;
#X connect 1 0 2 1;
#X connect 2 0 1 0;
#X connect 2 0 15 0;
#X connect 3 0 18 0;
#X connect 4 0 9 0;
#X connect 8 0 4 0;
#X connect 8 1 9 1;
#X connect 9 0 22 0;
#X connect 11 0 2 1;
#X connect 12 0 11 0;
#X connect 14 0 11 0;
#X connect 15 0 12 0;
#X connect 15 1 19 0;
#X connect 17 0 3 0;
#X connect 17 1 3 1;
#X connect 18 0 8 0;
#X connect 19 0 17 0;
#X connect 19 1 4 1;
#X connect 20 0 0 0;
#X connect 20 1 12 1;
#X connect 21 0 20 0;
#X connect 22 0 23 0;
#X connect 22 1 24 0;
#X connect 22 2 25 0;
#X connect 22 3 26 0;
#X connect 22 4 27 0;
#X connect 22 5 28 0;
#X connect 22 6 29 0;
#X connect 22 7 30 0;
#X connect 22 8 31 0;
#X connect 22 9 32 0;
#X connect 22 10 33 0;
#X connect 22 11 34 0;
#X connect 22 12 35 0;
#X connect 22 13 36 0;
#X connect 22 14 37 0;
#X connect 22 15 38 0;
#X connect 22 16 39 0;
#X connect 22 17 40 0;
#X connect 22 18 41 0;
#X connect 22 19 42 0;
#X connect 22 20 43 0;
#X connect 22 21 44 0;
#X connect 22 22 45 0;
#X connect 22 23 46 0;
#X connect 22 24 47 0;
#X connect 22 25 48 0;
#X connect 22 26 49 0;
#X connect 22 27 69 0;
#X connect 22 28 50 0;
#X connect 22 29 51 0;
#X connect 22 30 52 0;
#X connect 22 31 53 0;
#X connect 22 32 54 0;
#X connect 22 33 55 0;
#X connect 22 34 56 0;
#X connect 22 35 57 0;
#X connect 22 36 58 0;
#X connect 22 37 59 0;
#X connect 22 38 60 0;
#X connect 22 39 61 0;
#X connect 22 40 62 0;
#X connect 22 41 63 0;
#X connect 22 42 64 0;
#X connect 22 43 70 0;
#X connect 22 44 71 0;
#X connect 22 45 65 0;
#X connect 22 46 66 0;
#X connect 22 47 67 0;
#X connect 68 0 21 0;
#X restore 1630 611 pd amp.calc.sawtooth;
#X obj 1482 482 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 1642 477 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#N canvas 25 23 1415 855 freq.calc.triangle 0;
#X obj 54 111 until;
#X obj 115 133 + 1;
#X obj 54 133 float 1;
#X obj 189 386 f;
#X text 226 386 the iterator is stored here as an index to be used
by the [route] object, f 72;
#X text 142 133 iterator \, increase by 1 each time [until] sends a
"bang";
#X obj 117 351 trigger b f;
#X obj 135 427 pack f f;
#X text 196 425 combine the iterator/partial number with the calculated
partial amplitude value as a pair for [route];
#X msg 295 233 1;
#X obj 295 211 sel 48;
#X text 341 207 this mechanism resets the iterator to "1" when the
max iterations have occured, f 40;
#X obj 328 233 loadbang;
#X obj 54 160 trigger f f;
#X text 131 157 send the iterator first to the loop mechanism \, then
to the [sel] object to test if the loop is over (and reset the iterator
back to 1);
#X obj 117 268 t f f, f 15;
#X obj 24 468 route 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
43 44 45 46 47 48, f 227;
#X obj 54 88 t f f;
#X msg 54 67 48;
#X obj 143 19 inlet;
#X text 184 18 Fundamental Frequency;
#X obj 54 20 inlet;
#X obj 24 524 send \$0-freq1a;
#X obj 220 524 send \$0-freq3a;
#X obj 414 524 send \$0-freq5a;
#X obj 610 524 send \$0-freq7a;
#X obj 804 524 send \$0-freq9a;
#X obj 997 524 send \$0-freq11a;
#X obj 1191 524 send \$0-freq13a;
#X obj 1386 524 send \$0-freq15a;
#X obj 24 551 send \$0-freq17a;
#X obj 220 551 send \$0-freq19a;
#X obj 414 551 send \$0-freq21a;
#X obj 611 551 send \$0-freq23a;
#X obj 805 551 send \$0-freq25a;
#X obj 998 551 send \$0-freq27a;
#X obj 1191 551 send \$0-freq29a;
#X obj 1386 551 send \$0-freq31a;
#X obj 24 578 send \$0-freq33a;
#X obj 220 578 send \$0-freq35a;
#X obj 415 578 send \$0-freq37a;
#X obj 611 578 send \$0-freq39a;
#X obj 807 578 send \$0-freq41a;
#X obj 1001 578 send \$0-freq43a;
#X obj 1194 578 send \$0-freq45a;
#X obj 1388 578 send \$0-freq47a;
#X obj 117 312 * 440;
#X connect 0 0 2 0;
#X connect 1 0 2 1;
#X connect 2 0 1 0;
#X connect 2 0 13 0;
#X connect 3 0 7 0;
#X connect 6 0 3 0;
#X connect 6 1 7 1;
#X connect 7 0 16 0;
#X connect 9 0 2 1;
#X connect 10 0 9 0;
#X connect 12 0 9 0;
#X connect 13 0 10 0;
#X connect 13 1 15 0;
#X connect 15 0 46 0;
#X connect 15 1 3 1;
#X connect 16 0 22 0;
#X connect 16 2 23 0;
#X connect 16 4 24 0;
#X connect 16 6 25 0;
#X connect 16 8 26 0;
#X connect 16 10 27 0;
#X connect 16 12 28 0;
#X connect 16 14 29 0;
#X connect 16 16 30 0;
#X connect 16 18 31 0;
#X connect 16 20 32 0;
#X connect 16 22 33 0;
#X connect 16 24 34 0;
#X connect 16 26 35 0;
#X connect 16 28 36 0;
#X connect 16 30 37 0;
#X connect 16 32 38 0;
#X connect 16 34 39 0;
#X connect 16 36 40 0;
#X connect 16 38 41 0;
#X connect 16 40 42 0;
#X connect 16 42 43 0;
#X connect 16 44 44 0;
#X connect 16 46 45 0;
#X connect 17 0 0 0;
#X connect 17 1 10 1;
#X connect 18 0 17 0;
#X connect 19 0 46 1;
#X connect 21 0 18 0;
#X connect 46 0 6 0;
#X restore 1482 507 pd freq.calc.triangle;
#N canvas 26 23 1414 855 amp.calc.triangle 0;
#X obj 52 91 until;
#X obj 113 113 + 1;
#X obj 52 113 float 1;
#X obj 115 298 /;
#X obj 187 386 f;
#X text 224 386 the iterator is stored here as an index to be used
by the [route] object, f 72;
#X text 140 113 iterator \, increase by 1 each time [until] sends a
"bang";
#X obj 115 351 trigger b f;
#X obj 133 427 pack f f;
#X text 194 425 combine the iterator/partial number with the calculated
partial amplitude value as a pair for [route];
#X msg 293 213 1;
#X obj 293 191 sel 48;
#X text 339 187 this mechanism resets the iterator to "1" when the
max iterations have occured, f 40;
#X obj 326 213 loadbang;
#X obj 52 140 trigger f f;
#X text 129 137 send the iterator first to the loop mechanism \, then
to the [sel] object to test if the loop is over (and reset the iterator
back to 1);
#X obj 115 271 swap 1;
#X floatatom 115 325 5 0 0 0 - - -, f 5;
#X obj 52 68 t f f;
#X msg 52 47 48;
#X obj 24 538 route 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
43 44 45 46 47 48, f 227;
#X obj 24 674 send \$0-amp1a;
#X obj 123 674 send \$0-amp2a;
#X obj 220 674 send \$0-amp3a;
#X obj 317 674 send \$0-amp4a;
#X obj 414 674 send \$0-amp5a;
#X obj 511 674 send \$0-amp6a;
#X obj 610 674 send \$0-amp7a;
#X obj 707 674 send \$0-amp8a;
#X obj 804 674 send \$0-amp9a;
#X obj 901 674 send \$0-amp10a;
#X obj 997 674 send \$0-amp11a;
#X obj 1095 674 send \$0-amp12a;
#X obj 1191 674 send \$0-amp13a;
#X obj 1386 674 send \$0-amp15a;
#X obj 1484 673 send \$0-amp16a;
#X obj 24 781 send \$0-amp17a;
#X obj 123 781 send \$0-amp18a;
#X obj 220 781 send \$0-amp19a;
#X obj 317 781 send \$0-amp20a;
#X obj 414 781 send \$0-amp21a;
#X obj 511 781 send \$0-amp22a;
#X obj 611 781 send \$0-amp23a;
#X obj 708 781 send \$0-amp24a;
#X obj 805 781 send \$0-amp25a;
#X obj 902 781 send \$0-amp26a;
#X obj 998 781 send \$0-amp27a;
#X obj 1191 781 send \$0-amp29a;
#X obj 1288 781 send \$0-amp30a;
#X obj 1386 781 send \$0-amp31a;
#X obj 1483 781 send \$0-amp32a;
#X obj 24 908 send \$0-amp33a;
#X obj 123 908 send \$0-amp34a;
#X obj 220 908 send \$0-amp35a;
#X obj 319 908 send \$0-amp36a;
#X obj 415 908 send \$0-amp37a;
#X obj 511 908 send \$0-amp38a;
#X obj 611 908 send \$0-amp39a;
#X obj 709 908 send \$0-amp40a;
#X obj 807 908 send \$0-amp41a;
#X obj 904 908 send \$0-amp42a;
#X obj 1001 908 send \$0-amp43a;
#X obj 1291 908 send \$0-amp46a;
#X obj 1388 908 send \$0-amp47a;
#X obj 1485 908 send \$0-amp48a;
#X obj 52 20 inlet;
#X obj 1095 781 send \$0-amp28a;
#X obj 1097 908 send \$0-amp44a;
#X obj 1194 908 send \$0-amp45a;
#X obj 115 246 *;
#X obj 115 188 t f f f, f 15;
#X text 145 298 divide 1/n^2 \, where n is the interator (and the partial
number), f 61;
#X text 141 244 n^2;
#X obj 133 449 t l b;
#X msg 160 474 0;
#X obj 1288 674 send \$0-amp14a;
#X text 195 473 All even partials need to be zeroed;
#X connect 0 0 2 0;
#X connect 1 0 2 1;
#X connect 2 0 1 0;
#X connect 2 0 14 0;
#X connect 3 0 17 0;
#X connect 4 0 8 0;
#X connect 7 0 4 0;
#X connect 7 1 8 1;
#X connect 8 0 73 0;
#X connect 10 0 2 1;
#X connect 11 0 10 0;
#X connect 13 0 10 0;
#X connect 14 0 11 0;
#X connect 14 1 70 0;
#X connect 16 0 3 0;
#X connect 16 1 3 1;
#X connect 17 0 7 0;
#X connect 18 0 0 0;
#X connect 18 1 11 1;
#X connect 19 0 18 0;
#X connect 20 0 21 0;
#X connect 20 2 23 0;
#X connect 20 4 25 0;
#X connect 20 6 27 0;
#X connect 20 8 29 0;
#X connect 20 10 31 0;
#X connect 20 12 33 0;
#X connect 20 14 34 0;
#X connect 20 16 36 0;
#X connect 20 18 38 0;
#X connect 20 20 40 0;
#X connect 20 22 42 0;
#X connect 20 24 44 0;
#X connect 20 26 46 0;
#X connect 20 28 47 0;
#X connect 20 30 49 0;
#X connect 20 32 51 0;
#X connect 20 34 53 0;
#X connect 20 36 55 0;
#X connect 20 38 57 0;
#X connect 20 40 59 0;
#X connect 20 42 61 0;
#X connect 20 44 68 0;
#X connect 20 46 63 0;
#X connect 65 0 19 0;
#X connect 69 0 16 0;
#X connect 70 0 69 0;
#X connect 70 1 69 1;
#X connect 70 2 4 1;
#X connect 73 0 20 0;
#X connect 73 1 74 0;
#X connect 74 0 22 0;
#X connect 74 0 37 0;
#X connect 74 0 52 0;
#X connect 74 0 24 0;
#X connect 74 0 39 0;
#X connect 74 0 54 0;
#X connect 74 0 26 0;
#X connect 74 0 41 0;
#X connect 74 0 56 0;
#X connect 74 0 28 0;
#X connect 74 0 43 0;
#X connect 74 0 58 0;
#X connect 74 0 30 0;
#X connect 74 0 45 0;
#X connect 74 0 60 0;
#X connect 74 0 32 0;
#X connect 74 0 66 0;
#X connect 74 0 67 0;
#X connect 74 0 75 0;
#X connect 74 0 48 0;
#X connect 74 0 62 0;
#X connect 74 0 35 0;
#X connect 74 0 50 0;
#X connect 74 0 64 0;
#X restore 1642 502 pd amp.calc.triangle;
#X obj 1484 373 bng 15 250 50 0 empty \$0-sine empty 17 7 0 10 -262144
-1 -1;
#X floatatom 118 669 5 0 0 0 - #0-amp1a #0-amp1b, f 5;
#X floatatom 118 646 5 0 0 0 - #0-freq1a #0-freq1b, f 5;
#X text 153 643 f;
#X text 154 669 a;
#X floatatom 172 669 5 0 0 0 - #0-amp2a #0-amp2b, f 5;
#X floatatom 172 646 5 0 0 0 - #0-freq2a #0-freq2b, f 5;
#X text 207 643 f;
#X text 208 669 a;
#X floatatom 226 669 5 0 0 0 - #0-amp3a #0-amp3b, f 5;
#X floatatom 226 646 5 0 0 0 - #0-freq3a #0-freq3b, f 5;
#X text 261 643 f;
#X text 262 669 a;
#X floatatom 279 669 5 0 0 0 - #0-amp4a #0-amp4b, f 5;
#X floatatom 279 646 5 0 0 0 - #0-freq4a #0-freq4b, f 5;
#X text 314 643 f;
#X text 315 669 a;
#X floatatom 333 669 5 0 0 0 - #0-amp5a #0-amp5b, f 5;
#X floatatom 333 646 5 0 0 0 - #0-freq5a #0-freq5b, f 5;
#X text 368 643 f;
#X text 369 669 a;
#X floatatom 387 669 5 0 0 0 - #0-amp6a #0-amp6b, f 5;
#X floatatom 387 646 5 0 0 0 - #0-freq6a #0-freq6b, f 5;
#X text 422 643 f;
#X text 423 669 a;
#X floatatom 439 668 5 0 0 0 - #0-amp7a #0-amp7b, f 5;
#X floatatom 439 645 5 0 0 0 - #0-freq7a #0-freq7b, f 5;
#X text 474 642 f;
#X text 475 668 a;
#X floatatom 493 668 5 0 0 0 - #0-amp8a #0-amp8b, f 5;
#X floatatom 493 645 5 0 0 0 - #0-freq8a #0-freq8b, f 5;
#X text 528 642 f;
#X text 529 668 a;
#X floatatom 547 668 5 0 0 0 - #0-amp9a #0-amp9b, f 5;
#X floatatom 547 645 5 0 0 0 - #0-freq9a #0-freq9b, f 5;
#X text 582 642 f;
#X text 583 668 a;
#X floatatom 600 668 5 0 0 0 - #0-amp10a #0-amp10b, f 5;
#X floatatom 600 645 5 0 0 0 - #0-freq10a #0-freq10b, f 5;
#X text 635 642 f;
#X text 636 668 a;
#X floatatom 654 668 5 0 0 0 - #0-amp11a #0-amp11b, f 5;
#X floatatom 654 645 5 0 0 0 - #0-freq11a #0-freq11b, f 5;
#X text 689 642 f;
#X text 690 668 a;
#X floatatom 708 668 5 0 0 0 - #0-amp12a #0-amp12b, f 5;
#X floatatom 708 645 5 0 0 0 - #0-freq12a #0-freq12b, f 5;
#X text 744 642 f;
#X text 745 668 a;
#X text 121 628 1;
#X text 176 628 2;
#X text 229 628 3;
#X text 282 628 4;
#X text 337 628 5;
#X text 390 628 6;
#X text 441 628 7;
#X text 495 628 8;
#X text 559 628 9;
#X text 612 628 10;
#X text 666 628 11;
#X text 721 628 12;
#X floatatom 117 737 5 0 0 0 - #0-amp13a #0-amp13b, f 5;
#X floatatom 118 714 5 0 0 0 - #0-freq13a #0-freq13b, f 5;
#X text 153 711 f;
#X text 153 737 a;
#X floatatom 172 737 5 0 0 0 - #0-amp14a #0-amp14b, f 5;
#X floatatom 173 714 5 0 0 0 - #0-freq14a #0-freq14b, f 5;
#X text 208 711 f;
#X text 208 737 a;
#X floatatom 226 737 5 0 0 0 - #0-amp15a #0-amp15b, f 5;
#X floatatom 227 714 5 0 0 0 - #0-freq15a #0-freq15b, f 5;
#X text 262 711 f;
#X text 262 737 a;
#X floatatom 279 737 5 0 0 0 - #0-amp16a #0-amp16b, f 5;
#X floatatom 280 714 5 0 0 0 - #0-freq16a #0-freq16b, f 5;
#X text 315 711 f;
#X text 315 737 a;
#X floatatom 333 737 5 0 0 0 - #0-amp17a #0-amp17b, f 5;
#X floatatom 334 714 5 0 0 0 - #0-freq17a #0-freq17b, f 5;
#X text 369 711 f;
#X text 369 737 a;
#X floatatom 387 737 5 0 0 0 - #0-amp18a #0-amp18b, f 5;
#X floatatom 388 714 5 0 0 0 - #0-freq18a #0-freq18b, f 5;
#X text 423 711 f;
#X text 423 737 a;
#X floatatom 438 737 5 0 0 0 - #0-amp19a #0-amp19b, f 5;
#X floatatom 439 714 5 0 0 0 - #0-freq19a #0-freq19b, f 5;
#X text 474 711 f;
#X text 474 737 a;
#X floatatom 492 737 5 0 0 0 - #0-amp20a #0-amp20b, f 5;
#X floatatom 493 714 5 0 0 0 - #0-freq20a #0-freq20b, f 5;
#X text 528 711 f;
#X text 528 737 a;
#X floatatom 546 737 5 0 0 0 - #0-amp21a #0-amp21b, f 5;
#X floatatom 547 714 5 0 0 0 - #0-freq21a #0-freq21b, f 5;
#X text 582 711 f;
#X text 582 737 a;
#X floatatom 599 737 5 0 0 0 - #0-amp22a #0-amp22b, f 5;
#X floatatom 600 714 5 0 0 0 - #0-freq22a #0-freq22b, f 5;
#X text 635 711 f;
#X text 635 737 a;
#X floatatom 653 737 5 0 0 0 - #0-amp23a #0-amp23b, f 5;
#X floatatom 654 714 5 0 0 0 - #0-freq23a #0-freq23b, f 5;
#X text 689 711 f;
#X text 689 737 a;
#X floatatom 707 737 5 0 0 0 - #0-amp24a #0-amp24b, f 5;
#X floatatom 708 714 5 0 0 0 - #0-freq24a #0-freq24b, f 5;
#X text 743 711 f;
#X text 743 737 a;
#X text 121 696 13;
#X text 176 696 14;
#X text 230 696 15;
#X text 283 696 16;
#X text 338 696 17;
#X text 391 696 18;
#X text 441 696 19;
#X text 495 696 20;
#X text 559 696 21;
#X text 612 696 22;
#X text 666 696 23;
#X text 720 696 24;
#X floatatom 117 806 5 0 0 0 - #0-amp25a #0-amp25b, f 5;
#X floatatom 117 783 5 0 0 0 - #0-freq25a #0-freq25b, f 5;
#X text 152 780 f;
#X text 153 806 a;
#X floatatom 172 806 5 0 0 0 - #0-amp26a #0-amp26b, f 5;
#X floatatom 172 783 5 0 0 0 - #0-freq26a #0-freq26b, f 5;
#X text 207 780 f;
#X text 208 806 a;
#X floatatom 226 806 5 0 0 0 - #0-amp27a #0-amp27b, f 5;
#X floatatom 226 783 5 0 0 0 - #0-freq27a #0-freq27b, f 5;
#X text 261 780 f;
#X text 262 806 a;
#X floatatom 279 806 5 0 0 0 - #0-amp28a #0-amp28b, f 5;
#X floatatom 279 783 5 0 0 0 - #0-freq28a #0-freq28b, f 5;
#X text 314 780 f;
#X text 315 806 a;
#X floatatom 333 806 5 0 0 0 - #0-amp29a #0-amp29b, f 5;
#X floatatom 333 783 5 0 0 0 - #0-freq29a #0-freq29b, f 5;
#X text 368 780 f;
#X text 369 806 a;
#X floatatom 387 806 5 0 0 0 - #0-amp30a #0-amp30b, f 5;
#X floatatom 387 783 5 0 0 0 - #0-freq30a #0-freq30b, f 5;
#X text 422 780 f;
#X text 423 806 a;
#X floatatom 439 805 5 0 0 0 - #0-amp31a #0-amp31b, f 5;
#X floatatom 439 782 5 0 0 0 - #0-freq31a #0-freq31b, f 5;
#X text 474 779 f;
#X text 475 805 a;
#X floatatom 493 805 5 0 0 0 - #0-amp32a #0-amp32b, f 5;
#X floatatom 493 782 5 0 0 0 - #0-freq32a #0-freq32b, f 5;
#X text 528 779 f;
#X text 529 805 a;
#X floatatom 547 805 5 0 0 0 - #0-amp33a #0-amp33b, f 5;
#X floatatom 547 782 5 0 0 0 - #0-freq33a #0-freq33b, f 5;
#X text 582 779 f;
#X text 583 805 a;
#X floatatom 600 805 5 0 0 0 - #0-amp34a #0-amp34b, f 5;
#X floatatom 600 782 5 0 0 0 - #0-freq34a #0-freq34b, f 5;
#X text 635 779 f;
#X text 636 805 a;
#X floatatom 654 805 5 0 0 0 - #0-amp35a #0-amp35b, f 5;
#X floatatom 654 782 5 0 0 0 - #0-freq35a #0-freq35b, f 5;
#X text 689 779 f;
#X text 690 805 a;
#X floatatom 708 805 5 0 0 0 - #0-amp36a #0-amp36b, f 5;
#X floatatom 708 782 5 0 0 0 - #0-freq36a #0-freq36b, f 5;
#X text 743 779 f;
#X text 744 805 a;
#X floatatom 117 874 5 0 0 0 - #0-amp37a #0-amp37b, f 5;
#X floatatom 117 851 5 0 0 0 - #0-freq37a #0-freq37b, f 5;
#X text 152 848 f;
#X text 153 874 a;
#X floatatom 172 874 5 0 0 0 - #0-amp38a #0-amp38b, f 5;
#X floatatom 172 851 5 0 0 0 - #0-freq38a #0-freq38b, f 5;
#X text 207 848 f;
#X text 208 874 a;
#X floatatom 226 874 5 0 0 0 - #0-amp39a #0-amp39b, f 5;
#X floatatom 226 851 5 0 0 0 - #0-freq39a #0-freq39b, f 5;
#X text 261 848 f;
#X text 262 874 a;
#X floatatom 279 874 5 0 0 0 - #0-amp40a #0-amp40b, f 5;
#X floatatom 279 851 5 0 0 0 - #0-freq40a #0-freq40b, f 5;
#X text 314 848 f;
#X text 315 874 a;
#X floatatom 333 874 5 0 0 0 - #0-amp41a #0-amp41b, f 5;
#X floatatom 333 851 5 0 0 0 - #0-freq41a #0-freq41b, f 5;
#X text 368 848 f;
#X text 369 874 a;
#X floatatom 387 874 5 0 0 0 - #0-amp42a #0-amp42b, f 5;
#X floatatom 387 851 5 0 0 0 - #0-freq42a #0-freq42b, f 5;
#X text 422 848 f;
#X text 423 874 a;
#X floatatom 438 874 5 0 0 0 - #0-amp43a #0-amp43b, f 5;
#X floatatom 438 851 5 0 0 0 - #0-freq43a #0-freq43b, f 5;
#X text 473 848 f;
#X text 474 874 a;
#X floatatom 492 874 5 0 0 0 - #0-amp44a #0-amp44b, f 5;
#X floatatom 492 851 5 0 0 0 - #0-freq44a #0-freq44b, f 5;
#X text 527 848 f;
#X text 528 874 a;
#X floatatom 546 874 5 0 0 0 - #0-amp45a #0-amp45b, f 5;
#X floatatom 546 851 5 0 0 0 - #0-freq45a #0-freq45b, f 5;
#X text 581 848 f;
#X text 582 874 a;
#X floatatom 599 874 5 0 0 0 - #0-amp46a #0-amp46b, f 5;
#X floatatom 599 851 5 0 0 0 - #0-freq46a #0-freq46b, f 5;
#X text 634 848 f;
#X text 635 874 a;
#X floatatom 653 874 5 0 0 0 - #0-amp47a #0-amp47b, f 5;
#X floatatom 653 851 5 0 0 0 - #0-freq47a #0-freq47b, f 5;
#X text 688 848 f;
#X text 689 874 a;
#X floatatom 707 874 5 0 0 0 - #0-amp48a #0-amp48b, f 5;
#X floatatom 707 851 5 0 0 0 - #0-freq48a #0-freq48b, f 5;
#X text 742 848 f;
#X text 743 874 a;
#X text 120 765 25;
#X text 175 765 26;
#X text 229 765 27;
#X text 282 765 28;
#X text 337 765 29;
#X text 390 765 30;
#X text 441 764 31;
#X text 495 764 32;
#X text 559 764 33;
#X text 612 764 34;
#X text 666 764 35;
#X text 720 764 36;
#X text 120 833 37;
#X text 175 833 38;
#X text 229 833 39;
#X text 282 833 40;
#X text 337 833 41;
#X text 390 833 42;
#X text 440 833 43;
#X text 494 833 44;
#X text 558 833 45;
#X text 611 833 46;
#X text 665 833 47;
#X text 719 833 48;
#X obj 81 1165 osc~ 440;
#X floatatom 96 1135 5 0 0 0 - #0-amp1b -, f 5;
#X floatatom 81 1112 5 0 0 0 - #0-freq1b -, f 5;
#X text 116 1109 f;
#X text 132 1135 a;
#X obj 206 1681 send~ sig4;
#X obj 81 1189 *~;
#X obj 151 1165 osc~ 440;
#X floatatom 166 1135 5 0 0 0 - #0-amp2b -, f 5;
#X floatatom 151 1112 5 0 0 0 - #0-freq2b -, f 5;
#X text 186 1109 f;
#X text 202 1135 a;
#X obj 151 1189 *~;
#X obj 221 1165 osc~ 440;
#X floatatom 236 1135 5 0 0 0 - #0-amp3b -, f 5;
#X floatatom 221 1112 5 0 0 0 - #0-freq3b -, f 5;
#X text 256 1109 f;
#X text 272 1135 a;
#X obj 222 1189 *~;
#X floatatom 306 1135 5 0 0 0 - #0-amp4b -, f 5;
#X floatatom 291 1112 5 0 0 0 - #0-freq4b -, f 5;
#X text 326 1109 f;
#X text 342 1135 a;
#X obj 291 1189 *~;
#X obj 292 1167 osc~ 440;
#X floatatom 376 1135 5 0 0 0 - #0-amp5b -, f 5;
#X floatatom 361 1112 5 0 0 0 - #0-freq5b -, f 5;
#X text 396 1109 f;
#X text 412 1135 a;
#X obj 361 1189 *~;
#X obj 362 1167 osc~ 440;
#X floatatom 446 1135 5 0 0 0 - #0-amp6b -, f 5;
#X floatatom 431 1112 5 0 0 0 - #0-freq6b -, f 5;
#X text 466 1109 f;
#X text 482 1135 a;
#X obj 431 1189 *~;
#X obj 432 1167 osc~ 440;
#X obj 502 1165 osc~ 440;
#X floatatom 517 1135 5 0 0 0 - #0-amp7b -, f 5;
#X floatatom 502 1112 5 0 0 0 - #0-freq7b -, f 5;
#X text 537 1109 f;
#X text 553 1135 a;
#X obj 502 1189 *~;
#X obj 572 1165 osc~ 440;
#X floatatom 587 1135 5 0 0 0 - #0-amp8b -, f 5;
#X floatatom 572 1112 5 0 0 0 - #0-freq8b -, f 5;
#X text 607 1109 f;
#X text 623 1135 a;
#X obj 572 1189 *~;
#X obj 642 1165 osc~ 440;
#X floatatom 657 1135 5 0 0 0 - #0-amp9b -, f 5;
#X floatatom 642 1112 5 0 0 0 - #0-freq9b -, f 5;
#X text 677 1109 f;
#X text 693 1135 a;
#X obj 643 1189 *~;
#X floatatom 727 1135 5 0 0 0 - #0-amp10b -, f 5;
#X floatatom 712 1112 5 0 0 0 - #0-freq10b -, f 5;
#X text 747 1109 f;
#X text 763 1135 a;
#X obj 712 1189 *~;
#X obj 713 1167 osc~ 440;
#X floatatom 797 1135 5 0 0 0 - #0-amp11b -, f 5;
#X floatatom 782 1112 5 0 0 0 - #0-freq11b -, f 5;
#X text 817 1109 f;
#X text 833 1135 a;
#X obj 782 1189 *~;
#X obj 783 1167 osc~ 440;
#X floatatom 867 1135 5 0 0 0 - #0-amp12b -, f 5;
#X floatatom 852 1112 5 0 0 0 - #0-freq12b -, f 5;
#X text 887 1109 f;
#X text 903 1135 a;
#X obj 852 1189 *~;
#X obj 853 1167 osc~ 440;
#X text 84 1084 1;
#X text 154 1084 2;
#X text 224 1084 3;
#X text 294 1084 4;
#X text 365 1084 5;
#X text 434 1084 6;
#X text 504 1084 7;
#X text 574 1084 8;
#X text 654 1084 9;
#X text 724 1084 10;
#X text 794 1084 11;
#X text 864 1084 12;
#X obj 921 1165 osc~ 440;
#X floatatom 936 1135 5 0 0 0 - #0-amp13b -, f 5;
#X floatatom 921 1112 5 0 0 0 - #0-freq13b -, f 5;
#X text 956 1109 f;
#X text 972 1135 a;
#X obj 921 1189 *~;
#X obj 991 1165 osc~ 440;
#X floatatom 1006 1135 5 0 0 0 - #0-amp14b -, f 5;
#X floatatom 991 1112 5 0 0 0 - #0-freq14b -, f 5;
#X text 1026 1109 f;
#X text 1042 1135 a;
#X obj 991 1189 *~;
#X obj 1061 1165 osc~ 440;
#X floatatom 1076 1135 5 0 0 0 - #0-amp15b -, f 5;
#X floatatom 1061 1112 5 0 0 0 - #0-freq15b -, f 5;
#X text 1096 1109 f;
#X text 1112 1135 a;
#X obj 1062 1189 *~;
#X floatatom 1146 1135 5 0 0 0 - #0-amp16b -, f 5;
#X floatatom 1131 1112 5 0 0 0 - #0-freq16b -, f 5;
#X text 1166 1109 f;
#X text 1182 1135 a;
#X obj 1131 1189 *~;
#X obj 1132 1167 osc~ 440;
#X floatatom 1216 1135 5 0 0 0 - #0-amp17b -, f 5;
#X floatatom 1201 1112 5 0 0 0 - #0-freq17b -, f 5;
#X text 1236 1109 f;
#X text 1252 1135 a;
#X obj 1201 1189 *~;
#X obj 1202 1167 osc~ 440;
#X floatatom 1286 1135 5 0 0 0 - #0-amp18b -, f 5;
#X floatatom 1271 1112 5 0 0 0 - #0-freq18b -, f 5;
#X text 1306 1109 f;
#X text 1322 1135 a;
#X obj 1271 1189 *~;
#X obj 1272 1167 osc~ 440;
#X obj 1342 1165 osc~ 440;
#X floatatom 1357 1135 5 0 0 0 - #0-amp19b -, f 5;
#X floatatom 1342 1112 5 0 0 0 - #0-freq19b -, f 5;
#X text 1377 1109 f;
#X text 1393 1135 a;
#X obj 1342 1189 *~;
#X obj 1412 1165 osc~ 440;
#X floatatom 1427 1135 5 0 0 0 - #0-amp20b -, f 5;
#X floatatom 1412 1112 5 0 0 0 - #0-freq20b -, f 5;
#X text 1447 1109 f;
#X text 1463 1135 a;
#X obj 1412 1189 *~;
#X obj 1482 1165 osc~ 440;
#X floatatom 1497 1135 5 0 0 0 - #0-amp21b -, f 5;
#X floatatom 1482 1112 5 0 0 0 - #0-freq21b -, f 5;
#X text 1517 1109 f;
#X text 1533 1135 a;
#X obj 1483 1189 *~;
#X floatatom 1567 1135 5 0 0 0 - #0-amp22b -, f 5;
#X floatatom 1552 1112 5 0 0 0 - #0-freq22b -, f 5;
#X text 1587 1109 f;
#X text 1603 1135 a;
#X obj 1552 1189 *~;
#X obj 1553 1167 osc~ 440;
#X floatatom 1637 1135 5 0 0 0 - #0-amp23b -, f 5;
#X floatatom 1622 1112 5 0 0 0 - #0-freq23b -, f 5;
#X text 1657 1109 f;
#X text 1673 1135 a;
#X obj 1622 1189 *~;
#X obj 1623 1167 osc~ 440;
#X floatatom 1707 1135 5 0 0 0 - #0-amp24b -, f 5;
#X floatatom 1692 1112 5 0 0 0 - #0-freq24b -, f 5;
#X text 1727 1109 f;
#X text 1743 1135 a;
#X obj 1692 1189 *~;
#X obj 1693 1167 osc~ 440;
#X text 924 1084 13;
#X text 994 1084 14;
#X text 1064 1084 15;
#X text 1134 1084 16;
#X text 1205 1084 17;
#X text 1274 1084 18;
#X text 1344 1084 19;
#X text 1414 1084 20;
#X text 1494 1084 21;
#X text 1564 1084 22;
#X text 1634 1084 23;
#X text 1704 1084 24;
#X obj 81 1586 *~;
#X obj 189 1583 / 127;
#X obj 192 1560 hsl 128 15 0 127 0 0 empty \$0-gainslider empty -2
-8 0 10 -262144 -1 -1 0 1;
#X text 329 1558 gain;
#X obj 91 1334 osc~ 440;
#X floatatom 106 1304 5 0 0 0 - #0-amp25b -, f 5;
#X floatatom 91 1281 5 0 0 0 - #0-freq25b -, f 5;
#X text 126 1278 f;
#X text 142 1304 a;
#X obj 91 1358 *~;
#X obj 161 1334 osc~ 440;
#X floatatom 176 1304 5 0 0 0 - #0-amp26b -, f 5;
#X floatatom 161 1281 5 0 0 0 - #0-freq26b -, f 5;
#X text 196 1278 f;
#X text 212 1304 a;
#X obj 161 1358 *~;
#X obj 231 1334 osc~ 440;
#X floatatom 246 1304 5 0 0 0 - #0-amp27b -, f 5;
#X floatatom 231 1281 5 0 0 0 - #0-freq27b -, f 5;
#X text 266 1278 f;
#X text 282 1304 a;
#X obj 232 1358 *~;
#X floatatom 316 1304 5 0 0 0 - #0-amp28b -, f 5;
#X floatatom 301 1281 5 0 0 0 - #0-freq28b -, f 5;
#X text 336 1278 f;
#X text 352 1304 a;
#X obj 301 1358 *~;
#X obj 302 1336 osc~ 440;
#X floatatom 386 1304 5 0 0 0 - #0-amp29b -, f 5;
#X floatatom 371 1281 5 0 0 0 - #0-freq29b -, f 5;
#X text 406 1278 f;
#X text 422 1304 a;
#X obj 371 1358 *~;
#X obj 372 1336 osc~ 440;
#X floatatom 456 1304 5 0 0 0 - #0-amp30b -, f 5;
#X floatatom 441 1281 5 0 0 0 - #0-freq30b -, f 5;
#X text 476 1278 f;
#X text 492 1304 a;
#X obj 441 1358 *~;
#X obj 442 1336 osc~ 440;
#X obj 512 1334 osc~ 440;
#X floatatom 527 1304 5 0 0 0 - #0-amp31b -, f 5;
#X floatatom 512 1281 5 0 0 0 - #0-freq31b -, f 5;
#X text 547 1278 f;
#X text 563 1304 a;
#X obj 512 1358 *~;
#X obj 582 1334 osc~ 440;
#X floatatom 597 1304 5 0 0 0 - #0-amp32b -, f 5;
#X floatatom 582 1281 5 0 0 0 - #0-freq32b -, f 5;
#X text 617 1278 f;
#X text 633 1304 a;
#X obj 582 1358 *~;
#X obj 652 1334 osc~ 440;
#X floatatom 667 1304 5 0 0 0 - #0-amp33b -, f 5;
#X floatatom 652 1281 5 0 0 0 - #0-freq33b -, f 5;
#X text 687 1278 f;
#X text 703 1304 a;
#X obj 653 1358 *~;
#X floatatom 737 1304 5 0 0 0 - #0-amp34b -, f 5;
#X floatatom 722 1281 5 0 0 0 - #0-freq34b -, f 5;
#X text 757 1278 f;
#X text 773 1304 a;
#X obj 722 1358 *~;
#X obj 723 1336 osc~ 440;
#X floatatom 807 1304 5 0 0 0 - #0-amp35b -, f 5;
#X floatatom 792 1281 5 0 0 0 - #0-freq35b -, f 5;
#X text 827 1278 f;
#X text 843 1304 a;
#X obj 792 1358 *~;
#X obj 793 1336 osc~ 440;
#X floatatom 877 1304 5 0 0 0 - #0-amp36b -, f 5;
#X floatatom 862 1281 5 0 0 0 - #0-freq36b -, f 5;
#X text 897 1278 f;
#X text 913 1304 a;
#X obj 862 1358 *~;
#X obj 863 1336 osc~ 440;
#X text 923 1304 a;
#X obj 941 1334 osc~ 440;
#X floatatom 956 1304 5 0 0 0 - #0-amp37b -, f 5;
#X floatatom 941 1281 5 0 0 0 - #0-freq37b -, f 5;
#X text 976 1278 f;
#X text 992 1304 a;
#X obj 941 1358 *~;
#X obj 1011 1334 osc~ 440;
#X floatatom 1026 1304 5 0 0 0 - #0-amp38b -, f 5;
#X floatatom 1011 1281 5 0 0 0 - #0-freq38b -, f 5;
#X text 1046 1278 f;
#X text 1062 1304 a;
#X obj 1011 1358 *~;
#X obj 1081 1334 osc~ 440;
#X floatatom 1096 1304 5 0 0 0 - #0-amp39b -, f 5;
#X floatatom 1081 1281 5 0 0 0 - #0-freq39b -, f 5;
#X text 1116 1278 f;
#X text 1132 1304 a;
#X obj 1082 1358 *~;
#X floatatom 1166 1304 5 0 0 0 - #0-amp40b -, f 5;
#X floatatom 1151 1281 5 0 0 0 - #0-freq40b -, f 5;
#X text 1186 1278 f;
#X text 1202 1304 a;
#X obj 1151 1358 *~;
#X obj 1152 1336 osc~ 440;
#X floatatom 1236 1304 5 0 0 0 - #0-amp41b -, f 5;
#X floatatom 1221 1281 5 0 0 0 - #0-freq41b -, f 5;
#X text 1256 1278 f;
#X text 1272 1304 a;
#X obj 1221 1358 *~;
#X obj 1222 1336 osc~ 440;
#X floatatom 1306 1304 5 0 0 0 - #0-amp42b -, f 5;
#X floatatom 1291 1281 5 0 0 0 - #0-freq42b -, f 5;
#X text 1326 1278 f;
#X text 1342 1304 a;
#X obj 1291 1358 *~;
#X obj 1292 1336 osc~ 440;
#X obj 1362 1334 osc~ 440;
#X floatatom 1377 1304 5 0 0 0 - #0-amp43b -, f 5;
#X floatatom 1362 1281 5 0 0 0 - #0-freq43b -, f 5;
#X text 1397 1278 f;
#X text 1413 1304 a;
#X obj 1362 1358 *~;
#X obj 1432 1334 osc~ 440;
#X floatatom 1447 1304 5 0 0 0 - #0-amp44b -, f 5;
#X floatatom 1432 1281 5 0 0 0 - #0-freq44b -, f 5;
#X text 1467 1278 f;
#X text 1483 1304 a;
#X obj 1432 1358 *~;
#X obj 1502 1334 osc~ 440;
#X floatatom 1517 1304 5 0 0 0 - #0-amp45b -, f 5;
#X floatatom 1502 1281 5 0 0 0 - #0-freq45b -, f 5;
#X text 1537 1278 f;
#X text 1553 1304 a;
#X obj 1503 1358 *~;
#X floatatom 1587 1304 5 0 0 0 - #0-amp46b -, f 5;
#X floatatom 1572 1281 5 0 0 0 - #0-freq46b -, f 5;
#X text 1607 1278 f;
#X text 1623 1304 a;
#X obj 1572 1358 *~;
#X obj 1573 1336 osc~ 440;
#X floatatom 1657 1304 5 0 0 0 - #0-amp47b -, f 5;
#X floatatom 1642 1281 5 0 0 0 - #0-freq47b -, f 5;
#X text 1677 1278 f;
#X text 1693 1304 a;
#X obj 1642 1358 *~;
#X obj 1643 1336 osc~ 440;
#X floatatom 1727 1304 5 0 0 0 - #0-amp48b -, f 5;
#X floatatom 1712 1281 5 0 0 0 - #0-freq48b -, f 5;
#X text 1747 1278 f;
#X text 1763 1304 a;
#X obj 1712 1358 *~;
#X obj 1713 1336 osc~ 440;
#X text 96 1256 25;
#X text 161 1256 26;
#X text 235 1256 27;
#X text 298 1256 28;
#X text 373 1256 29;
#X text 446 1256 30;
#X text 515 1255 31;
#X text 580 1255 32;
#X text 654 1255 33;
#X text 717 1255 34;
#X text 791 1255 35;
#X text 865 1255 36;
#X text 945 1253 37;
#X text 1020 1253 38;
#X text 1084 1253 39;
#X text 1157 1253 40;
#X text 1222 1253 41;
#X text 1295 1253 42;
#X text 1363 1253 43;
#X text 1438 1253 44;
#X text 1502 1253 45;
#X text 1575 1253 46;
#X text 1649 1253 47;
#X text 1713 1253 48;
#N canvas 25 23 592 344 freq.calc.sine 0;
#X obj 246 291 send, f 5;
#X obj 148 52 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 148 110 send \$0-freq1a;
#X msg 148 84 440;
#N canvas 25 23 869 484 for.loop.2-48 0;
#X obj 54 111 until;
#X obj 115 133 + 1;
#X text 142 133 iterator \, increase by 1 each time [until] sends a
"bang";
#X text 341 207 this mechanism resets the iterator to "1" when the
max iterations have occured, f 40;
#X obj 328 233 loadbang;
#X obj 54 160 trigger f f;
#X text 131 157 send the iterator first to the loop mechanism \, then
to the [sel] object to test if the loop is over (and reset the iterator
back to 1);
#X obj 54 88 t f f;
#X obj 54 20 inlet;
#X obj 117 244 outlet;
#X msg 295 233 2;
#X obj 54 133 float 2;
#X msg 54 67 47;
#X obj 295 211 sel 48;
#X connect 0 0 11 0;
#X connect 1 0 11 1;
#X connect 4 0 10 0;
#X connect 5 0 13 0;
#X connect 5 1 9 0;
#X connect 7 0 0 0;
#X connect 8 0 12 0;
#X connect 10 0 11 1;
#X connect 11 0 1 0;
#X connect 11 0 5 0;
#X connect 12 0 7 0;
#X connect 13 0 10 0;
#X restore 246 87 pd for.loop.2-48;
#X msg 246 250 0;
#X obj 246 160 float \$0;
#X obj 246 134 t b s;
#X obj 246 212 t b s;
#X obj 246 110 makefilename %%d-freq%da;
#X obj 246 186 makefilename;
#X msg 307 162 set \$1;
#X text 24 82 set first partial to the fundamental, f 18;
#X text 363 78 set the remaining partials to zero, f 18;
#X obj 145 27 inlet;
#X connect 1 0 4 0;
#X connect 1 0 3 0;
#X connect 3 0 2 0;
#X connect 4 0 9 0;
#X connect 5 0 0 0;
#X connect 6 0 10 0;
#X connect 7 0 6 0;
#X connect 7 1 11 0;
#X connect 8 0 5 0;
#X connect 8 1 0 1;
#X connect 9 0 7 0;
#X connect 10 0 8 0;
#X connect 11 0 10 0;
#X connect 14 0 1 0;
#X restore 1484 404 pd freq.calc.sine;
#N canvas 26 23 822 657 amp.calc.sine 0;
#X obj 251 309 send, f 5;
#X obj 153 57 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#N canvas 25 23 869 484 for.loop.2-48 0;
#X obj 54 111 until;
#X obj 115 133 + 1;
#X text 142 133 iterator \, increase by 1 each time [until] sends a
"bang";
#X text 341 207 this mechanism resets the iterator to "1" when the
max iterations have occured, f 40;
#X obj 328 233 loadbang;
#X obj 54 160 trigger f f;
#X text 131 157 send the iterator first to the loop mechanism \, then
to the [sel] object to test if the loop is over (and reset the iterator
back to 1);
#X obj 54 88 t f f;
#X obj 54 20 inlet;
#X obj 117 244 outlet;
#X msg 295 233 2;
#X obj 54 133 float 2;
#X msg 54 67 47;
#X obj 295 211 sel 48;
#X connect 0 0 11 0;
#X connect 1 0 11 1;
#X connect 4 0 10 0;
#X connect 5 0 13 0;
#X connect 5 1 9 0;
#X connect 7 0 0 0;
#X connect 8 0 12 0;
#X connect 10 0 11 1;
#X connect 11 0 1 0;
#X connect 11 0 5 0;
#X connect 12 0 7 0;
#X connect 13 0 10 0;
#X restore 251 122 pd for.loop.2-48;
#X msg 251 281 0;
#X obj 251 195 float \$0;
#X obj 251 169 t b s;
#X obj 251 247 t b s;
#X obj 251 221 makefilename;
#X msg 312 197 set \$1;
#X text 368 113 set the remaining partials to zero, f 18;
#X msg 153 89 1;
#X text 185 59 set first partial amplitude to 1, f 17;
#X obj 251 145 makefilename %%d-amp%da;
#X obj 153 125 send \$0-amp1a;
#X obj 152 39 inlet;
#X connect 1 0 2 0;
#X connect 1 0 10 0;
#X connect 2 0 12 0;
#X connect 3 0 0 0;
#X connect 4 0 7 0;
#X connect 5 0 4 0;
#X connect 5 1 8 0;
#X connect 6 0 3 0;
#X connect 6 1 0 1;
#X connect 7 0 6 0;
#X connect 8 0 7 0;
#X connect 10 0 13 0;
#X connect 12 0 5 0;
#X connect 14 0 1 0;
#X restore 1604 404 pd amp.calc.sine;
#X obj 1481 697 bng 15 250 50 0 empty \$0-harmonicspec_c empty 17 7
0 10 -262144 -1 -1;
#X obj 1481 722 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 1641 717 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text 1481 673 Harmonic Spectrum C (Rectangle Wave) Preset;
#N canvas 25 23 1415 855 freq.calc.rect 0;
#X obj 54 111 until;
#X obj 115 133 + 1;
#X obj 54 133 float 1;
#X obj 189 386 f;
#X text 226 386 the iterator is stored here as an index to be used
by the [route] object, f 72;
#X text 142 133 iterator \, increase by 1 each time [until] sends a
"bang";
#X obj 117 351 trigger b f;
#X obj 135 427 pack f f;
#X text 196 425 combine the iterator/partial number with the calculated
partial amplitude value as a pair for [route];
#X msg 295 233 1;
#X obj 295 211 sel 48;
#X text 341 207 this mechanism resets the iterator to "1" when the
max iterations have occured, f 40;
#X obj 328 233 loadbang;
#X obj 54 160 trigger f f;
#X text 131 157 send the iterator first to the loop mechanism \, then
to the [sel] object to test if the loop is over (and reset the iterator
back to 1);
#X obj 117 268 t f f, f 15;
#X obj 24 468 route 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
43 44 45 46 47 48, f 227;
#X obj 54 88 t f f;
#X msg 54 67 48;
#X obj 143 19 inlet;
#X text 184 18 Fundamental Frequency;
#X obj 54 20 inlet;
#X obj 24 524 send \$0-freq1a;
#X obj 220 524 send \$0-freq3a;
#X obj 414 524 send \$0-freq5a;
#X obj 610 524 send \$0-freq7a;
#X obj 804 524 send \$0-freq9a;
#X obj 997 524 send \$0-freq11a;
#X obj 1191 524 send \$0-freq13a;
#X obj 1386 524 send \$0-freq15a;
#X obj 24 551 send \$0-freq17a;
#X obj 220 551 send \$0-freq19a;
#X obj 414 551 send \$0-freq21a;
#X obj 611 551 send \$0-freq23a;
#X obj 805 551 send \$0-freq25a;
#X obj 998 551 send \$0-freq27a;
#X obj 1191 551 send \$0-freq29a;
#X obj 1386 551 send \$0-freq31a;
#X obj 24 578 send \$0-freq33a;
#X obj 220 578 send \$0-freq35a;
#X obj 415 578 send \$0-freq37a;
#X obj 611 578 send \$0-freq39a;
#X obj 807 578 send \$0-freq41a;
#X obj 1001 578 send \$0-freq43a;
#X obj 1194 578 send \$0-freq45a;
#X obj 1388 578 send \$0-freq47a;
#X obj 117 312 * 440;
#X connect 0 0 2 0;
#X connect 1 0 2 1;
#X connect 2 0 1 0;
#X connect 2 0 13 0;
#X connect 3 0 7 0;
#X connect 6 0 3 0;
#X connect 6 1 7 1;
#X connect 7 0 16 0;
#X connect 9 0 2 1;
#X connect 10 0 9 0;
#X connect 12 0 9 0;
#X connect 13 0 10 0;
#X connect 13 1 15 0;
#X connect 15 0 46 0;
#X connect 15 1 3 1;
#X connect 16 0 22 0;
#X connect 16 2 23 0;
#X connect 16 4 24 0;
#X connect 16 6 25 0;
#X connect 16 8 26 0;
#X connect 16 10 27 0;
#X connect 16 12 28 0;
#X connect 16 14 29 0;
#X connect 16 16 30 0;
#X connect 16 18 31 0;
#X connect 16 20 32 0;
#X connect 16 22 33 0;
#X connect 16 24 34 0;
#X connect 16 26 35 0;
#X connect 16 28 36 0;
#X connect 16 30 37 0;
#X connect 16 32 38 0;
#X connect 16 34 39 0;
#X connect 16 36 40 0;
#X connect 16 38 41 0;
#X connect 16 40 42 0;
#X connect 16 42 43 0;
#X connect 16 44 44 0;
#X connect 16 46 45 0;
#X connect 17 0 0 0;
#X connect 17 1 10 1;
#X connect 18 0 17 0;
#X connect 19 0 46 1;
#X connect 21 0 18 0;
#X connect 46 0 6 0;
#X restore 1481 747 pd freq.calc.rect;
#N canvas 25 23 1415 855 amp.calc.rect 0;
#X obj 52 91 until;
#X obj 113 113 + 1;
#X obj 52 113 float 1;
#X obj 115 298 /;
#X obj 187 386 f;
#X text 224 386 the iterator is stored here as an index to be used
by the [route] object, f 72;
#X text 140 113 iterator \, increase by 1 each time [until] sends a
"bang";
#X obj 115 351 trigger b f;
#X obj 133 427 pack f f;
#X text 194 425 combine the iterator/partial number with the calculated
partial amplitude value as a pair for [route];
#X msg 293 213 1;
#X obj 293 191 sel 48;
#X text 339 187 this mechanism resets the iterator to "1" when the
max iterations have occured, f 40;
#X obj 326 213 loadbang;
#X obj 52 140 trigger f f;
#X text 129 137 send the iterator first to the loop mechanism \, then
to the [sel] object to test if the loop is over (and reset the iterator
back to 1);
#X obj 115 271 swap 1;
#X floatatom 115 325 5 0 0 0 - - -, f 5;
#X obj 52 68 t f f;
#X msg 52 47 48;
#X obj 24 538 route 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
43 44 45 46 47 48, f 227;
#X obj 24 674 send \$0-amp1a;
#X obj 123 674 send \$0-amp2a;
#X obj 220 674 send \$0-amp3a;
#X obj 317 674 send \$0-amp4a;
#X obj 414 674 send \$0-amp5a;
#X obj 511 674 send \$0-amp6a;
#X obj 610 674 send \$0-amp7a;
#X obj 707 674 send \$0-amp8a;
#X obj 804 674 send \$0-amp9a;
#X obj 901 674 send \$0-amp10a;
#X obj 997 674 send \$0-amp11a;
#X obj 1095 674 send \$0-amp12a;
#X obj 1191 674 send \$0-amp13a;
#X obj 1386 674 send \$0-amp15a;
#X obj 1484 673 send \$0-amp16a;
#X obj 24 781 send \$0-amp17a;
#X obj 123 781 send \$0-amp18a;
#X obj 220 781 send \$0-amp19a;
#X obj 317 781 send \$0-amp20a;
#X obj 414 781 send \$0-amp21a;
#X obj 511 781 send \$0-amp22a;
#X obj 611 781 send \$0-amp23a;
#X obj 708 781 send \$0-amp24a;
#X obj 805 781 send \$0-amp25a;
#X obj 902 781 send \$0-amp26a;
#X obj 998 781 send \$0-amp27a;
#X obj 1191 781 send \$0-amp29a;
#X obj 1288 781 send \$0-amp30a;
#X obj 1386 781 send \$0-amp31a;
#X obj 1483 781 send \$0-amp32a;
#X obj 24 908 send \$0-amp33a;
#X obj 123 908 send \$0-amp34a;
#X obj 220 908 send \$0-amp35a;
#X obj 319 908 send \$0-amp36a;
#X obj 415 908 send \$0-amp37a;
#X obj 511 908 send \$0-amp38a;
#X obj 611 908 send \$0-amp39a;
#X obj 709 908 send \$0-amp40a;
#X obj 807 908 send \$0-amp41a;
#X obj 904 908 send \$0-amp42a;
#X obj 1001 908 send \$0-amp43a;
#X obj 1291 908 send \$0-amp46a;
#X obj 1388 908 send \$0-amp47a;
#X obj 1485 908 send \$0-amp48a;
#X obj 52 20 inlet;
#X obj 1095 781 send \$0-amp28a;
#X obj 1097 908 send \$0-amp44a;
#X obj 1194 908 send \$0-amp45a;
#X obj 133 449 t l b;
#X msg 160 474 0;
#X obj 1288 674 send \$0-amp14a;
#X text 195 473 All even partials need to be zeroed;
#X obj 115 188 t f f, f 15;
#X text 145 298 divide 1/n \, where n is the interator (and the partial
number), f 61;
#X connect 0 0 2 0;
#X connect 1 0 2 1;
#X connect 2 0 1 0;
#X connect 2 0 14 0;
#X connect 3 0 17 0;
#X connect 4 0 8 0;
#X connect 7 0 4 0;
#X connect 7 1 8 1;
#X connect 8 0 69 0;
#X connect 10 0 2 1;
#X connect 11 0 10 0;
#X connect 13 0 10 0;
#X connect 14 0 11 0;
#X connect 14 1 73 0;
#X connect 16 0 3 0;
#X connect 16 1 3 1;
#X connect 17 0 7 0;
#X connect 18 0 0 0;
#X connect 18 1 11 1;
#X connect 19 0 18 0;
#X connect 20 0 21 0;
#X connect 20 2 23 0;
#X connect 20 4 25 0;
#X connect 20 6 27 0;
#X connect 20 8 29 0;
#X connect 20 10 31 0;
#X connect 20 12 33 0;
#X connect 20 14 34 0;
#X connect 20 16 36 0;
#X connect 20 18 38 0;
#X connect 20 20 40 0;
#X connect 20 22 42 0;
#X connect 20 24 44 0;
#X connect 20 26 46 0;
#X connect 20 28 47 0;
#X connect 20 30 49 0;
#X connect 20 32 51 0;
#X connect 20 34 53 0;
#X connect 20 36 55 0;
#X connect 20 38 57 0;
#X connect 20 40 59 0;
#X connect 20 42 61 0;
#X connect 20 44 68 0;
#X connect 20 46 63 0;
#X connect 65 0 19 0;
#X connect 69 0 20 0;
#X connect 69 1 70 0;
#X connect 70 0 22 0;
#X connect 70 0 37 0;
#X connect 70 0 52 0;
#X connect 70 0 24 0;
#X connect 70 0 39 0;
#X connect 70 0 54 0;
#X connect 70 0 26 0;
#X connect 70 0 41 0;
#X connect 70 0 56 0;
#X connect 70 0 28 0;
#X connect 70 0 43 0;
#X connect 70 0 58 0;
#X connect 70 0 30 0;
#X connect 70 0 45 0;
#X connect 70 0 60 0;
#X connect 70 0 32 0;
#X connect 70 0 66 0;
#X connect 70 0 67 0;
#X connect 70 0 71 0;
#X connect 70 0 48 0;
#X connect 70 0 62 0;
#X connect 70 0 35 0;
#X connect 70 0 50 0;
#X connect 70 0 64 0;
#X connect 73 0 16 0;
#X connect 73 1 4 1;
#X restore 1641 742 pd amp.calc.rect;
#X obj 1488 816 bng 15 250 50 0 empty \$0-inharmonicspec empty 17 7
0 10 -262144 -1 -1;
#N canvas 26 23 592 344 freq.calc.inharm 0;
#X obj 246 291 send, f 5;
#X obj 244 64 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 246 160 float \$0;
#X obj 246 134 t b s;
#X obj 246 212 t b s;
#X obj 246 110 makefilename %%d-freq%da;
#X obj 246 186 makefilename;
#X msg 307 162 set \$1;
#X obj 241 39 inlet;
#N canvas 25 23 869 484 for.loop.1-48 0;
#X obj 54 111 until;
#X obj 115 133 + 1;
#X text 142 133 iterator \, increase by 1 each time [until] sends a
"bang";
#X text 341 207 this mechanism resets the iterator to "1" when the
max iterations have occured, f 40;
#X obj 328 233 loadbang;
#X obj 54 160 trigger f f;
#X text 131 157 send the iterator first to the loop mechanism \, then
to the [sel] object to test if the loop is over (and reset the iterator
back to 1);
#X obj 54 88 t f f;
#X obj 54 20 inlet;
#X obj 117 244 outlet;
#X obj 295 211 sel 48;
#X msg 54 67 48;
#X msg 295 233 1;
#X obj 54 133 float 1;
#X connect 0 0 13 0;
#X connect 1 0 13 1;
#X connect 4 0 12 0;
#X connect 5 0 10 0;
#X connect 5 1 9 0;
#X connect 7 0 0 0;
#X connect 8 0 11 0;
#X connect 10 0 12 0;
#X connect 11 0 7 0;
#X connect 12 0 13 1;
#X connect 13 0 1 0;
#X connect 13 0 5 0;
#X restore 246 87 pd for.loop.1-48;
#X obj 195 238 random 20001;
#X text 19 180 randomly choose partial frequency;
#X connect 1 0 9 0;
#X connect 2 0 6 0;
#X connect 3 0 2 0;
#X connect 3 1 7 0;
#X connect 4 0 10 0;
#X connect 4 1 0 1;
#X connect 5 0 3 0;
#X connect 6 0 4 0;
#X connect 7 0 6 0;
#X connect 8 0 1 0;
#X connect 9 0 5 0;
#X connect 10 0 0 0;
#X restore 1488 847 pd freq.calc.inharm;
#N canvas 2022 22 907 626 amp.calc.inharm 0;
#X obj 460 531 send, f 5;
#X obj 428 119 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 428 215 float \$0;
#X obj 428 189 t b s;
#X obj 428 241 makefilename;
#X msg 489 217 set \$1;
#X obj 428 94 inlet;
#N canvas 25 23 869 484 for.loop.1-48 0;
#X obj 54 111 until;
#X obj 115 133 + 1;
#X text 142 133 iterator \, increase by 1 each time [until] sends a
"bang";
#X text 341 207 this mechanism resets the iterator to "1" when the
max iterations have occured, f 40;
#X obj 328 233 loadbang;
#X obj 54 160 trigger f f;
#X text 131 157 send the iterator first to the loop mechanism \, then
to the [sel] object to test if the loop is over (and reset the iterator
back to 1);
#X obj 54 88 t f f;
#X obj 54 20 inlet;
#X obj 117 244 outlet;
#X obj 295 211 sel 48;
#X msg 54 67 48;
#X msg 295 233 1;
#X obj 54 133 float 1;
#X connect 0 0 13 0;
#X connect 1 0 13 1;
#X connect 4 0 12 0;
#X connect 5 0 10 0;
#X connect 5 1 9 0;
#X connect 7 0 0 0;
#X connect 8 0 11 0;
#X connect 10 0 12 0;
#X connect 11 0 7 0;
#X connect 12 0 13 1;
#X connect 13 0 1 0;
#X connect 13 0 5 0;
#X restore 428 142 pd for.loop.1-48;
#X text 172 266 randomly choose partial amp (weighted low so that our
signal won't be too loud), f 28;
#X obj 283 370 random 101;
#X obj 283 391 / 100;
#X obj 267 518 f;
#X obj 437 310 t b s;
#X obj 231 334 t b b;
#X obj 199 370 random 101;
#X obj 199 391 / 100;
#X obj 188 518 f;
#X obj 223 456 sel 1 0;
#X obj 223 422 <;
#X text 276 445 If left number is less \, send left number \, else
send right number;
#X text 78 508 store the two generated random values, f 17;
#X obj 745 564 print;
#X obj 737 520 pack f s;
#X obj 428 165 makefilename %%d-amp%da;
#X obj 248 573 * 0.25;
#X text 114 572 Scale all amplitudes to prevent clipping, f 20;
#X msg 626 334 0.020833;
#X connect 1 0 7 0;
#X connect 2 0 4 0;
#X connect 3 0 2 0;
#X connect 3 1 5 0;
#X connect 4 0 12 0;
#X connect 5 0 4 0;
#X connect 6 0 1 0;
#X connect 7 0 23 0;
#X connect 9 0 10 0;
#X connect 10 0 11 1;
#X connect 10 0 18 1;
#X connect 11 0 24 0;
#X connect 12 0 13 0;
#X connect 12 1 0 1;
#X connect 13 0 14 0;
#X connect 13 1 9 0;
#X connect 14 0 15 0;
#X connect 15 0 16 1;
#X connect 15 0 18 0;
#X connect 16 0 24 0;
#X connect 17 0 16 0;
#X connect 17 1 11 0;
#X connect 18 0 17 0;
#X connect 22 0 21 0;
#X connect 23 0 3 0;
#X connect 24 0 0 0;
#X restore 1630 846 pd amp.calc.inharm;
#X obj 82 1418 catch~ additive;
#X obj 81 1219 throw~ additive;
#X obj 82 1628 clip~ -0.99 0.99;
#X obj 91 1385 throw~ additive;
#X obj 578 454 vsl 15 115 0 127 0 1 \$0-gainslider empty Gain/Volume
-25 -10 0 12 -4032 -1 -1 0 1;
#X text 1482 433 Harmonic Spectrum A (Triangle Wave) Preset;
#X text 1484 542 Harmonic Spectrum B (Sawtooth Wave) Preset;
#N canvas 551 178 822 657 amp.calc.sine 0;
#X obj 251 309 send, f 5;
#X obj 153 57 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#N canvas 26 23 869 484 for.loop.2-48 0;
#X obj 54 111 until;
#X obj 115 133 + 1;
#X text 142 133 iterator \, increase by 1 each time [until] sends a
"bang";
#X text 341 207 this mechanism resets the iterator to "1" when the
max iterations have occured, f 40;
#X obj 328 233 loadbang;
#X obj 54 160 trigger f f;
#X text 131 157 send the iterator first to the loop mechanism \, then
to the [sel] object to test if the loop is over (and reset the iterator
back to 1);
#X obj 54 88 t f f;
#X obj 54 20 inlet;
#X obj 117 244 outlet;
#X obj 295 211 sel 48;
#X obj 54 133 float 1;
#X msg 295 233 1;
#X msg 54 67 48;
#X connect 0 0 11 0;
#X connect 1 0 11 1;
#X connect 4 0 12 0;
#X connect 5 0 10 0;
#X connect 5 1 9 0;
#X connect 7 0 0 0;
#X connect 8 0 13 0;
#X connect 10 0 12 0;
#X connect 11 0 1 0;
#X connect 11 0 5 0;
#X connect 12 0 11 1;
#X connect 13 0 7 0;
#X restore 251 122 pd for.loop.2-48;
#X msg 251 281 0;
#X obj 251 195 float \$0;
#X obj 251 169 t b s;
#X obj 251 247 t b s;
#X obj 251 221 makefilename;
#X msg 312 197 set \$1;
#X obj 251 145 makefilename %%d-amp%da;
#X obj 152 39 inlet;
#X text 348 77 set the amp of all partials to 0;
#X connect 1 0 2 0;
#X connect 2 0 9 0;
#X connect 3 0 0 0;
#X connect 4 0 7 0;
#X connect 5 0 4 0;
#X connect 5 1 8 0;
#X connect 6 0 3 0;
#X connect 6 1 0 1;
#X connect 7 0 6 0;
#X connect 8 0 7 0;
#X connect 9 0 5 0;
#X connect 10 0 1 0;
#X restore 1604 276 pd amp.calc.sine;
#N canvas 27 23 592 344 freq.calc.init 0;
#X obj 151 291 send, f 5;
#X obj 148 52 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X msg 151 250 0;
#X obj 151 160 float \$0;
#X obj 151 134 t b s;
#X obj 151 212 t b s;
#X obj 151 110 makefilename %%d-freq%da;
#X obj 151 186 makefilename;
#X msg 215 161 set \$1;
#X obj 145 27 inlet;
#N canvas 26 23 869 484 for.loop.1-48 0;
#X obj 54 111 until;
#X obj 115 133 + 1;
#X text 142 133 iterator \, increase by 1 each time [until] sends a
"bang";
#X text 341 207 this mechanism resets the iterator to "1" when the
max iterations have occured, f 40;
#X obj 328 233 loadbang;
#X obj 54 160 trigger f f;
#X text 131 157 send the iterator first to the loop mechanism \, then
to the [sel] object to test if the loop is over (and reset the iterator
back to 1);
#X obj 54 88 t f f;
#X obj 54 20 inlet;
#X obj 117 244 outlet;
#X obj 295 211 sel 48;
#X obj 54 133 float 1;
#X msg 54 67 48;
#X msg 295 233 1;
#X connect 0 0 11 0;
#X connect 1 0 11 1;
#X connect 4 0 13 0;
#X connect 5 0 10 0;
#X connect 5 1 9 0;
#X connect 7 0 0 0;
#X connect 8 0 12 0;
#X connect 10 0 13 0;
#X connect 11 0 1 0;
#X connect 11 0 5 0;
#X connect 12 0 7 0;
#X connect 13 0 11 1;
#X restore 151 87 pd for.loop.1-48;
#X text 246 32 sets all partials to 0;
#X connect 1 0 10 0;
#X connect 2 0 0 0;
#X connect 3 0 7 0;
#X connect 4 0 3 0;
#X connect 4 1 8 0;
#X connect 5 0 2 0;
#X connect 5 1 0 1;
#X connect 6 0 4 0;
#X connect 7 0 5 0;
#X connect 8 0 7 0;
#X connect 9 0 1 0;
#X connect 10 0 6 0;
#X restore 1484 276 pd freq.calc.init;
#X text 1481 297 All topmost [bang] buttons are remotely triggered
by the button's in the UI;
#X obj 1484 244 bng 15 250 50 0 empty \$0-idealnoise empty 17 7 0 10
-262144 -1 -1;
#X text 1480 188 Intialize;
#X obj 1482 214 loadbang;
#X text 1485 788 Inharmonic Spectrum;
#X obj 1488 909 bng 15 250 50 0 empty \$0-noise empty 17 7 0 10 -262144
-1 -1;
#N canvas 480 54 847 767 freq.calc.noise 0;
#X obj 286 633 send, f 5;
#X obj 282 183 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 286 502 float \$0;
#X obj 286 476 t b s;
#X obj 286 554 t b s;
#X obj 286 452 makefilename %%d-freq%da;
#X obj 286 528 makefilename;
#X msg 347 504 set \$1;
#X obj 282 161 inlet;
#N canvas 25 23 869 484 for.loop.1-48 0;
#X obj 54 111 until;
#X obj 115 133 + 1;
#X text 142 133 iterator \, increase by 1 each time [until] sends a
"bang";
#X text 341 207 this mechanism resets the iterator to "1" when the
max iterations have occured, f 40;
#X obj 328 233 loadbang;
#X obj 54 160 trigger f f;
#X text 131 157 send the iterator first to the loop mechanism \, then
to the [sel] object to test if the loop is over (and reset the iterator
back to 1);
#X obj 54 88 t f f;
#X obj 54 20 inlet;
#X obj 117 244 outlet;
#X obj 295 211 sel 48;
#X msg 54 67 48;
#X msg 295 233 1;
#X obj 54 133 float 1;
#X connect 0 0 13 0;
#X connect 1 0 13 1;
#X connect 4 0 12 0;
#X connect 5 0 10 0;
#X connect 5 1 9 0;
#X connect 7 0 0 0;
#X connect 8 0 11 0;
#X connect 10 0 12 0;
#X connect 11 0 7 0;
#X connect 12 0 13 1;
#X connect 13 0 1 0;
#X connect 13 0 5 0;
#X restore 286 429 pd for.loop.1-48;
#X obj 235 580 random 20001;
#X text 6 586 randomly choose partial frequency;
#X obj 560 178 bng 15 250 50 0 empty \$0-sine empty 17 7 0 10 -262144
-1 -1;
#X text 583 176 From Sine;
#X msg 513 346 0;
#X obj 560 204 bng 15 250 50 0 empty \$0-harmonicspec_b empty 17 7
0 10 -262144 -1 -1;
#X text 583 202 From Tri;
#X obj 560 230 bng 15 250 50 0 empty \$0-harmonicspec_a empty 17 7
0 10 -262144 -1 -1;
#X text 583 228 From Saw;
#X obj 560 256 bng 15 250 50 0 empty \$0-harmonicspec_c empty 17 7
0 10 -262144 -1 -1;
#X text 583 254 From Rect;
#X obj 560 282 bng 15 250 50 0 empty \$0-inharmonicspec empty 17 7
0 10 -262144 -1 -1;
#X text 583 280 From Inharm;
#X text 489 132 These buttons are from all the other presets \, which
will turn off the [metro] object, f 34;
#X msg 282 204 1;
#X text 301 36 The only difference between the "Inharmonic Spectrum"
and white noise is that the white noise module continuously generates
random values \, which then gives an even distribution of random (whole
number) frequencies \, thus approaching white noise. This continual
generation is provided by [metro].;
#X obj 282 387 metro 10;
#X text 267 129 When the white noise preset is triggered \, turn metro
on, f 28;
#X text 401 501 here \, the "set" command sets [makefilename] as if
its argument was the symbol output above. Then the \$0 locally generated
unique number replaces %d in the above symbol;
#X text 445 438 generates the symbol "%d-freqNa" where N is 1-48 generated
from the for loop above. the portion "%%d" from the argument is translated
to just "%d" so that we can use it as a replaceable element below;
#X obj 1101 109 bng 15 250 50 0 empty \$0-idealnoise empty 17 7 0 10
-262144 -1 -1;
#X obj 562 306 bng 15 250 50 0 empty \$0-idealnoise empty 17 7 0 10
-262144 -1 -1;
#X connect 1 0 24 0;
#X connect 2 0 6 0;
#X connect 3 0 2 0;
#X connect 3 1 7 0;
#X connect 4 0 10 0;
#X connect 4 1 0 1;
#X connect 5 0 3 0;
#X connect 6 0 4 0;
#X connect 7 0 6 0;
#X connect 8 0 1 0;
#X connect 9 0 5 0;
#X connect 10 0 0 0;
#X connect 12 0 14 0;
#X connect 14 0 26 0;
#X connect 15 0 14 0;
#X connect 17 0 14 0;
#X connect 19 0 14 0;
#X connect 21 0 14 0;
#X connect 24 0 26 0;
#X connect 26 0 9 0;
#X connect 31 0 14 0;
#X restore 1488 947 pd freq.calc.noise;
#X obj 185 537 bng 15 250 50 0 \$0-noise empty Noise_(Attempt_at_generating_white_noise_manually)
17 7 0 12 -4032 -1 -1;
#X obj 232 1419 noise~;
#X text 1485 888 Continuous Noise;
#X obj 185 555 bng 15 250 50 0 \$0-idealnoise empty Idealized_Noise
17 7 0 12 -4032 -1 -1;
#X obj 262 1442 bng 15 250 50 0 empty \$0-idealnoise empty 17 7 0 10
-262144 -1 -1;
#X msg 262 1462 0 \, 0.8 250;
#X obj 262 1483 line~;
#X obj 233 1516 *~;
#X obj 430 1435 bng 15 250 50 0 empty \$0-harmonicspec_a empty 17 7
0 10 -262144 -1 -1;
#X obj 407 1435 bng 15 250 50 0 empty \$0-harmonicspec_b empty 17 7
0 10 -262144 -1 -1;
#X obj 383 1436 bng 15 250 50 0 empty \$0-sine empty 17 7 0 10 -262144
-1 -1;
#X obj 450 1434 bng 15 250 50 0 empty \$0-harmonicspec_c empty 17 7
0 10 -262144 -1 -1;
#X obj 470 1435 bng 15 250 50 0 empty \$0-inharmonicspec empty 17 7
0 10 -262144 -1 -1;
#X obj 492 1434 bng 15 250 50 0 empty \$0-noise empty 17 7 0 10 -262144
-1 -1;
#X msg 381 1473 0;
#X text 382 1402 If any other preset is triggered \, silence the noise
oscillator immediately;
#X text 1945 940 This is the old version that constantly tried to recalculate
amplitudes \, because I erroneously thought white noise had random
amplitudes \, but it actually has consistent amplitudes, f 28;
#N canvas 26 23 847 767 amp.calc.noise.error 0;
#X obj 296 675 send, f 5;
#X obj 282 183 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 286 502 float \$0;
#X obj 286 476 t b s;
#X obj 286 554 t b s;
#X obj 286 528 makefilename;
#X msg 347 504 set \$1;
#X obj 282 161 inlet;
#N canvas 25 23 869 484 for.loop.1-48 0;
#X obj 54 111 until;
#X obj 115 133 + 1;
#X text 142 133 iterator \, increase by 1 each time [until] sends a
"bang";
#X text 341 207 this mechanism resets the iterator to "1" when the
max iterations have occured, f 40;
#X obj 328 233 loadbang;
#X obj 54 160 trigger f f;
#X text 131 157 send the iterator first to the loop mechanism \, then
to the [sel] object to test if the loop is over (and reset the iterator
back to 1);
#X obj 54 88 t f f;
#X obj 54 20 inlet;
#X obj 117 244 outlet;
#X obj 295 211 sel 48;
#X msg 54 67 48;
#X msg 295 233 1;
#X obj 54 133 float 1;
#X connect 0 0 13 0;
#X connect 1 0 13 1;
#X connect 4 0 12 0;
#X connect 5 0 10 0;
#X connect 5 1 9 0;
#X connect 7 0 0 0;
#X connect 8 0 11 0;
#X connect 10 0 12 0;
#X connect 11 0 7 0;
#X connect 12 0 13 1;
#X connect 13 0 1 0;
#X connect 13 0 5 0;
#X restore 286 429 pd for.loop.1-48;
#X obj 560 178 bng 15 250 50 0 empty \$0-sine empty 17 7 0 10 -262144
-1 -1;
#X text 583 176 From Sine;
#X msg 516 314 0;
#X obj 560 204 bng 15 250 50 0 empty \$0-harmonicspec_b empty 17 7
0 10 -262144 -1 -1;
#X text 583 202 From Tri;
#X obj 560 230 bng 15 250 50 0 empty \$0-harmonicspec_a empty 17 7
0 10 -262144 -1 -1;
#X text 583 228 From Saw;
#X obj 560 256 bng 15 250 50 0 empty \$0-harmonicspec_c empty 17 7
0 10 -262144 -1 -1;
#X text 583 254 From Rect;
#X obj 560 282 bng 15 250 50 0 empty \$0-inharmonicspec empty 17 7
0 10 -262144 -1 -1;
#X text 583 280 From Inharm;
#X text 489 132 These buttons are from all the other presets \, which
will turn off the [metro] object, f 34;
#X msg 282 204 1;
#X text 301 36 The only difference between the "Inharmonic Spectrum"
and white noise is that the white noise module continuously generates
random values \, which then gives an even distribution of random (whole
number) frequencies \, thus approaching white noise. This continual
generation is provided by [metro].;
#X text 267 129 When the white noise preset is triggered \, turn metro
on, f 28;
#X text 401 501 here \, the "set" command sets [makefilename] as if
its argument was the symbol output above. Then the \$0 locally generated
unique number replaces %d in the above symbol;
#X obj 286 452 makefilename %%d-amp%da;
#X text 445 438 generates the symbol "%d-ampNa" where N is 1-48 generated
from the for loop above. the portion "%%d" from the argument is translated
to just "%d" so that we can use it as a replaceable element below;
#X obj 235 580 random 100;
#X text 6 586 randomly choose partial amp;
#X obj 235 601 * 0.01;
#X obj 234 622 * 0.25;
#X obj 282 387 metro 5;
#X obj 578 315 bng 15 250 50 0 empty \$0-idealnoise empty 17 7 0 10
-262144 -1 -1;
#X connect 1 0 21 0;
#X connect 2 0 5 0;
#X connect 3 0 2 0;
#X connect 3 1 6 0;
#X connect 4 0 27 0;
#X connect 4 1 0 1;
#X connect 5 0 4 0;
#X connect 6 0 5 0;
#X connect 7 0 1 0;
#X connect 8 0 25 0;
#X connect 9 0 11 0;
#X connect 12 0 11 0;
#X connect 14 0 11 0;
#X connect 16 0 11 0;
#X connect 18 0 11 0;
#X connect 25 0 3 0;
#X connect 27 0 29 0;
#X connect 29 0 30 0;
#X connect 30 0 0 0;
#X connect 31 0 8 0;
#X connect 32 0 11 0;
#X restore 1762 945 pd amp.calc.noise.error;
#N canvas 2022 22 907 626 amp.calc.noise 0;
#X obj 460 531 send, f 5;
#X obj 428 119 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 428 215 float \$0;
#X obj 428 189 t b s;
#X obj 428 241 makefilename;
#X msg 489 217 set \$1;
#X obj 428 94 inlet;
#N canvas 25 23 869 484 for.loop.1-48 0;
#X obj 54 111 until;
#X obj 115 133 + 1;
#X text 142 133 iterator \, increase by 1 each time [until] sends a
"bang";
#X text 341 207 this mechanism resets the iterator to "1" when the
max iterations have occured, f 40;
#X obj 328 233 loadbang;
#X obj 54 160 trigger f f;
#X text 131 157 send the iterator first to the loop mechanism \, then
to the [sel] object to test if the loop is over (and reset the iterator
back to 1);
#X obj 54 88 t f f;
#X obj 54 20 inlet;
#X obj 117 244 outlet;
#X obj 295 211 sel 48;
#X msg 54 67 48;
#X msg 295 233 1;
#X obj 54 133 float 1;
#X connect 0 0 13 0;
#X connect 1 0 13 1;
#X connect 4 0 12 0;
#X connect 5 0 10 0;
#X connect 5 1 9 0;
#X connect 7 0 0 0;
#X connect 8 0 11 0;
#X connect 10 0 12 0;
#X connect 11 0 7 0;
#X connect 12 0 13 1;
#X connect 13 0 1 0;
#X connect 13 0 5 0;
#X restore 428 142 pd for.loop.1-48;
#X obj 437 310 t b s;
#X obj 745 564 print;
#X obj 737 520 pack f s;
#X obj 428 165 makefilename %%d-amp%da;
#X msg 384 414 0.020833;
#X connect 1 0 7 0;
#X connect 2 0 4 0;
#X connect 3 0 2 0;
#X connect 3 1 5 0;
#X connect 4 0 8 0;
#X connect 5 0 4 0;
#X connect 6 0 1 0;
#X connect 7 0 11 0;
#X connect 8 0 12 0;
#X connect 8 1 0 1;
#X connect 10 0 9 0;
#X connect 11 0 3 0;
#X connect 12 0 0 0;
#X restore 1630 946 pd amp.calc.noise;
#N canvas 26 23 1018 716 scope 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X array scope-\$0 250 float 1 black black;
#A 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;
#X coords 0 1 249 -1 400 280 1;
#X restore 107 122 graph;
#X obj 12 349 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X obj 12 373 metro 50;
#X obj 11 296 loadbang;
#X msg 11 320 1;
#X floatatom 51 348 5 0 0 0 - - -, f 5;
#X msg 53 324 250;
#X obj -47 411 tabwrite~ scope-\$0;
#X obj -46 95 inlet~;
#X text 513 253 0;
#X text 508 115 1;
#X text 509 390 -1;
#X connect 1 0 2 0;
#X connect 2 0 7 0;
#X connect 3 0 4 0;
#X connect 3 0 6 0;
#X connect 4 0 1 0;
#X connect 5 0 2 1;
#X connect 6 0 5 0;
#X connect 8 0 7 0;
#X coords 0 -1 1 1 450 325 2 100 100;
#X restore 833 568 pd scope;
#N canvas 27 23 1200 687 spectroscope 0;
#X obj 110 39 inlet~;
#N canvas 123 39 1142 661 spectrograph 0;
#N canvas 491 173 651 544 fft-analysis 0;
#X obj 15 164 *~;
#X obj 14 99 inlet~;
#X obj 15 218 rfft~;
#X obj 14 306 *~;
#X obj 56 306 *~;
#X obj 15 356 sqrt~;
#X obj 23 386 loadbang;
#X obj 23 449 tgl 15 0 empty empty empty 0 -6 0 8 -262144 -1 -1 1 1
;
#X obj 15 8 block~ 512;
#X text 225 131 tabreceive~ outputs array contents \,;
#X text 225 149 constantly \, every block. Here it's;
#X text 223 169 used to get the Hann window to;
#X text 225 187 multiply by the input.;
#X text 120 7 block~ object does no computation but declares this;
#X text 120 24 window to be operating at a different block size from
;
#X text 122 58 Fourier transform.;
#X text 121 40 the parent window. This determines the size of the;
#X text 76 99 The inlet~ automatically re-blocks to the new block size.
;
#X obj 15 332 +~;
#X text 94 308 Take the magnitude by squaring real and imaginary part
\, adding and taking square root.;
#X text 110 424 periodically graph the output. It appears every 512
samples (about 12 milliseconds) but we only update the graph 4 times
per second. The graph is back on the main (parent) window.;
#X text 82 215 forward real FFT. Like "fft~" \, but only one inlet
(for the real part) and only the first half of the output signals are
used. (The others are determined by symmetry: they're complex conjugates
of the first half \, in reverse order.) This takes 1/2 the CPU time
of "fft".;
#X obj 23 470 metro 250;
#X msg 23 410 1;
#X obj 35 140 tabreceive~ \$0-hann0;
#X obj 14 498 tabwrite~ \$0-timbre_spectrograph0;
#X connect 0 0 2 0;
#X connect 1 0 0 0;
#X connect 2 0 3 0;
#X connect 2 0 3 1;
#X connect 2 1 4 0;
#X connect 2 1 4 1;
#X connect 3 0 18 0;
#X connect 4 0 18 1;
#X connect 5 0 25 0;
#X connect 6 0 23 0;
#X connect 7 0 22 0;
#X connect 18 0 5 0;
#X connect 22 0 25 0;
#X connect 23 0 7 0;
#X connect 24 0 0 1;
#X restore 1094 205 pd fft-analysis;
#N canvas 26 23 450 300 (subpatch) 0;
#X array \$0-timbre_spectrograph0 256 float 0 black black;
#X coords 0 128 255 0 500 100 1;
#X restore 168 115 graph;
#N canvas 0 22 450 300 (subpatch) 0;
#X array \$0-hann0 512 float 1 black black;
#A 0 0 3.76403e-05 0.000150591 0.000338823 0.000602275 0.000940949
0.00135478 0.00184369 0.00240764 0.00304651 0.00376022 0.00454867 0.00541174
0.0063493 0.00736117 0.00844726 0.00960737 0.0108413 0.0121489 0.01353
0.0149844 0.0165118 0.018112 0.0197847 0.0215298 0.023347 0.0252359
0.0271963 0.029228 0.0313305 0.0335036 0.035747 0.0380602 0.0404431
0.0428951 0.045416 0.0480053 0.0506628 0.0533879 0.0561802 0.0590394
0.061965 0.0649565 0.0680136 0.0711357 0.0743224 0.0775732 0.0808876
0.0842652 0.0877054 0.0912076 0.0947714 0.0983962 0.102082 0.105827
0.109631 0.113495 0.117416 0.121396 0.125432 0.129524 0.133673 0.137876
0.142135 0.146447 0.150812 0.15523 0.159699 0.164221 0.168792 0.173414
0.178084 0.182803 0.18757 0.192384 0.197244 0.20215 0.207101 0.212096
0.217134 0.222215 0.227338 0.232501 0.237705 0.242949 0.248231 0.253551
0.258908 0.264302 0.269731 0.275194 0.280692 0.286222 0.291785 0.297379
0.303004 0.308658 0.314341 0.320053 0.325791 0.331555 0.337345 0.343159
0.348997 0.354858 0.36074 0.366644 0.372567 0.37851 0.384471 0.390449
0.396444 0.402455 0.40848 0.414519 0.420571 0.426635 0.43271 0.438795
0.444889 0.450991 0.457101 0.463218 0.46934 0.475466 0.481596 0.487729
0.493864 0.5 0.506136 0.512271 0.518404 0.524534 0.53066 0.536782 0.542899
0.549009 0.555111 0.561205 0.56729 0.573365 0.579429 0.585481 0.59152
0.597545 0.603556 0.609551 0.615529 0.62149 0.627433 0.633356 0.63926
0.645142 0.651003 0.656841 0.662655 0.668445 0.674209 0.679947 0.685659
0.691342 0.696996 0.702621 0.708215 0.713778 0.719308 0.724806 0.730269
0.735698 0.741092 0.746449 0.751769 0.757051 0.762295 0.767499 0.772663
0.777785 0.782866 0.787904 0.792899 0.79785 0.802756 0.807616 0.81243
0.817197 0.821916 0.826586 0.831208 0.83578 0.840301 0.84477 0.849188
0.853553 0.857865 0.862124 0.866327 0.870476 0.874568 0.878604 0.882584
0.886505 0.890369 0.894173 0.897918 0.901604 0.905229 0.908792 0.912295
0.915735 0.919112 0.922427 0.925678 0.928864 0.931986 0.935044 0.938035
0.940961 0.94382 0.946612 0.949337 0.951995 0.954584 0.957105 0.959557
0.96194 0.964253 0.966496 0.96867 0.970772 0.972804 0.974764 0.976653
0.97847 0.980215 0.981888 0.983488 0.985016 0.98647 0.987851 0.989159
0.990393 0.991553 0.992639 0.993651 0.994588 0.995451 0.99624 0.996953
0.997592 0.998156 0.998645 0.999059 0.999398 0.999661 0.999849 0.999962
1 0.999962 0.999849 0.999661 0.999398 0.999059 0.998645 0.998156 0.997592
0.996953 0.99624 0.995451 0.994588 0.993651 0.992639 0.991553 0.990393
0.989159 0.987851 0.98647 0.985016 0.983488 0.981888 0.980215 0.97847
0.976653 0.974764 0.972804 0.970772 0.968669 0.966496 0.964253 0.96194
0.959557 0.957105 0.954584 0.951995 0.949337 0.946612 0.94382 0.940961
0.938035 0.935043 0.931986 0.928864 0.925678 0.922427 0.919112 0.915735
0.912295 0.908792 0.905229 0.901604 0.897918 0.894173 0.890369 0.886505
0.882584 0.878604 0.874568 0.870476 0.866327 0.862123 0.857865 0.853553
0.849188 0.84477 0.840301 0.835779 0.831208 0.826586 0.821916 0.817197
0.81243 0.807616 0.802755 0.79785 0.792899 0.787904 0.782866 0.777785
0.772662 0.767499 0.762295 0.757051 0.751769 0.746449 0.741092 0.735698
0.730269 0.724806 0.719308 0.713777 0.708215 0.702621 0.696996 0.691342
0.685659 0.679948 0.674209 0.668445 0.662655 0.656841 0.651003 0.645142
0.63926 0.633356 0.627433 0.62149 0.615529 0.60955 0.603556 0.597545
0.59152 0.585481 0.579429 0.573365 0.56729 0.561205 0.555111 0.549008
0.542899 0.536782 0.53066 0.524534 0.518404 0.512271 0.506136 0.5 0.493864
0.487729 0.481596 0.475466 0.46934 0.463218 0.457101 0.450991 0.444889
0.438794 0.43271 0.426635 0.420571 0.414519 0.40848 0.402455 0.396444
0.390449 0.384471 0.37851 0.372567 0.366643 0.36074 0.354858 0.348997
0.343159 0.337345 0.331555 0.325791 0.320052 0.314341 0.308658 0.303004
0.297379 0.291785 0.286222 0.280692 0.275194 0.269731 0.264302 0.258908
0.253551 0.248231 0.242949 0.237705 0.232501 0.227337 0.222215 0.217134
0.212096 0.207101 0.20215 0.197244 0.192384 0.18757 0.182803 0.178084
0.173414 0.168792 0.16422 0.159699 0.15523 0.150812 0.146446 0.142134
0.137876 0.133673 0.129524 0.125432 0.121396 0.117416 0.113495 0.109631
0.105827 0.102081 0.0983962 0.0947713 0.0912075 0.0877053 0.0842652
0.0808876 0.0775732 0.0743224 0.0711357 0.0680135 0.0649565 0.0619649
0.0590393 0.0561801 0.0533878 0.0506627 0.0480053 0.0454159 0.0428951
0.0404431 0.0380602 0.035747 0.0335036 0.0313305 0.0292279 0.0271963
0.0252359 0.0233469 0.0215298 0.0197847 0.0181119 0.0165117 0.0149844
0.01353 0.0121489 0.0108413 0.00960734 0.00844723 0.00736117 0.00634927
0.00541171 0.00454867 0.00376022 0.00304648 0.00240761 0.00184369 0.00135478
0.000940949 0.000602275 0.000338793 0.000150591 3.76403e-05;
#X coords 0 1 511 0 200 120 1;
#X restore 1399 132 graph;
#X msg 1341 130 0;
#X obj 1235 179 osc~;
#X obj 1235 131 samplerate~;
#X obj 1235 202 *~ -0.5;
#X obj 1235 225 +~ 0.5;
#X text 1385 124 1;
#X text 1378 242 0;
#X text 1394 255 0;
#X obj 1235 155 / 512;
#X obj 1228 70 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X text 1504 109 Hann window;
#X text 1283 177 period 512;
#X text 1260 64 recalculate Hann;
#X text 1284 77 window table;
#X text 1580 258 511;
#X obj 1227 40 inlet;
#X obj 1054 232 outlet~;
#X obj 1054 28 inlet~;
#X text 1108 234 Thru;
#X obj 1330 34 loadbang;
#X text 155 226 20;
#X text 171 226 500;
#X text 186 238 1000;
#X text 200 226 2000;
#X text 244 225 4000;
#X text 164 238 250;
#X text 163 213 |;
#X text 177 213 |;
#X text 187 213 |;
#X text 209 213 |;
#X text 254 213 |;
#X text 300 213 |;
#X text 291 225 6000;
#X text 349 213 |;
#X text 338 225 8000;
#X text 391 213 |;
#X text 380 225 10000;
#X text 436 213 |;
#X text 425 225 12000;
#X text 482 213 |;
#X text 471 225 14000;
#X text 528 213 |;
#X text 517 225 16000;
#X text 574 213 |;
#X text 563 225 18000;
#X text 617 213 |;
#X text 606 225 20000;
#X text 664 213 |;
#X text 653 225 22000;
#X text 354 253 Frequency in Hz;
#X text 101 155 Magni-tude, f 6;
#X text 147 158 0.5-;
#X text 154 108 1;
#X text 154 205 0;
#X text 170 213 |;
#X obj 1227 250 tabwrite~ \$0-hann0;
#X connect 3 0 4 1;
#X connect 4 0 6 0;
#X connect 5 0 11 0;
#X connect 6 0 7 0;
#X connect 7 0 58 0;
#X connect 11 0 4 0;
#X connect 12 0 5 0;
#X connect 12 0 3 0;
#X connect 12 0 58 0;
#X connect 18 0 12 0;
#X connect 20 0 0 0;
#X connect 20 0 19 0;
#X connect 22 0 12 0;
#X coords 0 -1 1 1 590 175 2 100 100;
#X restore 109 113 pd spectrograph;
#X connect 0 0 1 0;
#X coords 0 -1 1 1 625 200 2 100 100;
#X restore 721 354 pd spectroscope;
#X text 182 407 Preset Timbres ------------------------------------------------
, f 64;
#X obj 102 103 cnv 15 1250 60 empty empty empty 20 12 0 14 -261234
-66577 0;
#X text 105 105 Introduction to the Fundamentals of Sound and Acoustics
, f 56;
#X text 105 136 Chapter 5 - Timbre and Spectrum;
#X text 113 178 We have discussed how sound is simply the increase
and decrease of air pressure caused by the vibration of a mass. This
creates a sound wave that travels from the vibrating mass to our ears.
But how does this vibration make one source sound different than another?
The aspect of a sound wave that makes sounds unique is known as TIMBRE.
, f 73;
#X obj 349 1612 catch~ \$0-dac;
#X msg 1911 225 \; pd dsp 1;
#X obj 347 1670 dac~ 1 2 3 4 5 6;
#X connect 0 0 649 0;
#X connect 0 0 648 0;
#X connect 2 0 11 0;
#X connect 2 0 13 0;
#X connect 4 0 15 0;
#X connect 4 0 16 0;
#X connect 11 0 12 0;
#X connect 13 0 14 0;
#X connect 15 0 17 0;
#X connect 16 0 18 0;
#X connect 19 0 603 0;
#X connect 19 0 602 0;
#X connect 260 0 266 0;
#X connect 261 0 266 1;
#X connect 262 0 260 0;
#X connect 266 0 614 0;
#X connect 267 0 272 0;
#X connect 268 0 272 1;
#X connect 269 0 267 0;
#X connect 272 0 614 0;
#X connect 273 0 278 0;
#X connect 274 0 278 1;
#X connect 275 0 273 0;
#X connect 278 0 614 0;
#X connect 279 0 283 1;
#X connect 280 0 284 0;
#X connect 283 0 614 0;
#X connect 284 0 283 0;
#X connect 285 0 289 1;
#X connect 286 0 290 0;
#X connect 289 0 614 0;
#X connect 290 0 289 0;
#X connect 291 0 295 1;
#X connect 292 0 296 0;
#X connect 295 0 614 0;
#X connect 296 0 295 0;
#X connect 297 0 302 0;
#X connect 298 0 302 1;
#X connect 299 0 297 0;
#X connect 302 0 614 0;
#X connect 303 0 308 0;
#X connect 304 0 308 1;
#X connect 305 0 303 0;
#X connect 308 0 614 0;
#X connect 309 0 314 0;
#X connect 310 0 314 1;
#X connect 311 0 309 0;
#X connect 314 0 614 0;
#X connect 315 0 319 1;
#X connect 316 0 320 0;
#X connect 319 0 614 0;
#X connect 320 0 319 0;
#X connect 321 0 325 1;
#X connect 322 0 326 0;
#X connect 325 0 614 0;
#X connect 326 0 325 0;
#X connect 327 0 331 1;
#X connect 328 0 332 0;
#X connect 331 0 614 0;
#X connect 332 0 331 0;
#X connect 345 0 350 0;
#X connect 346 0 350 1;
#X connect 347 0 345 0;
#X connect 350 0 614 0;
#X connect 351 0 356 0;
#X connect 352 0 356 1;
#X connect 353 0 351 0;
#X connect 356 0 614 0;
#X connect 357 0 362 0;
#X connect 358 0 362 1;
#X connect 359 0 357 0;
#X connect 362 0 614 0;
#X connect 363 0 367 1;
#X connect 364 0 368 0;
#X connect 367 0 614 0;
#X connect 368 0 367 0;
#X connect 369 0 373 1;
#X connect 370 0 374 0;
#X connect 373 0 614 0;
#X connect 374 0 373 0;
#X connect 375 0 379 1;
#X connect 376 0 380 0;
#X connect 379 0 614 0;
#X connect 380 0 379 0;
#X connect 381 0 386 0;
#X connect 382 0 386 1;
#X connect 383 0 381 0;
#X connect 386 0 614 0;
#X connect 387 0 392 0;
#X connect 388 0 392 1;
#X connect 389 0 387 0;
#X connect 392 0 614 0;
#X connect 393 0 398 0;
#X connect 394 0 398 1;
#X connect 395 0 393 0;
#X connect 398 0 614 0;
#X connect 399 0 403 1;
#X connect 400 0 404 0;
#X connect 403 0 614 0;
#X connect 404 0 403 0;
#X connect 405 0 409 1;
#X connect 406 0 410 0;
#X connect 409 0 614 0;
#X connect 410 0 409 0;
#X connect 411 0 415 1;
#X connect 412 0 416 0;
#X connect 415 0 614 0;
#X connect 416 0 415 0;
#X connect 429 0 615 0;
#X connect 430 0 429 1;
#X connect 431 0 430 0;
#X connect 433 0 438 0;
#X connect 434 0 438 1;
#X connect 435 0 433 0;
#X connect 438 0 616 0;
#X connect 439 0 444 0;
#X connect 440 0 444 1;
#X connect 441 0 439 0;
#X connect 444 0 616 0;
#X connect 445 0 450 0;
#X connect 446 0 450 1;
#X connect 447 0 445 0;
#X connect 450 0 616 0;
#X connect 451 0 455 1;
#X connect 452 0 456 0;
#X connect 455 0 616 0;
#X connect 456 0 455 0;
#X connect 457 0 461 1;
#X connect 458 0 462 0;
#X connect 461 0 616 0;
#X connect 462 0 461 0;
#X connect 463 0 467 1;
#X connect 464 0 468 0;
#X connect 467 0 616 0;
#X connect 468 0 467 0;
#X connect 469 0 474 0;
#X connect 470 0 474 1;
#X connect 471 0 469 0;
#X connect 474 0 616 0;
#X connect 475 0 480 0;
#X connect 476 0 480 1;
#X connect 477 0 475 0;
#X connect 480 0 616 0;
#X connect 481 0 486 0;
#X connect 482 0 486 1;
#X connect 483 0 481 0;
#X connect 486 0 616 0;
#X connect 487 0 491 1;
#X connect 488 0 492 0;
#X connect 491 0 616 0;
#X connect 492 0 491 0;
#X connect 493 0 497 1;
#X connect 494 0 498 0;
#X connect 497 0 616 0;
#X connect 498 0 497 0;
#X connect 499 0 503 1;
#X connect 500 0 504 0;
#X connect 503 0 616 0;
#X connect 504 0 503 0;
#X connect 506 0 511 0;
#X connect 507 0 511 1;
#X connect 508 0 506 0;
#X connect 511 0 616 0;
#X connect 512 0 517 0;
#X connect 513 0 517 1;
#X connect 514 0 512 0;
#X connect 517 0 616 0;
#X connect 518 0 523 0;
#X connect 519 0 523 1;
#X connect 520 0 518 0;
#X connect 523 0 616 0;
#X connect 524 0 528 1;
#X connect 525 0 529 0;
#X connect 528 0 616 0;
#X connect 529 0 528 0;
#X connect 530 0 534 1;
#X connect 531 0 535 0;
#X connect 534 0 616 0;
#X connect 535 0 534 0;
#X connect 536 0 540 1;
#X connect 537 0 541 0;
#X connect 540 0 616 0;
#X connect 541 0 540 0;
#X connect 542 0 547 0;
#X connect 543 0 547 1;
#X connect 544 0 542 0;
#X connect 547 0 616 0;
#X connect 548 0 553 0;
#X connect 549 0 553 1;
#X connect 550 0 548 0;
#X connect 553 0 616 0;
#X connect 554 0 559 0;
#X connect 555 0 559 1;
#X connect 556 0 554 0;
#X connect 559 0 616 0;
#X connect 560 0 564 1;
#X connect 561 0 565 0;
#X connect 564 0 616 0;
#X connect 565 0 564 0;
#X connect 566 0 570 1;
#X connect 567 0 571 0;
#X connect 570 0 616 0;
#X connect 571 0 570 0;
#X connect 572 0 576 1;
#X connect 573 0 577 0;
#X connect 576 0 616 0;
#X connect 577 0 576 0;
#X connect 604 0 605 0;
#X connect 604 0 606 0;
#X connect 605 0 608 0;
#X connect 606 0 609 0;
#X connect 610 0 612 0;
#X connect 610 0 611 0;
#X connect 613 0 429 0;
#X connect 615 0 265 0;
#X connect 615 0 657 0;
#X connect 615 0 657 1;
#X connect 623 0 621 0;
#X connect 623 0 620 0;
#X connect 623 0 656 0;
#X connect 625 0 623 0;
#X connect 627 0 628 0;
#X connect 627 0 647 0;
#X connect 630 0 636 0;
#X connect 633 0 634 0;
#X connect 634 0 635 0;
#X connect 635 0 636 1;
#X connect 636 0 429 0;
#X connect 637 0 643 0;
#X connect 638 0 643 0;
#X connect 639 0 643 0;
#X connect 640 0 643 0;
#X connect 641 0 643 0;
#X connect 642 0 643 0;
#X connect 643 0 635 0;
#X connect 655 0 657 0;
#X connect 655 0 657 1;
#X connect 655 0 657 4;
#X connect 655 0 657 5;
#X coords 0 -1 1 1 1255 800 2 100 100;
#X restore 5 -77 pd main;
#X obj 1056 -49 declare -lib dependencies;
#N canvas 128 109 1191 682 06_TIMBRE_AND_WAVESHAPE 0;
#N canvas 2342 94 1413 832 demonstration.wave 0;
#X floatatom 847 302 0 0 0 0 - - -;
#X obj 846 228 trigger f f;
#X obj 1017 269 + 1;
#X obj 987 247 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 846 209 line;
#X obj 987 270 f 0;
#X msg 1017 245 0;
#X obj 1017 224 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 846 188 0 \, 1000 10000;
#X obj 1022 131 list \$0;
#X text 491 254 Time (Seconds);
#X text 377 218 -1;
#X text 365 194 -0.5;
#X text 382 123 1;
#X text 370 145 0.5;
#X text 382 172 0;
#X text 301 166 Amplitude;
#X text 304 177 (Linear);
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-fundamental 360 float 1 black black;
#A 0 0.0348995 0.0697564 0.104528 0.139173 0.173648 0.207912 0.241922
0.275637 0.309017 0.34202 0.374606 0.406736 0.438371 0.469471 0.5 0.529919
0.559192 0.587785 0.615661 0.642787 0.66913 0.694658 0.719339 0.743144
0.766044 0.78801 0.809017 0.829037 0.848048 0.866025 0.882947 0.898794
0.913545 0.927184 0.939692 0.951056 0.961261 0.970295 0.978147 0.984808
0.990268 0.994522 0.997564 0.999391 1 0.999391 0.997564 0.994522 0.990268
0.984808 0.978148 0.970296 0.961262 0.951057 0.939693 0.927184 0.913546
0.898795 0.882948 0.866026 0.848049 0.829039 0.809018 0.788012 0.766046
0.743146 0.719341 0.69466 0.669132 0.642789 0.615663 0.587787 0.559195
0.529921 0.500002 0.469473 0.438373 0.406739 0.374609 0.342022 0.309019
0.27564 0.241924 0.207914 0.173651 0.139175 0.104531 0.0697588 0.0349018
2.53518e-06 -0.034897 -0.069754 -0.104526 -0.139171 -0.173645 -0.207909
-0.241919 -0.275635 -0.309014 -0.342017 -0.374604 -0.406734 -0.438368
-0.469469 -0.499997 -0.529917 -0.55919 -0.587783 -0.615659 -0.642785
-0.669128 -0.694656 -0.719338 -0.743143 -0.766042 -0.788009 -0.809015
-0.829036 -0.848046 -0.866024 -0.882946 -0.898792 -0.913544 -0.927183
-0.939691 -0.951055 -0.961261 -0.970295 -0.978147 -0.984807 -0.990268
-0.994521 -0.997564 -0.999391 -1 -0.999391 -0.997564 -0.994522 -0.990269
-0.984808 -0.978148 -0.970297 -0.961263 -0.951058 -0.939694 -0.927185
-0.913547 -0.898796 -0.88295 -0.866027 -0.848051 -0.82904 -0.809019
-0.788013 -0.766047 -0.743148 -0.719343 -0.694662 -0.669134 -0.642791
-0.615665 -0.587789 -0.559197 -0.529923 -0.500004 -0.469476 -0.438375
-0.406741 -0.374611 -0.342025 -0.309021 -0.275642 -0.241926 -0.207917
-0.173653 -0.139178 -0.104533 -0.0697611 -0.0349048 -5.07036e-06 0.0348942
0.0697515 0.104524 0.139168 0.173643 0.207906 0.241917 0.275632 0.309012
0.342015 0.374602 0.406732 0.438366 0.469467 0.499995 0.529914 0.559188
0.587781 0.615657 0.642783 0.669126 0.694654 0.719336 0.743141 0.766041
0.788007 0.809013 0.829034 0.848045 0.866023 0.882945 0.898791 0.913543
0.927182 0.939691 0.951055 0.96126 0.970294 0.978146 0.984807 0.990267
0.994521 0.997564 0.999391 1 0.999391 0.997564 0.994523 0.990269 0.984809
0.978149 0.970297 0.961264 0.951058 0.939695 0.927186 0.913548 0.898797
0.882951 0.866029 0.848052 0.829041 0.809021 0.788015 0.766049 0.743149
0.719345 0.694663 0.669136 0.642793 0.615667 0.587791 0.559199 0.529925
0.500006 0.469478 0.438377 0.406743 0.374613 0.342027 0.309024 0.275644
0.241929 0.207919 0.173656 0.139181 0.104535 0.0697637 0.0349069 7.60554e-06
-0.0348917 -0.0697485 -0.104521 -0.139166 -0.173641 -0.207904 -0.241914
-0.27563 -0.30901 -0.342013 -0.374599 -0.406729 -0.438364 -0.469465
-0.499993 -0.529913 -0.559186 -0.587779 -0.615656 -0.642782 -0.669124
-0.694652 -0.719334 -0.743139 -0.766039 -0.788005 -0.809012 -0.829033
-0.848044 -0.866022 -0.882944 -0.89879 -0.913542 -0.927181 -0.93969
-0.951054 -0.961259 -0.970294 -0.978146 -0.984806 -0.990267 -0.994521
-0.997563 -0.999391 -1 -0.999391 -0.997565 -0.994523 -0.990269 -0.984809
-0.978149 -0.970298 -0.961264 -0.95106 -0.939696 -0.927188 -0.913549
-0.898798 -0.882952 -0.86603 -0.848053 -0.829043 -0.809022 -0.788016
-0.76605 -0.743152 -0.719347 -0.694665 -0.669138 -0.642795 -0.615669
-0.587793 -0.559201 -0.529927 -0.500008 -0.46948 -0.438381 -0.406746
-0.374616 -0.34203 -0.309027 -0.275647 -0.241931 -0.207921 -0.173657
-0.139182 -0.104538 -0.0697671 -0.0349104 -0.98481;
#X coords 0 1 359 -1 300 100 1;
#X restore 398 130 graph;
#X obj 1022 112 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 845 164 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text 491 414 Time (Seconds);
#X text 377 378 -1;
#X text 365 354 -0.5;
#X text 382 283 1;
#X text 370 305 0.5;
#X text 382 332 0;
#X text 301 326 Amplitude;
#X text 304 337 (Linear);
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-added_partial 360 float 1 black black;
#A 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;
#X coords 0 1 359 -1 300 100 1;
#X restore 398 290 graph;
#X text 491 574 Time (Seconds);
#X text 377 538 -1;
#X text 365 514 -0.5;
#X text 382 443 1;
#X text 370 465 0.5;
#X text 382 492 0;
#X text 301 486 Amplitude;
#X text 304 497 (Linear);
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-current_sum 360 float 1 black black;
#A 0 0.0348995 0.0697564 0.104528 0.139173 0.173648 0.207912 0.241922
0.275637 0.309017 0.34202 0.374606 0.406736 0.438371 0.469471 0.5 0.529919
0.559192 0.587785 0.615661 0.642787 0.66913 0.694658 0.719339 0.743144
0.766044 0.78801 0.809017 0.829037 0.848048 0.866025 0.882947 0.898794
0.913545 0.927184 0.939692 0.951056 0.961261 0.970295 0.978147 0.984808
0.990268 0.994522 0.997564 0.999391 1 0.999391 0.997564 0.994522 0.990268
0.984808 0.978148 0.970296 0.961262 0.951057 0.939693 0.927184 0.913546
0.898795 0.882948 0.866026 0.848049 0.829039 0.809018 0.788012 0.766046
0.743146 0.719341 0.69466 0.669132 0.642789 0.615663 0.587787 0.559195
0.529921 0.500002 0.469473 0.438373 0.406739 0.374609 0.342022 0.309019
0.27564 0.241924 0.207914 0.173651 0.139175 0.104531 0.0697588 0.0349018
2.53518e-06 -0.034897 -0.069754 -0.104526 -0.139171 -0.173645 -0.207909
-0.241919 -0.275635 -0.309014 -0.342017 -0.374604 -0.406734 -0.438368
-0.469469 -0.499997 -0.529917 -0.55919 -0.587783 -0.615659 -0.642785
-0.669128 -0.694656 -0.719338 -0.743143 -0.766042 -0.788009 -0.809015
-0.829036 -0.848046 -0.866024 -0.882946 -0.898792 -0.913544 -0.927183
-0.939691 -0.951055 -0.961261 -0.970295 -0.978147 -0.984807 -0.990268
-0.994521 -0.997564 -0.999391 -1 -0.999391 -0.997564 -0.994522 -0.990269
-0.984808 -0.978148 -0.970297 -0.961263 -0.951058 -0.939694 -0.927185
-0.913547 -0.898796 -0.88295 -0.866027 -0.848051 -0.82904 -0.809019
-0.788013 -0.766047 -0.743148 -0.719343 -0.694662 -0.669134 -0.642791
-0.615665 -0.587789 -0.559197 -0.529923 -0.500004 -0.469476 -0.438375
-0.406741 -0.374611 -0.342025 -0.309021 -0.275642 -0.241926 -0.207917
-0.173653 -0.139178 -0.104533 -0.0697611 -0.0349048 -5.07036e-06 0.0348942
0.0697515 0.104524 0.139168 0.173643 0.207906 0.241917 0.275632 0.309012
0.342015 0.374602 0.406732 0.438366 0.469467 0.499995 0.529914 0.559188
0.587781 0.615657 0.642783 0.669126 0.694654 0.719336 0.743141 0.766041
0.788007 0.809013 0.829034 0.848045 0.866023 0.882945 0.898791 0.913543
0.927182 0.939691 0.951055 0.96126 0.970294 0.978146 0.984807 0.990267
0.994521 0.997564 0.999391 1 0.999391 0.997564 0.994523 0.990269 0.984809
0.978149 0.970297 0.961264 0.951058 0.939695 0.927186 0.913548 0.898797
0.882951 0.866029 0.848052 0.829041 0.809021 0.788015 0.766049 0.743149
0.719345 0.694663 0.669136 0.642793 0.615667 0.587791 0.559199 0.529925
0.500006 0.469478 0.438377 0.406743 0.374613 0.342027 0.309024 0.275644
0.241929 0.207919 0.173656 0.139181 0.104535 0.0697637 0.0349069 7.60554e-06
-0.0348917 -0.0697485 -0.104521 -0.139166 -0.173641 -0.207904 -0.241914
-0.27563 -0.30901 -0.342013 -0.374599 -0.406729 -0.438364 -0.469465
-0.499993 -0.529913 -0.559186 -0.587779 -0.615656 -0.642782 -0.669124
-0.694652 -0.719334 -0.743139 -0.766039 -0.788005 -0.809012 -0.829033
-0.848044 -0.866022 -0.882944 -0.89879 -0.913542 -0.927181 -0.93969
-0.951054 -0.961259 -0.970294 -0.978146 -0.984806 -0.990267 -0.994521
-0.997563 -0.999391 -1 -0.999391 -0.997565 -0.994523 -0.990269 -0.984809
-0.978149 -0.970298 -0.961264 -0.95106 -0.939696 -0.927188 -0.913549
-0.898798 -0.882952 -0.86603 -0.848053 -0.829043 -0.809022 -0.788016
-0.76605 -0.743152 -0.719347 -0.694665 -0.669138 -0.642795 -0.615669
-0.587793 -0.559201 -0.529927 -0.500008 -0.46948 -0.438381 -0.406746
-0.374616 -0.34203 -0.309027 -0.275647 -0.241931 -0.207921 -0.173657
-0.139182 -0.104538 -0.0697671 -0.0349104 -0.98481;
#X coords 0 1 359 -1 300 100 1;
#X restore 398 450 graph;
#X floatatom 1322 1211 0 0 0 0 - - -;
#X obj 1322 1110 trigger f f;
#X obj 1479 1177 + 1;
#X obj 1442 1141 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 1322 1081 line;
#X obj 1442 1176 f 0;
#X msg 1479 1142 0;
#X obj 1479 1094 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 1322 1060 0 \, 1000 10000;
#X obj 1528 778 list \$0;
#X obj 1527 736 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 1167 1044 bng 15 250 50 0 empty empty empty 17 7 0 10 -204800
-1 -1;
#X text 1868 1801 .;
#X obj 1304 1239 +;
#X floatatom 1160 1196 0 0 0 0 - - -;
#X obj 1160 1112 trigger f f;
#X obj 1160 1083 line;
#X msg 1160 1062 0 \, 1000 10000;
#X obj 845 116 loadbang;
#X obj 125 378 bng 15 250 50 0 \$0-reset-r empty Reset 22 7 0 12 -204800
-1 -1;
#X obj 845 140 t b b;
#X obj 1528 705 loadbang;
#X obj 1160 1140 expr 0.5 * sin((2 * 3.14159 * $f1 / 360) + 0), f
20;
#X obj 1320 1138 expr 0.5 * sin((2 * 3.14159 * $f1 / 360) + 3.15),
f 15;
#X msg 1542 808 \; \$1-phase12 xticks 0 90 1;
#X msg 1537 847 \; \$1-phase12 yticks 0 0.1 5;
#X msg 1806 839 \; \$1-phase12 const 1;
#X obj 1726 748 r \$0-phase10_11_reset-r;
#X obj 1164 1013 r \$0-phase10_11_combine-r;
#X obj 1320 1275 tabwrite \$0-phase12;
#X obj 818 115 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text 814 78 Initialization;
#X text 394 391 0;
#X text 461 390 0.25;
#X text 540 390 0.5;
#X text 611 390 0.75;
#X text 690 390 1;
#X text 394 231 0;
#X text 461 230 0.25;
#X text 540 230 0.5;
#X text 611 230 0.75;
#X text 690 230 1;
#X text 394 551 0;
#X text 461 550 0.25;
#X text 540 550 0.5;
#X text 611 550 0.75;
#X text 690 550 1;
#X obj 847 250 expr 1 * sin((2 * 3.14159 * $f1 / 360) + 0), f 18;
#X msg 1029 152 \; \$1-fundamental xticks 0 90 1;
#X msg 1021 184 \; \$1-fundamental yticks 0 0.1 5;
#X obj 847 322 tabwrite \$0-fundamental;
#X floatatom 759 631 0 0 0 0 - - -;
#X obj 758 557 trigger f f;
#X obj 929 588 + 1;
#X obj 899 566 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 758 528 line;
#X obj 899 589 f 0;
#X msg 929 564 0;
#X obj 929 543 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 758 497 0 \, 1000 10000;
#X obj 1693 160 list \$0;
#X obj 1693 141 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 757 473 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 1693 114 loadbang;
#X obj 757 449 t b b;
#X obj 757 426 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 1709 186 \; \$1-added_partial xticks 0 90 1;
#X msg 1701 222 \; \$1-added_partial yticks 0 0.1 5;
#X obj 759 579 expr 0.5 * sin((4 * 3.14159 * $f1 / 360) + 0), f 18
;
#X obj 126 159 bng 15 250 50 0 \$0-partial2-r empty empty 17 7 0 10
-204800 -1 -1;
#X obj 803 911 tabread \$0-added_partial;
#X floatatom 1287 302 0 0 0 0 - - -;
#X obj 1286 228 trigger f f;
#X obj 1457 269 + 1;
#X obj 1427 247 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 1286 209 line;
#X obj 1427 270 f 0;
#X msg 1457 245 0;
#X obj 1457 224 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 1286 188 0 \, 1000 10000;
#X obj 1462 131 list \$0;
#X obj 1462 112 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 1285 164 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 1285 116 loadbang;
#X obj 1285 140 t b b;
#X obj 1258 115 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 1287 250 expr 1 * sin((2 * 3.14159 * $f1 / 360) + 0), f 18
;
#X obj 1288 330 tabwrite \$0-current_sum;
#X msg 1469 152 \; \$1-current_sum xticks 0 90 1;
#X msg 1461 184 \; \$1-current_sum yticks 0 0.1 5;
#X msg 1693 263 \; \$1-added_partial const 0;
#X obj 126 356 bng 15 250 50 0 \$0-sum-r empty Sum 22 7 0 12 -204800
-1 -1;
#X obj 583 947 +;
#X obj 1145 914 line;
#X floatatom 1145 940 5 0 0 0 - - -, f 5;
#X msg 1145 888 0 \, 360 10000;
#X obj 1317 968 int;
#X obj 1147 968 int;
#X obj 769 1078 + 1;
#X obj 739 1056 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 739 1079 f 0;
#X msg 769 1054 0;
#X obj 583 971 t f f;
#X obj 581 1134 tabwrite \$0-current_sum;
#X floatatom 779 1108 5 0 0 0 - - -, f 5;
#X obj 759 661 tabwrite \$0-added_partial;
#X obj 1315 914 line;
#X floatatom 1315 940 5 0 0 0 - - -, f 5;
#X msg 1315 888 0 \, 360 10000;
#X obj 624 768 until;
#X msg 624 711 360;
#X obj 770 1155 expr if($f1 == 359 \, 1 \, 0);
#X obj 770 1179 sel 1;
#X obj 771 1208 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 655 820 + 1;
#X obj 625 798 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 625 821 f 0;
#X msg 655 796 0;
#X floatatom 667 851 5 0 0 0 - - -, f 5;
#X obj 624 735 t f b b;
#X obj 625 869 t f f;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-current_sum_temp 360 float 1 black black;
#A 0 0.0348995 0.0697564 0.104528 0.139173 0.173648 0.207912 0.241922
0.275637 0.309017 0.34202 0.374606 0.406736 0.438371 0.469471 0.5 0.529919
0.559192 0.587785 0.615661 0.642787 0.66913 0.694658 0.719339 0.743144
0.766044 0.78801 0.809017 0.829037 0.848048 0.866025 0.882947 0.898794
0.913545 0.927184 0.939692 0.951056 0.961261 0.970295 0.978147 0.984808
0.990268 0.994522 0.997564 0.999391 1 0.999391 0.997564 0.994522 0.990268
0.984808 0.978148 0.970296 0.961262 0.951057 0.939693 0.927184 0.913546
0.898795 0.882948 0.866026 0.848049 0.829039 0.809018 0.788012 0.766046
0.743146 0.719341 0.69466 0.669132 0.642789 0.615663 0.587787 0.559195
0.529921 0.500002 0.469473 0.438373 0.406739 0.374609 0.342022 0.309019
0.27564 0.241924 0.207914 0.173651 0.139175 0.104531 0.0697588 0.0349018
2.53518e-06 -0.034897 -0.069754 -0.104526 -0.139171 -0.173645 -0.207909
-0.241919 -0.275635 -0.309014 -0.342017 -0.374604 -0.406734 -0.438368
-0.469469 -0.499997 -0.529917 -0.55919 -0.587783 -0.615659 -0.642785
-0.669128 -0.694656 -0.719338 -0.743143 -0.766042 -0.788009 -0.809015
-0.829036 -0.848046 -0.866024 -0.882946 -0.898792 -0.913544 -0.927183
-0.939691 -0.951055 -0.961261 -0.970295 -0.978147 -0.984807 -0.990268
-0.994521 -0.997564 -0.999391 -1 -0.999391 -0.997564 -0.994522 -0.990269
-0.984808 -0.978148 -0.970297 -0.961263 -0.951058 -0.939694 -0.927185
-0.913547 -0.898796 -0.88295 -0.866027 -0.848051 -0.82904 -0.809019
-0.788013 -0.766047 -0.743148 -0.719343 -0.694662 -0.669134 -0.642791
-0.615665 -0.587789 -0.559197 -0.529923 -0.500004 -0.469476 -0.438375
-0.406741 -0.374611 -0.342025 -0.309021 -0.275642 -0.241926 -0.207917
-0.173653 -0.139178 -0.104533 -0.0697611 -0.0349048 -5.07036e-06 0.0348942
0.0697515 0.104524 0.139168 0.173643 0.207906 0.241917 0.275632 0.309012
0.342015 0.374602 0.406732 0.438366 0.469467 0.499995 0.529914 0.559188
0.587781 0.615657 0.642783 0.669126 0.694654 0.719336 0.743141 0.766041
0.788007 0.809013 0.829034 0.848045 0.866023 0.882945 0.898791 0.913543
0.927182 0.939691 0.951055 0.96126 0.970294 0.978146 0.984807 0.990267
0.994521 0.997564 0.999391 1 0.999391 0.997564 0.994523 0.990269 0.984809
0.978149 0.970297 0.961264 0.951058 0.939695 0.927186 0.913548 0.898797
0.882951 0.866029 0.848052 0.829041 0.809021 0.788015 0.766049 0.743149
0.719345 0.694663 0.669136 0.642793 0.615667 0.587791 0.559199 0.529925
0.500006 0.469478 0.438377 0.406743 0.374613 0.342027 0.309024 0.275644
0.241929 0.207919 0.173656 0.139181 0.104535 0.0697637 0.0349069 7.60554e-06
-0.0348917 -0.0697485 -0.104521 -0.139166 -0.173641 -0.207904 -0.241914
-0.27563 -0.30901 -0.342013 -0.374599 -0.406729 -0.438364 -0.469465
-0.499993 -0.529913 -0.559186 -0.587779 -0.615656 -0.642782 -0.669124
-0.694652 -0.719334 -0.743139 -0.766039 -0.788005 -0.809012 -0.829033
-0.848044 -0.866022 -0.882944 -0.89879 -0.913542 -0.927181 -0.93969
-0.951054 -0.961259 -0.970294 -0.978146 -0.984806 -0.990267 -0.994521
-0.997563 -0.999391 -1 -0.999391 -0.997565 -0.994523 -0.990269 -0.984809
-0.978149 -0.970298 -0.961264 -0.95106 -0.939696 -0.927188 -0.913549
-0.898798 -0.882952 -0.86603 -0.848053 -0.829043 -0.809022 -0.788016
-0.76605 -0.743152 -0.719347 -0.694665 -0.669138 -0.642795 -0.615669
-0.587793 -0.559201 -0.529927 -0.500008 -0.46948 -0.438381 -0.406746
-0.374616 -0.34203 -0.309027 -0.275647 -0.241931 -0.207921 -0.173657
-0.139182 -0.104538 -0.0697671 -0.0349104 -0.98481;
#X coords 0 1 359 -1 300 100 1;
#X restore 288 760 graph;
#X obj 583 911 tabread \$0-current_sum_temp;
#X obj 867 1229 array;
#X obj 772 1286 until;
#X msg 772 1229 360;
#X obj 803 1338 + 1;
#X obj 773 1316 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 773 1339 f 0;
#X msg 803 1314 0;
#X obj 772 1253 t f b b;
#X obj 841 1474 + 1;
#X obj 811 1452 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 811 1475 f 0;
#X msg 841 1450 0;
#X obj 773 1397 t f b;
#X obj 773 1373 tabread \$0-current_sum;
#X obj 771 1504 tabwrite \$0-current_sum_temp;
#X floatatom 969 631 0 0 0 0 - - -;
#X obj 968 557 trigger f f;
#X obj 1139 588 + 1;
#X obj 1109 566 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 968 528 line;
#X obj 1109 589 f 0;
#X msg 1139 564 0;
#X obj 1139 543 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 968 497 0 \, 1000 10000;
#X obj 967 473 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 967 449 t b b;
#X obj 967 426 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 969 661 tabwrite \$0-added_partial;
#X obj 969 579 expr 0.33 * sin((6 * 3.14159 * $f1 / 360) + 0), f 18
;
#X floatatom 1179 631 0 0 0 0 - - -;
#X obj 1178 557 trigger f f;
#X obj 1349 588 + 1;
#X obj 1319 566 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 1178 528 line;
#X obj 1319 589 f 0;
#X msg 1349 564 0;
#X obj 1349 543 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 1178 497 0 \, 1000 10000;
#X obj 1177 473 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 1177 449 t b b;
#X obj 1177 426 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 1179 661 tabwrite \$0-added_partial;
#X obj 754 398 r \$0-partial2-r;
#X obj 964 398 r \$0-partial3-r;
#X text 144 159 P2: 4 Hz - 0.5 Amp;
#X obj 1174 398 r \$0-partial4-r;
#X obj 1179 579 expr 0.25 * sin((8 * 3.14159 * $f1 / 360) + 0), f
18;
#X floatatom 1389 631 0 0 0 0 - - -;
#X obj 1388 557 trigger f f;
#X obj 1559 588 + 1;
#X obj 1529 566 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 1388 528 line;
#X obj 1529 589 f 0;
#X msg 1559 564 0;
#X obj 1559 543 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 1388 497 0 \, 1000 10000;
#X obj 1387 473 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 1387 449 t b b;
#X obj 1387 426 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 1389 661 tabwrite \$0-added_partial;
#X floatatom 1599 631 0 0 0 0 - - -;
#X obj 1598 557 trigger f f;
#X obj 1769 588 + 1;
#X obj 1739 566 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 1598 528 line;
#X obj 1739 589 f 0;
#X msg 1769 564 0;
#X obj 1769 543 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 1598 497 0 \, 1000 10000;
#X obj 1597 473 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 1597 449 t b b;
#X obj 1597 426 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 1599 661 tabwrite \$0-added_partial;
#X floatatom 1809 631 0 0 0 0 - - -;
#X obj 1808 557 trigger f f;
#X obj 1979 588 + 1;
#X obj 1949 566 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 1808 528 line;
#X obj 1949 589 f 0;
#X msg 1979 564 0;
#X obj 1979 543 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 1808 497 0 \, 1000 10000;
#X obj 1807 473 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 1807 449 t b b;
#X obj 1807 426 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 1809 661 tabwrite \$0-added_partial;
#X floatatom 2019 631 0 0 0 0 - - -;
#X obj 2018 557 trigger f f;
#X obj 2189 588 + 1;
#X obj 2159 566 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 2018 528 line;
#X obj 2159 589 f 0;
#X msg 2189 564 0;
#X obj 2189 543 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 2018 497 0 \, 1000 10000;
#X obj 2017 473 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 2017 449 t b b;
#X obj 2017 426 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 2019 661 tabwrite \$0-added_partial;
#X floatatom 2229 631 0 0 0 0 - - -;
#X obj 2228 557 trigger f f;
#X obj 2399 588 + 1;
#X obj 2369 566 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 2228 528 line;
#X obj 2369 589 f 0;
#X msg 2399 564 0;
#X obj 2399 543 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 2228 497 0 \, 1000 10000;
#X obj 2227 473 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 2227 449 t b b;
#X obj 2227 426 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 2229 661 tabwrite \$0-added_partial;
#X floatatom 2439 631 0 0 0 0 - - -;
#X obj 2438 557 trigger f f;
#X obj 2609 588 + 1;
#X obj 2579 566 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 2438 528 line;
#X obj 2579 589 f 0;
#X msg 2609 564 0;
#X obj 2609 543 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 2438 497 0 \, 1000 10000;
#X obj 2437 473 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 2437 449 t b b;
#X obj 2437 426 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 2439 661 tabwrite \$0-added_partial;
#X floatatom 2649 631 0 0 0 0 - - -;
#X obj 2648 557 trigger f f;
#X obj 2819 588 + 1;
#X obj 2789 566 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 2648 528 line;
#X obj 2789 589 f 0;
#X msg 2819 564 0;
#X obj 2819 543 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 2648 497 0 \, 1000 10000;
#X obj 2647 473 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 2647 449 t b b;
#X obj 2647 426 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 2649 661 tabwrite \$0-added_partial;
#X obj 2644 398 r \$0-partial4-r;
#X obj 2649 579 expr 0.25 * sin((8 * 3.14159 * $f1 / 360) + 0), f
18;
#X obj 1384 398 r \$0-partial5-r;
#X obj 1389 579 expr 0.2 * sin((10 * 3.14159 * $f1 / 360) + 0), f
18;
#X obj 1594 398 r \$0-partial6-r;
#X obj 1599 579 expr 0.166 * sin((12 * 3.14159 * $f1 / 360) + 0),
f 18;
#X obj 1804 398 r \$0-partial7-r;
#X obj 1809 579 expr 0.142 * sin((14 * 3.14159 * $f1 / 360) + 0),
f 18;
#X obj 2014 398 r \$0-partial8-r;
#X obj 2019 579 expr 0.125 * sin((16 * 3.14159 * $f1 / 360) + 0),
f 18;
#X obj 2224 398 r \$0-partial9-r;
#X obj 2229 579 expr 0.111 * sin((18 * 3.14159 * $f1 / 360) + 0),
f 18;
#X obj 2434 398 r \$0-partial10-r;
#X obj 2439 579 expr 0.1 * sin((20 * 3.14159 * $f1 / 360) + 0), f
18;
#X obj 126 179 bng 15 250 50 0 \$0-partial3-r empty empty 17 7 0 10
-204800 -1 -1;
#X obj 126 199 bng 15 250 50 0 \$0-partial4-r empty empty 17 7 0 10
-204800 -1 -1;
#X obj 126 219 bng 15 250 50 0 \$0-partial5-r empty empty 17 7 0 10
-204800 -1 -1;
#X obj 126 239 bng 15 250 50 0 \$0-partial6-r empty empty 17 7 0 10
-204800 -1 -1;
#X obj 126 259 bng 15 250 50 0 \$0-partial7-r empty empty 17 7 0 10
-204800 -1 -1;
#X obj 126 279 bng 15 250 50 0 \$0-partial8-r empty empty 17 7 0 10
-204800 -1 -1;
#X obj 126 299 bng 15 250 50 0 \$0-partial9-r empty empty 17 7 0 10
-204800 -1 -1;
#X obj 126 319 bng 15 250 50 0 \$0-partial10-r empty empty 17 7 0 10
-204800 -1 -1;
#X text 144 179 P3: 6 Hz - 0.33 Amp;
#X text 144 199 P4: 8 Hz - 0.25 Amp;
#X text 144 219 P5: 10 Hz - 0.2 Amp;
#X text 144 239 P6: 12 Hz - 0.166 Amp;
#X text 144 259 P7: 14 Hz - 0.142 Amp;
#X text 144 279 P8: 16 Hz - 0.125 Amp;
#X text 143 299 P9: 18 Hz - 0.111 Amp;
#X text 144 319 P10: 20 Hz - 0.1 Amp;
#X obj 1273 32 r \$0-reset-r;
#X obj 1478 322 tabwrite \$0-current_sum_temp;
#X obj 628 674 r \$0-sum-r;
#X obj 707 707 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text 144 139 P1: 2 Hz - 1 Amp;
#X connect 0 0 89 0;
#X connect 1 0 86 0;
#X connect 1 1 3 0;
#X connect 2 0 5 1;
#X connect 3 0 5 0;
#X connect 4 0 1 0;
#X connect 5 0 2 0;
#X connect 5 0 89 1;
#X connect 6 0 5 1;
#X connect 7 0 6 0;
#X connect 8 0 4 0;
#X connect 8 0 7 0;
#X connect 9 0 87 0;
#X connect 9 0 88 0;
#X connect 19 0 9 0;
#X connect 20 0 8 0;
#X connect 39 0 52 1;
#X connect 40 0 62 0;
#X connect 40 1 42 0;
#X connect 41 0 44 1;
#X connect 42 0 44 0;
#X connect 43 0 40 0;
#X connect 44 0 41 0;
#X connect 44 0 68 1;
#X connect 45 0 44 1;
#X connect 46 0 45 0;
#X connect 47 0 43 0;
#X connect 47 0 46 0;
#X connect 48 0 63 0;
#X connect 48 0 64 0;
#X connect 48 0 65 0;
#X connect 50 0 47 0;
#X connect 50 0 56 0;
#X connect 52 0 68 0;
#X connect 53 0 52 0;
#X connect 54 0 61 0;
#X connect 55 0 54 0;
#X connect 56 0 55 0;
#X connect 57 0 59 0;
#X connect 59 0 20 0;
#X connect 59 1 19 0;
#X connect 60 0 49 0;
#X connect 61 0 53 0;
#X connect 62 0 39 0;
#X connect 66 0 49 0;
#X connect 67 0 50 0;
#X connect 69 0 59 0;
#X connect 86 0 0 0;
#X connect 90 0 144 0;
#X connect 91 0 107 0;
#X connect 91 1 93 0;
#X connect 92 0 95 1;
#X connect 93 0 95 0;
#X connect 94 0 91 0;
#X connect 95 0 92 0;
#X connect 95 0 144 1;
#X connect 96 0 95 1;
#X connect 97 0 96 0;
#X connect 98 0 94 0;
#X connect 98 0 97 0;
#X connect 99 0 105 0;
#X connect 99 0 106 0;
#X connect 99 0 129 0;
#X connect 100 0 99 0;
#X connect 101 0 98 0;
#X connect 102 0 100 0;
#X connect 103 0 101 0;
#X connect 104 0 103 0;
#X connect 107 0 90 0;
#X connect 109 0 131 1;
#X connect 110 0 126 0;
#X connect 110 0 331 0;
#X connect 111 0 125 0;
#X connect 111 1 113 0;
#X connect 112 0 115 1;
#X connect 113 0 115 0;
#X connect 114 0 111 0;
#X connect 115 0 112 0;
#X connect 115 0 126 1;
#X connect 115 0 331 1;
#X connect 116 0 115 1;
#X connect 117 0 116 0;
#X connect 118 0 114 0;
#X connect 118 0 117 0;
#X connect 119 0 127 0;
#X connect 119 0 128 0;
#X connect 120 0 119 0;
#X connect 121 0 118 0;
#X connect 122 0 123 0;
#X connect 123 0 121 0;
#X connect 123 1 120 0;
#X connect 124 0 123 0;
#X connect 125 0 110 0;
#X connect 131 0 141 0;
#X connect 132 0 133 0;
#X connect 133 0 136 0;
#X connect 134 0 132 0;
#X connect 137 0 139 1;
#X connect 138 0 139 0;
#X connect 139 0 137 0;
#X connect 139 0 143 0;
#X connect 139 0 142 1;
#X connect 139 0 150 0;
#X connect 140 0 139 1;
#X connect 141 0 142 0;
#X connect 141 1 138 0;
#X connect 145 0 146 0;
#X connect 146 0 135 0;
#X connect 147 0 145 0;
#X connect 148 0 154 0;
#X connect 149 0 158 0;
#X connect 150 0 151 0;
#X connect 151 0 152 0;
#X connect 152 0 164 0;
#X connect 153 0 155 1;
#X connect 154 0 155 0;
#X connect 155 0 153 0;
#X connect 155 0 157 0;
#X connect 155 0 159 0;
#X connect 156 0 155 1;
#X connect 158 0 148 0;
#X connect 158 1 156 0;
#X connect 158 2 140 0;
#X connect 159 0 161 0;
#X connect 159 1 109 0;
#X connect 161 0 131 0;
#X connect 163 0 166 0;
#X connect 164 0 169 0;
#X connect 165 0 167 1;
#X connect 166 0 167 0;
#X connect 167 0 165 0;
#X connect 167 0 175 0;
#X connect 168 0 167 1;
#X connect 169 0 163 0;
#X connect 169 1 168 0;
#X connect 169 2 173 0;
#X connect 170 0 172 1;
#X connect 171 0 172 0;
#X connect 172 0 170 0;
#X connect 172 0 176 1;
#X connect 173 0 172 1;
#X connect 174 0 176 0;
#X connect 174 1 171 0;
#X connect 175 0 174 0;
#X connect 177 0 189 0;
#X connect 178 0 190 0;
#X connect 178 1 180 0;
#X connect 179 0 182 1;
#X connect 180 0 182 0;
#X connect 181 0 178 0;
#X connect 182 0 179 0;
#X connect 182 0 189 1;
#X connect 183 0 182 1;
#X connect 184 0 183 0;
#X connect 185 0 181 0;
#X connect 185 0 184 0;
#X connect 186 0 185 0;
#X connect 187 0 186 0;
#X connect 188 0 187 0;
#X connect 190 0 177 0;
#X connect 191 0 203 0;
#X connect 192 0 208 0;
#X connect 192 1 194 0;
#X connect 193 0 196 1;
#X connect 194 0 196 0;
#X connect 195 0 192 0;
#X connect 196 0 193 0;
#X connect 196 0 203 1;
#X connect 197 0 196 1;
#X connect 198 0 197 0;
#X connect 199 0 195 0;
#X connect 199 0 198 0;
#X connect 200 0 199 0;
#X connect 201 0 200 0;
#X connect 202 0 201 0;
#X connect 204 0 104 0;
#X connect 205 0 188 0;
#X connect 207 0 202 0;
#X connect 208 0 191 0;
#X connect 209 0 221 0;
#X connect 210 0 303 0;
#X connect 210 1 212 0;
#X connect 211 0 214 1;
#X connect 212 0 214 0;
#X connect 213 0 210 0;
#X connect 214 0 211 0;
#X connect 214 0 221 1;
#X connect 215 0 214 1;
#X connect 216 0 215 0;
#X connect 217 0 213 0;
#X connect 217 0 216 0;
#X connect 218 0 217 0;
#X connect 219 0 218 0;
#X connect 220 0 219 0;
#X connect 222 0 234 0;
#X connect 223 0 305 0;
#X connect 223 1 225 0;
#X connect 224 0 227 1;
#X connect 225 0 227 0;
#X connect 226 0 223 0;
#X connect 227 0 224 0;
#X connect 227 0 234 1;
#X connect 228 0 227 1;
#X connect 229 0 228 0;
#X connect 230 0 226 0;
#X connect 230 0 229 0;
#X connect 231 0 230 0;
#X connect 232 0 231 0;
#X connect 233 0 232 0;
#X connect 235 0 247 0;
#X connect 236 0 307 0;
#X connect 236 1 238 0;
#X connect 237 0 240 1;
#X connect 238 0 240 0;
#X connect 239 0 236 0;
#X connect 240 0 237 0;
#X connect 240 0 247 1;
#X connect 241 0 240 1;
#X connect 242 0 241 0;
#X connect 243 0 239 0;
#X connect 243 0 242 0;
#X connect 244 0 243 0;
#X connect 245 0 244 0;
#X connect 246 0 245 0;
#X connect 248 0 260 0;
#X connect 249 0 309 0;
#X connect 249 1 251 0;
#X connect 250 0 253 1;
#X connect 251 0 253 0;
#X connect 252 0 249 0;
#X connect 253 0 250 0;
#X connect 253 0 260 1;
#X connect 254 0 253 1;
#X connect 255 0 254 0;
#X connect 256 0 252 0;
#X connect 256 0 255 0;
#X connect 257 0 256 0;
#X connect 258 0 257 0;
#X connect 259 0 258 0;
#X connect 261 0 273 0;
#X connect 262 0 311 0;
#X connect 262 1 264 0;
#X connect 263 0 266 1;
#X connect 264 0 266 0;
#X connect 265 0 262 0;
#X connect 266 0 263 0;
#X connect 266 0 273 1;
#X connect 267 0 266 1;
#X connect 268 0 267 0;
#X connect 269 0 265 0;
#X connect 269 0 268 0;
#X connect 270 0 269 0;
#X connect 271 0 270 0;
#X connect 272 0 271 0;
#X connect 274 0 286 0;
#X connect 275 0 313 0;
#X connect 275 1 277 0;
#X connect 276 0 279 1;
#X connect 277 0 279 0;
#X connect 278 0 275 0;
#X connect 279 0 276 0;
#X connect 279 0 286 1;
#X connect 280 0 279 1;
#X connect 281 0 280 0;
#X connect 282 0 278 0;
#X connect 282 0 281 0;
#X connect 283 0 282 0;
#X connect 284 0 283 0;
#X connect 285 0 284 0;
#X connect 287 0 299 0;
#X connect 288 0 301 0;
#X connect 288 1 290 0;
#X connect 289 0 292 1;
#X connect 290 0 292 0;
#X connect 291 0 288 0;
#X connect 292 0 289 0;
#X connect 292 0 299 1;
#X connect 293 0 292 1;
#X connect 294 0 293 0;
#X connect 295 0 291 0;
#X connect 295 0 294 0;
#X connect 296 0 295 0;
#X connect 297 0 296 0;
#X connect 298 0 297 0;
#X connect 300 0 298 0;
#X connect 301 0 287 0;
#X connect 302 0 220 0;
#X connect 303 0 209 0;
#X connect 304 0 233 0;
#X connect 305 0 222 0;
#X connect 306 0 246 0;
#X connect 307 0 235 0;
#X connect 308 0 259 0;
#X connect 309 0 248 0;
#X connect 310 0 272 0;
#X connect 311 0 261 0;
#X connect 312 0 285 0;
#X connect 313 0 274 0;
#X connect 330 0 100 0;
#X connect 330 0 124 0;
#X connect 332 0 333 0;
#X connect 332 0 149 0;
#X coords 0 -1 1 1 625 500 2 100 100;
#X restore 531 26 pd demonstration.wave;
#X text 18 37 You have seen now that different timbres produce different
waveshapes. Why does this happen? Think back to the chapter on phase.
When sound waves are mixed together \, their amplitudes add and subtract
against each other. So it makes sense that if we are adding 50+ sine
waves together \, they are going to add or subtract against each other.
, f 69;
#X text 18 147 The module to the right shows three sound wave graphs.
The first is the fundamental of the signal we are going to build \,
which as a frequency of 2 Hz. The left of this graph are buttons which
allow you to load a partial into the “Partial To Be Added” graph.
All of the partials that can be added are interger multiples of the
fundamental \, and their corresponding amplitudes are the inverse of
their partial number (i.e. the second partial is ½ the amplitude of
the fundamental \, the third partial is 1/3 the amplitude of the fundamental
\, etc.). Click the button labelled “Sum” to added the loaded partial
to the summed signal. Try this with Partial 2 What do you notice? The
Summed signal gains these peaks which have more of a point (as compared
to the original sine wave) and we also see these plateaus in the center
of the cycle. Compare where these peaks and plateaus line up with on
the original and added partial. The peaks are formed through in-phase
addition \, where the compression of the added partial sums with the
compression of the first partial. However \, as the added partial moves
to a rarefaction \, the compression of the first partial gets subtracted
from \, causing the rarefaction to start earlier in the summed signal
\, but then as the compression of the added partial begins again \,
the first partial has a rarefaction \, summing to 0 and creating the
plateau. Then the entire process repeats \, but flipped., f 69;
#X text 16 495 Add more partials \, and you will see the waveshape
continue to change due to in-phase and anti-phase addition. The spectrum
of integer multiples of the fundamental with inverse amplitudes is
the spectrum of a sawtooth wave \, and you should see that the wave
is starting to take on the slant of the sawtooth., f 69;
#X text 18 17 5.6 TIMBRE AND WAVESHAPE, f 69;
#X restore 21 198 pd 06_TIMBRE_AND_WAVESHAPE;
#N canvas 151 106 720 445 01_INTRODUCTION 0;
#X text 8 25 We have seen and heard a few different sound waves so
far in our examples. The sound wave we have seen the most is the sine
wave – a smooth wave the oscillations are developed (mathematically)
through the tracing of a point around the unit circle. We have also
seen a few other sound waves \, such as the waves for a guitar string
plucked \, a cello bowed \, and we have even seen a synthetic waveform
that had sharp peaks for its compressions and rarefactions. Why did
these sound waves look and sound different? The answer lies in these
sounds’ SPECTRA (singular: spectrum). The spectrum of a sound defined
the sound’s TIMBRE (pronounced TAM-ber \, unless you’re British
\, in which case its TAM-bra)., f 98;
#X text 8 155 What defines a sound wave’s spectrum? It can be difficult
to define \, because unlike the other characteristics \, it isn’t
as clearly defined physically. The spectrum of a sound has a huge influence
on the soundwave’s shape. That is why all of the sounds we have heard
so far looked different in the scopes that displayed the sounds. Past
that \, we weren’t able to accurately display analyze or display
a sound’s spectrum until advances in mathematics and digital audio
were made. The investigation of a sound’s spectrum developed through
a mathematical process known as the FOURIER TRANSFORM., f 98;
#X text 8 275 The Fourier Transform is named after JEAN BAPTISTE FOURIER
who developed a ground-breaking theory on sound. He discovered that
sound waves are actually the result of the sum of MANY individual sine
waves \, each with their own frequency \, amplitude \, and phase. This
is true for EVERY sound that can be heard \, with the exception of
an actual sine wave \, which is built of only a single sine wave \,
and technically cannot be heard in nature \, it can only be produced
through technological means. This collection of sine waves is known
as the sound’s SPECTRUM \, and the configuration of the sound’s
spectrum defines the sound’s TIMBRE. So every time you hear a sound
\, you are actually hearing many sine waves summed together. The configuration
of the spectrum \, with each sine having its own frequency \, amplitude
\, and phase \, influences the way the sound is heard and the way it
looks in an oscilloscope., f 98;
#X text 8 5 5.1 INTRODUCTION, f 73;
#X restore 21 83 pd 01_INTRODUCTION;
#N canvas 28 270 1366 480 02_FOURIER_TRANSFORM_AND_THE_SPECTROGRAPH
0;
#N canvas 1958 22 1413 855 demonstration.wave 0;
#X obj 1179 909 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1
1 1;
#X obj 1180 866 loadbang;
#X msg 1180 887 1;
#X floatatom 1225 909 5 0 0 0 - - -, f 5;
#X obj 975 808 throw~ \$0-dac;
#X obj 1134 -255 declare -path sounds;
#X obj 719 635 -~ 0.5;
#X obj 719 659 *~ 2;
#X obj 720 750 *~;
#X obj 769 714 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 719 611 phasor~ 220;
#X obj 121 173 tgl 15 0 \$0-timbre_sawtooth_on2-r empty Sawtooth 17
7 0 12 -204800 -1 -1 0 1;
#X obj 441 817 *~;
#X obj 512 702 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 402 619 phasor~ 220;
#X obj 121 155 tgl 15 0 \$0-timbre_triangle_on2-r empty Triangle 17
7 0 12 -204800 -1 -1 0 1;
#X obj 428 651 *~ -1;
#X obj 428 675 +~ 1;
#X obj 407 718 min~;
#X obj 407 742 *~ 4;
#X obj 407 766 -~ 1;
#X obj 111 817 *~;
#X obj 182 702 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 72 619 phasor~ 220;
#X obj 72 643 expr~ $v1 > 0.5;
#X obj 72 667 *~ 2;
#X obj 72 691 -~ 1;
#X obj 72 715 *~ 0.99;
#X obj 121 193 tgl 15 0 \$0-timbre_square_on2-r empty Square 17 7 0
12 -204800 -1 -1 0 1;
#X obj 121 135 tgl 15 0 \$0-timbre_sine_on2-r empty Sine 17 7 0 12
-204800 -1 -1 0 1;
#X obj -196 674 osc~ 220;
#X obj -189 817 *~;
#X obj -118 702 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1
0 1;
#N canvas 123 39 1142 661 spectrograph 0;
#N canvas 491 173 651 544 fft-analysis 0;
#X obj 15 164 *~;
#X obj 14 99 inlet~;
#X obj 15 218 rfft~;
#X obj 14 306 *~;
#X obj 56 306 *~;
#X obj 15 356 sqrt~;
#X obj 23 386 loadbang;
#X obj 23 449 tgl 15 0 empty empty empty 0 -6 0 8 -262144 -1 -1 1 1
;
#X obj 15 8 block~ 512;
#X text 225 131 tabreceive~ outputs array contents \,;
#X text 225 149 constantly \, every block. Here it's;
#X text 223 169 used to get the Hann window to;
#X text 225 187 multiply by the input.;
#X text 120 7 block~ object does no computation but declares this;
#X text 120 24 window to be operating at a different block size from
;
#X text 122 58 Fourier transform.;
#X text 121 40 the parent window. This determines the size of the;
#X text 76 99 The inlet~ automatically re-blocks to the new block size.
;
#X obj 15 332 +~;
#X text 94 308 Take the magnitude by squaring real and imaginary part
\, adding and taking square root.;
#X text 110 424 periodically graph the output. It appears every 512
samples (about 12 milliseconds) but we only update the graph 4 times
per second. The graph is back on the main (parent) window.;
#X text 82 215 forward real FFT. Like "fft~" \, but only one inlet
(for the real part) and only the first half of the output signals are
used. (The others are determined by symmetry: they're complex conjugates
of the first half \, in reverse order.) This takes 1/2 the CPU time
of "fft".;
#X obj 23 470 metro 250;
#X msg 23 410 1;
#X obj 14 498 tabwrite~ \$0-timbre_spectrograph2;
#X obj 36 140 tabreceive~ \$0-hann2;
#X connect 0 0 2 0;
#X connect 1 0 0 0;
#X connect 2 0 3 0;
#X connect 2 0 3 1;
#X connect 2 1 4 0;
#X connect 2 1 4 1;
#X connect 3 0 18 0;
#X connect 4 0 18 1;
#X connect 5 0 24 0;
#X connect 6 0 23 0;
#X connect 7 0 22 0;
#X connect 18 0 5 0;
#X connect 22 0 24 0;
#X connect 23 0 7 0;
#X connect 25 0 0 1;
#X restore 1094 205 pd fft-analysis;
#N canvas 26 23 450 300 (subpatch) 0;
#X array \$0-timbre_spectrograph2 256 float 0 black black;
#X coords 0 128 255 0 500 100 1;
#X restore 168 115 graph;
#N canvas 0 22 450 300 (subpatch) 0;
#X array \$0-hann2 512 float 1 black black;
#A 0 0 3.76403e-05 0.000150591 0.000338823 0.000602275 0.000940949
0.00135478 0.00184369 0.00240764 0.00304651 0.00376022 0.00454867 0.00541174
0.0063493 0.00736117 0.00844726 0.00960737 0.0108413 0.0121489 0.01353
0.0149844 0.0165118 0.018112 0.0197847 0.0215298 0.023347 0.0252359
0.0271963 0.029228 0.0313305 0.0335036 0.035747 0.0380602 0.0404431
0.0428951 0.045416 0.0480053 0.0506628 0.0533879 0.0561802 0.0590394
0.061965 0.0649565 0.0680136 0.0711357 0.0743224 0.0775732 0.0808876
0.0842652 0.0877054 0.0912076 0.0947714 0.0983962 0.102082 0.105827
0.109631 0.113495 0.117416 0.121396 0.125432 0.129524 0.133673 0.137876
0.142135 0.146447 0.150812 0.15523 0.159699 0.164221 0.168792 0.173414
0.178084 0.182803 0.18757 0.192384 0.197244 0.20215 0.207101 0.212096
0.217134 0.222215 0.227338 0.232501 0.237705 0.242949 0.248231 0.253551
0.258908 0.264302 0.269731 0.275194 0.280692 0.286222 0.291785 0.297379
0.303004 0.308658 0.314341 0.320053 0.325791 0.331555 0.337345 0.343159
0.348997 0.354858 0.36074 0.366644 0.372567 0.37851 0.384471 0.390449
0.396444 0.402455 0.40848 0.414519 0.420571 0.426635 0.43271 0.438795
0.444889 0.450991 0.457101 0.463218 0.46934 0.475466 0.481596 0.487729
0.493864 0.5 0.506136 0.512271 0.518404 0.524534 0.53066 0.536782 0.542899
0.549009 0.555111 0.561205 0.56729 0.573365 0.579429 0.585481 0.59152
0.597545 0.603556 0.609551 0.615529 0.62149 0.627433 0.633356 0.63926
0.645142 0.651003 0.656841 0.662655 0.668445 0.674209 0.679947 0.685659
0.691342 0.696996 0.702621 0.708215 0.713778 0.719308 0.724806 0.730269
0.735698 0.741092 0.746449 0.751769 0.757051 0.762295 0.767499 0.772663
0.777785 0.782866 0.787904 0.792899 0.79785 0.802756 0.807616 0.81243
0.817197 0.821916 0.826586 0.831208 0.83578 0.840301 0.84477 0.849188
0.853553 0.857865 0.862124 0.866327 0.870476 0.874568 0.878604 0.882584
0.886505 0.890369 0.894173 0.897918 0.901604 0.905229 0.908792 0.912295
0.915735 0.919112 0.922427 0.925678 0.928864 0.931986 0.935044 0.938035
0.940961 0.94382 0.946612 0.949337 0.951995 0.954584 0.957105 0.959557
0.96194 0.964253 0.966496 0.96867 0.970772 0.972804 0.974764 0.976653
0.97847 0.980215 0.981888 0.983488 0.985016 0.98647 0.987851 0.989159
0.990393 0.991553 0.992639 0.993651 0.994588 0.995451 0.99624 0.996953
0.997592 0.998156 0.998645 0.999059 0.999398 0.999661 0.999849 0.999962
1 0.999962 0.999849 0.999661 0.999398 0.999059 0.998645 0.998156 0.997592
0.996953 0.99624 0.995451 0.994588 0.993651 0.992639 0.991553 0.990393
0.989159 0.987851 0.98647 0.985016 0.983488 0.981888 0.980215 0.97847
0.976653 0.974764 0.972804 0.970772 0.968669 0.966496 0.964253 0.96194
0.959557 0.957105 0.954584 0.951995 0.949337 0.946612 0.94382 0.940961
0.938035 0.935043 0.931986 0.928864 0.925678 0.922427 0.919112 0.915735
0.912295 0.908792 0.905229 0.901604 0.897918 0.894173 0.890369 0.886505
0.882584 0.878604 0.874568 0.870476 0.866327 0.862123 0.857865 0.853553
0.849188 0.84477 0.840301 0.835779 0.831208 0.826586 0.821916 0.817197
0.81243 0.807616 0.802755 0.79785 0.792899 0.787904 0.782866 0.777785
0.772662 0.767499 0.762295 0.757051 0.751769 0.746449 0.741092 0.735698
0.730269 0.724806 0.719308 0.713777 0.708215 0.702621 0.696996 0.691342
0.685659 0.679948 0.674209 0.668445 0.662655 0.656841 0.651003 0.645142
0.63926 0.633356 0.627433 0.62149 0.615529 0.60955 0.603556 0.597545
0.59152 0.585481 0.579429 0.573365 0.56729 0.561205 0.555111 0.549008
0.542899 0.536782 0.53066 0.524534 0.518404 0.512271 0.506136 0.5 0.493864
0.487729 0.481596 0.475466 0.46934 0.463218 0.457101 0.450991 0.444889
0.438794 0.43271 0.426635 0.420571 0.414519 0.40848 0.402455 0.396444
0.390449 0.384471 0.37851 0.372567 0.366643 0.36074 0.354858 0.348997
0.343159 0.337345 0.331555 0.325791 0.320052 0.314341 0.308658 0.303004
0.297379 0.291785 0.286222 0.280692 0.275194 0.269731 0.264302 0.258908
0.253551 0.248231 0.242949 0.237705 0.232501 0.227337 0.222215 0.217134
0.212096 0.207101 0.20215 0.197244 0.192384 0.18757 0.182803 0.178084
0.173414 0.168792 0.16422 0.159699 0.15523 0.150812 0.146446 0.142134
0.137876 0.133673 0.129524 0.125432 0.121396 0.117416 0.113495 0.109631
0.105827 0.102081 0.0983962 0.0947713 0.0912075 0.0877053 0.0842652
0.0808876 0.0775732 0.0743224 0.0711357 0.0680135 0.0649565 0.0619649
0.0590393 0.0561801 0.0533878 0.0506627 0.0480053 0.0454159 0.0428951
0.0404431 0.0380602 0.035747 0.0335036 0.0313305 0.0292279 0.0271963
0.0252359 0.0233469 0.0215298 0.0197847 0.0181119 0.0165117 0.0149844
0.01353 0.0121489 0.0108413 0.00960734 0.00844723 0.00736117 0.00634927
0.00541171 0.00454867 0.00376022 0.00304648 0.00240761 0.00184369 0.00135478
0.000940949 0.000602275 0.000338793 0.000150591 3.76403e-05;
#X coords 0 1 511 0 200 120 1;
#X restore 1399 132 graph;
#X msg 1341 130 0;
#X obj 1235 179 osc~;
#X obj 1235 131 samplerate~;
#X obj 1235 202 *~ -0.5;
#X obj 1235 225 +~ 0.5;
#X text 1385 124 1;
#X text 1378 242 0;
#X text 1394 255 0;
#X obj 1235 155 / 512;
#X obj 1228 70 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X text 1504 109 Hann window;
#X text 1283 177 period 512;
#X text 1260 64 recalculate Hann;
#X text 1284 77 window table;
#X text 1580 258 511;
#X obj 1227 40 inlet;
#X obj 1054 232 outlet~;
#X obj 1054 28 inlet~;
#X text 1108 234 Thru;
#X obj 1330 34 loadbang;
#X text 155 226 20;
#X text 171 226 500;
#X text 186 238 1000;
#X text 200 226 2000;
#X text 244 225 4000;
#X text 164 238 250;
#X text 163 213 |;
#X text 177 213 |;
#X text 187 213 |;
#X text 209 213 |;
#X text 254 213 |;
#X text 300 213 |;
#X text 291 225 6000;
#X text 349 213 |;
#X text 338 225 8000;
#X text 391 213 |;
#X text 380 225 10000;
#X text 436 213 |;
#X text 425 225 12000;
#X text 482 213 |;
#X text 471 225 14000;
#X text 528 213 |;
#X text 517 225 16000;
#X text 574 213 |;
#X text 563 225 18000;
#X text 617 213 |;
#X text 606 225 20000;
#X text 664 213 |;
#X text 653 225 22000;
#X text 354 253 Frequency in Hz;
#X text 101 155 Magni-tude, f 6;
#X text 147 158 0.5-;
#X text 154 108 1;
#X text 154 205 0;
#X text 170 213 |;
#X obj 1227 250 tabwrite~ \$0-hann2;
#X connect 3 0 4 1;
#X connect 4 0 6 0;
#X connect 5 0 11 0;
#X connect 6 0 7 0;
#X connect 7 0 58 0;
#X connect 11 0 4 0;
#X connect 12 0 5 0;
#X connect 12 0 3 0;
#X connect 12 0 58 0;
#X connect 18 0 12 0;
#X connect 20 0 0 0;
#X connect 20 0 19 0;
#X connect 22 0 12 0;
#X coords 0 -1 1 1 590 175 2 100 100;
#X restore 239 310 pd spectrograph;
#N canvas 1913 22 1024 542 box 0;
#N canvas 25 23 450 278 (subpatch) 0;
#X array \$0-fourier_spectrogram_demo_scope2 256 float 1 black black
;
#A 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;
#X coords 0 1 255 -1 500 100 1;
#X restore 181 135 graph;
#X text 396 246 Time;
#X text 108 172 Amplitude;
#X coords 0 -1 1 1 590 175 2 100 100;
#X restore 239 123 pd box;
#X obj 1180 933 metro 250;
#X obj 879 385 receive~ \$0-timbre_spectro2;
#X obj 1098 958 tabwrite~ \$0-fourier_spectrogram_demo_scope2;
#X obj 867 972 send~ \$0-timbre_spectro2;
#X obj 793 671 r \$0-timbre_sawtooth_on2-r;
#X obj 513 671 r \$0-timbre_triangle_on2-r;
#X obj 183 671 r \$0-timbre_square_on2-r;
#X obj -117 671 r \$0-timbre_sine_on2-r;
#X connect 0 0 35 0;
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X connect 3 0 35 1;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 8 0 4 0;
#X connect 8 0 37 0;
#X connect 8 0 38 0;
#X connect 9 0 8 1;
#X connect 10 0 6 0;
#X connect 12 0 4 0;
#X connect 12 0 37 0;
#X connect 12 0 38 0;
#X connect 13 0 12 1;
#X connect 14 0 16 0;
#X connect 14 0 18 0;
#X connect 16 0 17 0;
#X connect 17 0 18 1;
#X connect 18 0 19 0;
#X connect 19 0 20 0;
#X connect 20 0 12 0;
#X connect 21 0 4 0;
#X connect 21 0 37 0;
#X connect 21 0 38 0;
#X connect 22 0 21 1;
#X connect 23 0 24 0;
#X connect 24 0 25 0;
#X connect 25 0 26 0;
#X connect 26 0 27 0;
#X connect 27 0 21 0;
#X connect 30 0 31 0;
#X connect 31 0 4 0;
#X connect 31 0 37 0;
#X connect 31 0 38 0;
#X connect 32 0 31 1;
#X connect 35 0 37 0;
#X connect 36 0 33 0;
#X connect 39 0 9 0;
#X connect 40 0 13 0;
#X connect 41 0 22 0;
#X connect 42 0 32 0;
#X coords 0 -1 1 1 750 400 2 100 100;
#X restore 588 10 pd demonstration.wave;
#X text 10 13 5.2 THE FOURIER TRANSFORM AND THE SPECTROGRAPH, f 73
;
#X text 10 33 Mathematicians developed a way to break down a sound
into its individual spectral components with the process known as the
FOURIER TRANSFORM. It was the development of computers that has allowed
us to view the spectrum \, and also manipulate the spectrum to produce
interesting and helpful results \, such as auto-tune and noise removal.
, f 79;
#X text 10 123 When we process a signal with the Fourier transform
\, what is produced is each sine wave of a signal \, its amplitude
\, and its phase. This is what we see when we look at a spectrograph
\, such as seen in the discussion of the octave. You will see a spike
at the point of the frequency for each sine wave \, and the spike’s
height determines the sine wave’s amplitude. You will notice that
the spike isn’t a perfectly straight line. This is because the transform
isn’t perfect \, and compromises have to be made when taking the
transform – some compromises make the frequency resolution better
(how accurate the detected frequencies are) \, at the expense of the
time resolution (how accurate the graph depicts frequency change over
time) \, and vice versa., f 79;
#X text 10 283 To the right are 4 buttons \, each that play a synthetic
tone \, but these synthetic tones have a spectral makeup. You will
see the spectral content of the tone you play \, as well as the wave’s
shape in the oscilloscope. When you play the sine wave \, you get a
single spike in the spectrograph. As you play the other three tones
\, you will notice that each tone sounds different \, visually the
waves are much different \, the spectrum of each eave has much more
to it than the sine wave., f 79;
#X restore 21 106 pd 02_FOURIER_TRANSFORM_AND_THE_SPECTROGRAPH;
#N canvas 63 23 1340 832 03_HARMONIC_SPECTRUM 0;
#X text 10 21 Spectrum and its resulting timbre is the reason why a
clarinet \, piano \, guitar \, and trumpet can all play the same exact
note \, but our ears can tell that each note is played by a different
instrument. It is also how we can tell one person speaking from another
person \, or identify two people singing together., f 79;
#X text 10 111 If you have ever played in an orchestra or wind ensemble
\, you may have heard people refer to “A 440” \, which is the note
most orchestra’s tune to. But how can we ascribe a single frequency
to a note played on an instrument \, when there are actually many sine
waves with different frequencies within a single note being played?
The reason we can ascribe a frequency to a note being played is because
sounds that produce a musical note are known as having a HARMONIC SPECTRUM.
A harmonic spectrum is a spectrum where the lowest frequency sine wave
also has the greatest amplitude. You may remember that the synthetic
tones in the previous module had high amplitudes for their lowest frequencies
– this is because those synthetic tones had harmonic spectra. Since
that lowest frequency also has the highest amplitude \, we ascribe
that frequency to the note. So the note “A” above middle C on the
piano has a sine wave of 440 Hz as its lowest frequency \, and that
sine wave also has the highest amplitude. We refer to this frequency
as the FUNDAMENTAL FREQUENCY., f 79;
#X text 10 351 A harmonic spectrum doesn’t just have a high amplitude
for its lowest frequency. The other aspect that makes a spectrum harmonic
is that each sine wave above the fundamental is related to the fundamental.
The frequency for every sine wave above the fundamental is related
(generally) by an integer multiple \, and generally ascend. So the
next sine wave generally has a frequency of 2x the fundamental \, the
next has a frequency 3x the fundamental \, and so on. Note that harmonic
spectrum might not always have every single integer multiple – some
may have only the odd integer multiples (3x \, 5x \, 7x etc…) for
example. In addition to the frequencies of the sine waves being related
\, the amplitudes are also related. The amplitudes are often an integer
division of fundamental’s amplitude. So the amplitude of the second
sine wave would be ½ the amplitude of the fundamental \, the third
would be 1/3 the amplitude \, etc., f 79;
#X text 10 561 A note on the terminology of the sine waves in a spectrum.
Three names have developed when discussing the sine waves that make
up the spectrum of a signal. One of the most universal is “partial”.
So when we say “the second partial” \, we are talking about the
sine wave with the second lowest frequency (the first frequency higher
than the fundamental). The first partial is the fundamental frequency.
Another term used is “harmonic”. So there is a first \, second
\, third etc. harmonic. This term is nearly interchangeable with “partial”
\, other than that it makes more sense to use this term when discussing
harmonic spectra. The last term used is “overtone”. This term also
describes the sine waves of the spectrum \, the only difference between
this term and “harmonic” and “partial” is that overtones describe
all sine waves ABOVE (*over*) the fundamental frequency. So the first
overtone is the second partial/harmonic. Unfortunately confusing \,
but all three of these terms are used interchangeably and in equal
amount., f 101;
#N canvas 1958 22 1413 855 demonstration.wave 0;
#X obj 1179 909 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1
1 1;
#X obj 1180 866 loadbang;
#X msg 1180 887 1;
#X floatatom 1225 909 5 0 0 0 - - -, f 5;
#X obj 975 808 throw~ \$0-dac;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-timbre_guitar 38413 float 0 black black;
#X coords 0 1 38412 -1 200 140 1;
#X restore 1524 223 graph;
#N canvas 26 23 450 278 (subpatch) 0;
#X array \$0-timbre_cello 23030 float 2 black black;
#X coords 0 1 23030 -1 200 140 1;
#X restore 1524 395 graph;
#X obj 1153 6 soundfiler;
#X obj 1153 -163 list \$0;
#X obj 1154 -184 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 1153 -136 read -resize ../sounds/celloA3_TDH_EDIT_TIMBRE_LOOP_01.wav
\$1-timbre_cello, f 9;
#X obj 1134 -255 declare -path sounds;
#X obj 1153 30 / 44100;
#X floatatom 1153 54 5 0 0 0 - - -, f 5;
#X obj 1266 732 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1
0 1;
#X obj 1153 77 * 1000;
#X floatatom 1153 101 5 0 0 0 - - -, f 5;
#X obj 1216 762 spigot;
#X obj 1135 634 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 1050 706 tabplay~ \$0-timbre_cello;
#X obj 1253 96 soundfiler;
#X obj 1253 -163 list \$0;
#X obj 1254 -184 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 1253 120 / 44100;
#X floatatom 1253 144 5 0 0 0 - - -, f 5;
#X obj 1253 167 * 1000;
#X floatatom 1253 191 5 0 0 0 - - -, f 5;
#X msg 1253 -116 read -resize ../sounds/41678__digifishmusic__guitar-nylon-open-a3__TDH_TIMBRE_LOOP_01.wav
\$1-timbre_guitar, f 9;
#X obj 1616 712 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1
0 1;
#X obj 1566 742 spigot;
#X obj 1485 644 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 1401 686 tabplay~ \$0-timbre_guitar;
#X obj 1486 545 r \$0-timbre_guitar_on-r;
#X obj 1486 569 t f f;
#X obj 1485 611 sel 1;
#X obj 1136 549 t f f;
#X obj 1135 591 sel 1;
#X obj 1136 525 r \$0-timbre_cello_on-r;
#X obj 1197 -232 loadbang;
#X obj 1098 958 tabwrite~ \$0-fourier_spectrogram_demo_scope;
#X obj 141 363 tgl 15 0 \$0-timbre_cello_on-r empty Cello 17 7 0 12
-204800 -1 -1 0 1;
#X obj 141 383 tgl 15 0 \$0-timbre_guitar_on-r empty Guitar 17 7 0
12 -204800 -1 -1 0 1;
#X obj 1400 754 throw~ \$0-dac;
#X obj 719 635 -~ 0.5;
#X obj 719 659 *~ 2;
#X obj 720 750 *~;
#X obj 769 714 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 719 611 phasor~ 220;
#X obj 141 303 tgl 15 0 \$0-timbre_sawtooth_on-r empty Sawtooth 17
7 0 12 -204800 -1 -1 0 1;
#X obj 793 671 r \$0-timbre_sawtooth_on-r;
#X obj 441 817 *~;
#X obj 512 702 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 402 619 phasor~ 220;
#X obj 141 285 tgl 15 0 \$0-timbre_triangle_on-r empty Triangle 17
7 0 12 -204800 -1 -1 0 1;
#X obj 513 671 r \$0-timbre_triangle_on-r;
#X obj 428 651 *~ -1;
#X obj 428 675 +~ 1;
#X obj 407 703 min~;
#X obj 407 727 *~ 4;
#X obj 407 751 -~ 1;
#X obj 111 817 *~;
#X obj 182 702 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 72 619 phasor~ 220;
#X obj 72 643 expr~ $v1 > 0.5;
#X obj 72 667 *~ 2;
#X obj 72 691 -~ 1;
#X obj 72 715 *~ 0.99;
#X obj 183 671 r \$0-timbre_square_on-r;
#X obj 141 323 tgl 15 0 \$0-timbre_square_on-r empty Square 17 7 0
12 -204800 -1 -1 0 1;
#X obj 141 265 tgl 15 0 \$0-timbre_sine_on-r empty Sine 17 7 0 12 -204800
-1 -1 0 1;
#X obj -196 674 osc~ 220;
#X obj -176 892 *~;
#X obj -118 702 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1
0 1;
#X obj -117 671 r \$0-timbre_sine_on-r;
#X msg 1467 -33 \; \$1-timbre_guitar normalize;
#X obj 1474 -98 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 1474 -78 list \$0;
#X obj 1474 12 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 1474 32 list \$0;
#X msg 1467 77 \; \$1-timbre_cello normalize;
#N canvas 123 39 1142 661 spectrograph 0;
#N canvas 491 173 651 544 fft-analysis 0;
#X obj 15 164 *~;
#X obj 14 99 inlet~;
#X obj 15 218 rfft~;
#X obj 14 306 *~;
#X obj 56 306 *~;
#X obj 15 356 sqrt~;
#X obj 23 386 loadbang;
#X obj 23 449 tgl 15 0 empty empty empty 0 -6 0 8 -262144 -1 -1 1 1
;
#X obj 15 8 block~ 512;
#X text 225 131 tabreceive~ outputs array contents \,;
#X text 225 149 constantly \, every block. Here it's;
#X text 223 169 used to get the Hann window to;
#X text 225 187 multiply by the input.;
#X text 120 7 block~ object does no computation but declares this;
#X text 120 24 window to be operating at a different block size from
;
#X text 122 58 Fourier transform.;
#X text 121 40 the parent window. This determines the size of the;
#X text 76 99 The inlet~ automatically re-blocks to the new block size.
;
#X obj 15 332 +~;
#X text 94 308 Take the magnitude by squaring real and imaginary part
\, adding and taking square root.;
#X text 110 424 periodically graph the output. It appears every 512
samples (about 12 milliseconds) but we only update the graph 4 times
per second. The graph is back on the main (parent) window.;
#X text 82 215 forward real FFT. Like "fft~" \, but only one inlet
(for the real part) and only the first half of the output signals are
used. (The others are determined by symmetry: they're complex conjugates
of the first half \, in reverse order.) This takes 1/2 the CPU time
of "fft".;
#X obj 36 140 tabreceive~ \$0-hann1;
#X obj 23 470 metro 250;
#X msg 23 410 1;
#X obj 14 498 tabwrite~ \$0-timbre_spectrograph1;
#X connect 0 0 2 0;
#X connect 1 0 0 0;
#X connect 2 0 3 0;
#X connect 2 0 3 1;
#X connect 2 1 4 0;
#X connect 2 1 4 1;
#X connect 3 0 18 0;
#X connect 4 0 18 1;
#X connect 5 0 25 0;
#X connect 6 0 24 0;
#X connect 7 0 23 0;
#X connect 18 0 5 0;
#X connect 22 0 0 1;
#X connect 23 0 25 0;
#X connect 24 0 7 0;
#X restore 1094 205 pd fft-analysis;
#N canvas 26 23 450 300 (subpatch) 0;
#X array \$0-timbre_spectrograph1 256 float 0 black black;
#X coords 0 128 255 0 500 100 1;
#X restore 168 115 graph;
#N canvas 0 22 450 300 (subpatch) 0;
#X array \$0-hann1 512 float 1 black black;
#A 0 0 3.76403e-05 0.000150591 0.000338823 0.000602275 0.000940949
0.00135478 0.00184369 0.00240764 0.00304651 0.00376022 0.00454867 0.00541174
0.0063493 0.00736117 0.00844726 0.00960737 0.0108413 0.0121489 0.01353
0.0149844 0.0165118 0.018112 0.0197847 0.0215298 0.023347 0.0252359
0.0271963 0.029228 0.0313305 0.0335036 0.035747 0.0380602 0.0404431
0.0428951 0.045416 0.0480053 0.0506628 0.0533879 0.0561802 0.0590394
0.061965 0.0649565 0.0680136 0.0711357 0.0743224 0.0775732 0.0808876
0.0842652 0.0877054 0.0912076 0.0947714 0.0983962 0.102082 0.105827
0.109631 0.113495 0.117416 0.121396 0.125432 0.129524 0.133673 0.137876
0.142135 0.146447 0.150812 0.15523 0.159699 0.164221 0.168792 0.173414
0.178084 0.182803 0.18757 0.192384 0.197244 0.20215 0.207101 0.212096
0.217134 0.222215 0.227338 0.232501 0.237705 0.242949 0.248231 0.253551
0.258908 0.264302 0.269731 0.275194 0.280692 0.286222 0.291785 0.297379
0.303004 0.308658 0.314341 0.320053 0.325791 0.331555 0.337345 0.343159
0.348997 0.354858 0.36074 0.366644 0.372567 0.37851 0.384471 0.390449
0.396444 0.402455 0.40848 0.414519 0.420571 0.426635 0.43271 0.438795
0.444889 0.450991 0.457101 0.463218 0.46934 0.475466 0.481596 0.487729
0.493864 0.5 0.506136 0.512271 0.518404 0.524534 0.53066 0.536782 0.542899
0.549009 0.555111 0.561205 0.56729 0.573365 0.579429 0.585481 0.59152
0.597545 0.603556 0.609551 0.615529 0.62149 0.627433 0.633356 0.63926
0.645142 0.651003 0.656841 0.662655 0.668445 0.674209 0.679947 0.685659
0.691342 0.696996 0.702621 0.708215 0.713778 0.719308 0.724806 0.730269
0.735698 0.741092 0.746449 0.751769 0.757051 0.762295 0.767499 0.772663
0.777785 0.782866 0.787904 0.792899 0.79785 0.802756 0.807616 0.81243
0.817197 0.821916 0.826586 0.831208 0.83578 0.840301 0.84477 0.849188
0.853553 0.857865 0.862124 0.866327 0.870476 0.874568 0.878604 0.882584
0.886505 0.890369 0.894173 0.897918 0.901604 0.905229 0.908792 0.912295
0.915735 0.919112 0.922427 0.925678 0.928864 0.931986 0.935044 0.938035
0.940961 0.94382 0.946612 0.949337 0.951995 0.954584 0.957105 0.959557
0.96194 0.964253 0.966496 0.96867 0.970772 0.972804 0.974764 0.976653
0.97847 0.980215 0.981888 0.983488 0.985016 0.98647 0.987851 0.989159
0.990393 0.991553 0.992639 0.993651 0.994588 0.995451 0.99624 0.996953
0.997592 0.998156 0.998645 0.999059 0.999398 0.999661 0.999849 0.999962
1 0.999962 0.999849 0.999661 0.999398 0.999059 0.998645 0.998156 0.997592
0.996953 0.99624 0.995451 0.994588 0.993651 0.992639 0.991553 0.990393
0.989159 0.987851 0.98647 0.985016 0.983488 0.981888 0.980215 0.97847
0.976653 0.974764 0.972804 0.970772 0.968669 0.966496 0.964253 0.96194
0.959557 0.957105 0.954584 0.951995 0.949337 0.946612 0.94382 0.940961
0.938035 0.935043 0.931986 0.928864 0.925678 0.922427 0.919112 0.915735
0.912295 0.908792 0.905229 0.901604 0.897918 0.894173 0.890369 0.886505
0.882584 0.878604 0.874568 0.870476 0.866327 0.862123 0.857865 0.853553
0.849188 0.84477 0.840301 0.835779 0.831208 0.826586 0.821916 0.817197
0.81243 0.807616 0.802755 0.79785 0.792899 0.787904 0.782866 0.777785
0.772662 0.767499 0.762295 0.757051 0.751769 0.746449 0.741092 0.735698
0.730269 0.724806 0.719308 0.713777 0.708215 0.702621 0.696996 0.691342
0.685659 0.679948 0.674209 0.668445 0.662655 0.656841 0.651003 0.645142
0.63926 0.633356 0.627433 0.62149 0.615529 0.60955 0.603556 0.597545
0.59152 0.585481 0.579429 0.573365 0.56729 0.561205 0.555111 0.549008
0.542899 0.536782 0.53066 0.524534 0.518404 0.512271 0.506136 0.5 0.493864
0.487729 0.481596 0.475466 0.46934 0.463218 0.457101 0.450991 0.444889
0.438794 0.43271 0.426635 0.420571 0.414519 0.40848 0.402455 0.396444
0.390449 0.384471 0.37851 0.372567 0.366643 0.36074 0.354858 0.348997
0.343159 0.337345 0.331555 0.325791 0.320052 0.314341 0.308658 0.303004
0.297379 0.291785 0.286222 0.280692 0.275194 0.269731 0.264302 0.258908
0.253551 0.248231 0.242949 0.237705 0.232501 0.227337 0.222215 0.217134
0.212096 0.207101 0.20215 0.197244 0.192384 0.18757 0.182803 0.178084
0.173414 0.168792 0.16422 0.159699 0.15523 0.150812 0.146446 0.142134
0.137876 0.133673 0.129524 0.125432 0.121396 0.117416 0.113495 0.109631
0.105827 0.102081 0.0983962 0.0947713 0.0912075 0.0877053 0.0842652
0.0808876 0.0775732 0.0743224 0.0711357 0.0680135 0.0649565 0.0619649
0.0590393 0.0561801 0.0533878 0.0506627 0.0480053 0.0454159 0.0428951
0.0404431 0.0380602 0.035747 0.0335036 0.0313305 0.0292279 0.0271963
0.0252359 0.0233469 0.0215298 0.0197847 0.0181119 0.0165117 0.0149844
0.01353 0.0121489 0.0108413 0.00960734 0.00844723 0.00736117 0.00634927
0.00541171 0.00454867 0.00376022 0.00304648 0.00240761 0.00184369 0.00135478
0.000940949 0.000602275 0.000338793 0.000150591 3.76403e-05;
#X coords 0 1 511 0 200 120 1;
#X restore 1399 132 graph;
#X msg 1341 130 0;
#X obj 1235 179 osc~;
#X obj 1235 131 samplerate~;
#X obj 1235 202 *~ -0.5;
#X obj 1235 225 +~ 0.5;
#X text 1385 124 1;
#X text 1378 242 0;
#X text 1394 255 0;
#X obj 1235 155 / 512;
#X obj 1228 70 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X text 1504 109 Hann window;
#X text 1283 177 period 512;
#X text 1260 64 recalculate Hann;
#X text 1284 77 window table;
#X text 1580 258 511;
#X obj 1227 40 inlet;
#X obj 1054 232 outlet~;
#X obj 1054 28 inlet~;
#X text 1108 234 Thru;
#X obj 1330 34 loadbang;
#X text 155 226 20;
#X text 171 226 500;
#X text 186 238 1000;
#X text 200 226 2000;
#X text 244 225 4000;
#X text 164 238 250;
#X text 163 213 |;
#X text 177 213 |;
#X text 187 213 |;
#X text 209 213 |;
#X text 254 213 |;
#X text 300 213 |;
#X text 291 225 6000;
#X text 349 213 |;
#X text 338 225 8000;
#X text 391 213 |;
#X text 380 225 10000;
#X text 436 213 |;
#X text 425 225 12000;
#X text 482 213 |;
#X text 471 225 14000;
#X text 528 213 |;
#X text 517 225 16000;
#X text 574 213 |;
#X text 563 225 18000;
#X text 617 213 |;
#X text 606 225 20000;
#X text 664 213 |;
#X text 653 225 22000;
#X text 354 253 Frequency in Hz;
#X text 101 155 Magni-tude, f 6;
#X text 147 158 0.5-;
#X text 154 108 1;
#X text 154 205 0;
#X obj 1227 250 tabwrite~ \$0-hann1;
#X text 170 213 |;
#X connect 3 0 4 1;
#X connect 4 0 6 0;
#X connect 5 0 11 0;
#X connect 6 0 7 0;
#X connect 7 0 57 0;
#X connect 11 0 4 0;
#X connect 12 0 5 0;
#X connect 12 0 3 0;
#X connect 12 0 57 0;
#X connect 18 0 12 0;
#X connect 20 0 0 0;
#X connect 20 0 19 0;
#X connect 22 0 12 0;
#X coords 0 -1 1 1 590 175 2 100 100;
#X restore 239 310 pd spectrograph;
#N canvas 1913 22 1024 542 box 0;
#N canvas 25 23 450 278 (subpatch) 0;
#X array \$0-fourier_spectrogram_demo_scope 256 float 1 black black
;
#A 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;
#X coords 0 1 255 -1 500 100 1;
#X restore 181 135 graph;
#X text 396 246 Time;
#X text 108 172 Amplitude;
#X coords 0 -1 1 1 590 175 2 100 100;
#X restore 239 123 pd box;
#X obj 867 972 send~ \$0-timbre_spectro1;
#X obj 879 385 receive~ \$0-timbre_spectro1;
#X obj 1180 933 metro 250;
#X obj 140 200 nbx 5 14 -1e+37 1e+37 0 0 \$0-freq_timbre3-r empty Frequency
0 -8 0 12 -204800 -1 -1 0 256 0;
#X obj 139 232 nbx 5 14 0 1.5 0 0 \$0-amp_timbre3-r empty Amplitude
0 -8 0 12 -204800 -1 -1 0 256 0;
#N canvas 27 23 450 300 box 0;
#X coords 0 -1 1 1 100 175 2 100 100;
#X restore 124 173 pd box;
#N canvas 27 23 450 300 box 0;
#X coords 0 -1 1 1 100 85 2 100 100;
#X restore 124 354 pd box;
#X obj -122 460 r \$0-freq_timbre3-r;
#X obj -191 755 *~ 1;
#X obj 74 781 *~ 1;
#X obj 407 790 *~ 1;
#X obj 719 708 *~;
#X obj 1401 722 *~ 1;
#X obj 1042 749 *~ 1;
#X obj 141 417 nbx 5 14 0 2 0 0 \$0-samp_amp_timbre3-r empty Amplitude
0 -8 0 12 -204800 -1 -1 0 256 0;
#X obj 1238 622 r \$0-samp_amp_timbre3-r;
#X obj -146 553 r \$0-amp_timbre3-r;
#X connect 0 0 84 0;
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X connect 3 0 84 1;
#X connect 7 0 12 0;
#X connect 7 0 77 0;
#X connect 8 0 10 0;
#X connect 9 0 8 0;
#X connect 10 0 7 0;
#X connect 12 0 13 0;
#X connect 13 0 15 0;
#X connect 14 0 17 1;
#X connect 15 0 16 0;
#X connect 17 0 18 0;
#X connect 18 0 19 0;
#X connect 19 0 95 0;
#X connect 19 1 17 0;
#X connect 20 0 23 0;
#X connect 20 0 75 0;
#X connect 21 0 27 0;
#X connect 22 0 21 0;
#X connect 23 0 24 0;
#X connect 24 0 25 0;
#X connect 25 0 26 0;
#X connect 27 0 20 0;
#X connect 28 0 29 1;
#X connect 29 0 30 0;
#X connect 30 0 31 0;
#X connect 31 0 94 0;
#X connect 31 1 29 0;
#X connect 32 0 33 0;
#X connect 33 0 34 0;
#X connect 33 1 28 0;
#X connect 34 0 30 0;
#X connect 35 0 36 0;
#X connect 35 1 14 0;
#X connect 36 0 18 0;
#X connect 37 0 35 0;
#X connect 38 0 22 0;
#X connect 38 0 9 0;
#X connect 43 0 44 0;
#X connect 44 0 93 0;
#X connect 45 0 4 0;
#X connect 45 0 39 0;
#X connect 45 0 82 0;
#X connect 46 0 45 1;
#X connect 47 0 43 0;
#X connect 49 0 46 0;
#X connect 50 0 4 0;
#X connect 50 0 39 0;
#X connect 50 0 82 0;
#X connect 51 0 50 1;
#X connect 52 0 55 0;
#X connect 52 0 57 0;
#X connect 54 0 51 0;
#X connect 55 0 56 0;
#X connect 56 0 57 1;
#X connect 57 0 58 0;
#X connect 58 0 59 0;
#X connect 59 0 92 0;
#X connect 60 0 4 0;
#X connect 60 0 39 0;
#X connect 60 0 82 0;
#X connect 61 0 60 1;
#X connect 62 0 63 0;
#X connect 63 0 64 0;
#X connect 64 0 65 0;
#X connect 65 0 66 0;
#X connect 66 0 91 0;
#X connect 67 0 61 0;
#X connect 70 0 90 0;
#X connect 71 0 4 0;
#X connect 71 0 39 0;
#X connect 71 0 82 0;
#X connect 72 0 71 1;
#X connect 73 0 72 0;
#X connect 75 0 76 0;
#X connect 76 0 74 0;
#X connect 77 0 78 0;
#X connect 78 0 79 0;
#X connect 83 0 80 0;
#X connect 84 0 39 0;
#X connect 89 0 70 0;
#X connect 89 0 62 0;
#X connect 89 0 52 0;
#X connect 89 0 47 0;
#X connect 90 0 71 0;
#X connect 91 0 60 0;
#X connect 92 0 50 0;
#X connect 93 0 45 0;
#X connect 94 0 42 0;
#X connect 94 0 39 0;
#X connect 94 0 82 0;
#X connect 95 0 4 0;
#X connect 95 0 82 0;
#X connect 95 0 39 0;
#X connect 97 0 95 1;
#X connect 97 0 94 1;
#X connect 98 0 90 1;
#X connect 98 0 91 1;
#X connect 98 0 92 1;
#X connect 98 0 93 1;
#X coords 0 -1 1 1 750 400 2 100 100;
#X restore 573 28 pd demonstration.wave;
#X text 10 761 Click on a toggle to hear and display a harmonic spectrum
– the synthetic tones from the previous section \, as well as two
sustained cello and guitar tones. For the synthetic tones \, you can
change the fundamental frequency of the tone. Notice how the partials
distribute evenly as you raise or lower the fundamental. This is indicative
of a harmonic spectrum – the partials will always stay at a proportion
from the fundamental \, whether its 2x or 16x the fundamental. Try
the “real world” sounds \, the guitar and cello. Notice how the
harmonic spectrums are not as nice and neat as the synthetic tones.
This is one of the many reasons why it is difficult to recreate natural
sounds using synthetic tones \, because natural sounds have random
inconsistencies that make it difficult to predict and thus recreate.
However \, there should still be somewhat of a visible harmonic spectrum
in the spectrograph., f 101;
#X text 10 1 5.3 HARMONIC SPECTRUM, f 73;
#X restore 21 129 pd 03_HARMONIC_SPECTRUM;
#N canvas 49 57 1340 759 04_HARMONIC_SPECTRUM_AND_THE_OCTAVE 0;
#N canvas 27 23 1413 855 demonstration.wave 0;
#X obj 1034 826 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1
1 1;
#X obj 1035 783 loadbang;
#X msg 1035 804 1;
#X floatatom 1080 826 5 0 0 0 - - -, f 5;
#X obj 921 879 throw~ \$0-dac;
#X obj 1134 -255 declare -path sounds;
#X obj 730 618 -~ 0.5;
#X obj 732 738 *~;
#X obj 749 710 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#N canvas 123 39 1142 661 spectrograph 0;
#N canvas 491 173 651 544 fft-analysis 0;
#X obj 15 164 *~;
#X obj 14 99 inlet~;
#X obj 15 218 rfft~;
#X obj 14 306 *~;
#X obj 56 306 *~;
#X obj 15 356 sqrt~;
#X obj 23 386 loadbang;
#X obj 23 449 tgl 15 0 empty empty empty 0 -6 0 8 -262144 -1 -1 1 1
;
#X obj 15 8 block~ 512;
#X text 225 131 tabreceive~ outputs array contents \,;
#X text 225 149 constantly \, every block. Here it's;
#X text 223 169 used to get the Hann window to;
#X text 225 187 multiply by the input.;
#X text 120 7 block~ object does no computation but declares this;
#X text 120 24 window to be operating at a different block size from
;
#X text 122 58 Fourier transform.;
#X text 121 40 the parent window. This determines the size of the;
#X text 76 99 The inlet~ automatically re-blocks to the new block size.
;
#X obj 15 332 +~;
#X text 94 308 Take the magnitude by squaring real and imaginary part
\, adding and taking square root.;
#X text 110 424 periodically graph the output. It appears every 512
samples (about 12 milliseconds) but we only update the graph 4 times
per second. The graph is back on the main (parent) window.;
#X text 82 215 forward real FFT. Like "fft~" \, but only one inlet
(for the real part) and only the first half of the output signals are
used. (The others are determined by symmetry: they're complex conjugates
of the first half \, in reverse order.) This takes 1/2 the CPU time
of "fft".;
#X obj 23 470 metro 250;
#X msg 23 410 1;
#X obj 14 498 tabwrite~ \$0-timbre_spectrograph4;
#X obj 36 140 tabreceive~ \$0-hann4;
#X connect 0 0 2 0;
#X connect 1 0 0 0;
#X connect 2 0 3 0;
#X connect 2 0 3 1;
#X connect 2 1 4 0;
#X connect 2 1 4 1;
#X connect 3 0 18 0;
#X connect 4 0 18 1;
#X connect 5 0 24 0;
#X connect 6 0 23 0;
#X connect 7 0 22 0;
#X connect 18 0 5 0;
#X connect 22 0 24 0;
#X connect 23 0 7 0;
#X connect 25 0 0 1;
#X restore 1094 205 pd fft-analysis;
#N canvas 26 23 450 300 (subpatch) 0;
#X array \$0-timbre_spectrograph4 256 float 0 black black;
#X coords 0 128 255 0 500 100 1;
#X restore 168 115 graph;
#N canvas 0 22 450 300 (subpatch) 0;
#X array \$0-hann4 512 float 1 black black;
#A 0 0 3.76403e-05 0.000150591 0.000338823 0.000602275 0.000940949
0.00135478 0.00184369 0.00240764 0.00304651 0.00376022 0.00454867 0.00541174
0.0063493 0.00736117 0.00844726 0.00960737 0.0108413 0.0121489 0.01353
0.0149844 0.0165118 0.018112 0.0197847 0.0215298 0.023347 0.0252359
0.0271963 0.029228 0.0313305 0.0335036 0.035747 0.0380602 0.0404431
0.0428951 0.045416 0.0480053 0.0506628 0.0533879 0.0561802 0.0590394
0.061965 0.0649565 0.0680136 0.0711357 0.0743224 0.0775732 0.0808876
0.0842652 0.0877054 0.0912076 0.0947714 0.0983962 0.102082 0.105827
0.109631 0.113495 0.117416 0.121396 0.125432 0.129524 0.133673 0.137876
0.142135 0.146447 0.150812 0.15523 0.159699 0.164221 0.168792 0.173414
0.178084 0.182803 0.18757 0.192384 0.197244 0.20215 0.207101 0.212096
0.217134 0.222215 0.227338 0.232501 0.237705 0.242949 0.248231 0.253551
0.258908 0.264302 0.269731 0.275194 0.280692 0.286222 0.291785 0.297379
0.303004 0.308658 0.314341 0.320053 0.325791 0.331555 0.337345 0.343159
0.348997 0.354858 0.36074 0.366644 0.372567 0.37851 0.384471 0.390449
0.396444 0.402455 0.40848 0.414519 0.420571 0.426635 0.43271 0.438795
0.444889 0.450991 0.457101 0.463218 0.46934 0.475466 0.481596 0.487729
0.493864 0.5 0.506136 0.512271 0.518404 0.524534 0.53066 0.536782 0.542899
0.549009 0.555111 0.561205 0.56729 0.573365 0.579429 0.585481 0.59152
0.597545 0.603556 0.609551 0.615529 0.62149 0.627433 0.633356 0.63926
0.645142 0.651003 0.656841 0.662655 0.668445 0.674209 0.679947 0.685659
0.691342 0.696996 0.702621 0.708215 0.713778 0.719308 0.724806 0.730269
0.735698 0.741092 0.746449 0.751769 0.757051 0.762295 0.767499 0.772663
0.777785 0.782866 0.787904 0.792899 0.79785 0.802756 0.807616 0.81243
0.817197 0.821916 0.826586 0.831208 0.83578 0.840301 0.84477 0.849188
0.853553 0.857865 0.862124 0.866327 0.870476 0.874568 0.878604 0.882584
0.886505 0.890369 0.894173 0.897918 0.901604 0.905229 0.908792 0.912295
0.915735 0.919112 0.922427 0.925678 0.928864 0.931986 0.935044 0.938035
0.940961 0.94382 0.946612 0.949337 0.951995 0.954584 0.957105 0.959557
0.96194 0.964253 0.966496 0.96867 0.970772 0.972804 0.974764 0.976653
0.97847 0.980215 0.981888 0.983488 0.985016 0.98647 0.987851 0.989159
0.990393 0.991553 0.992639 0.993651 0.994588 0.995451 0.99624 0.996953
0.997592 0.998156 0.998645 0.999059 0.999398 0.999661 0.999849 0.999962
1 0.999962 0.999849 0.999661 0.999398 0.999059 0.998645 0.998156 0.997592
0.996953 0.99624 0.995451 0.994588 0.993651 0.992639 0.991553 0.990393
0.989159 0.987851 0.98647 0.985016 0.983488 0.981888 0.980215 0.97847
0.976653 0.974764 0.972804 0.970772 0.968669 0.966496 0.964253 0.96194
0.959557 0.957105 0.954584 0.951995 0.949337 0.946612 0.94382 0.940961
0.938035 0.935043 0.931986 0.928864 0.925678 0.922427 0.919112 0.915735
0.912295 0.908792 0.905229 0.901604 0.897918 0.894173 0.890369 0.886505
0.882584 0.878604 0.874568 0.870476 0.866327 0.862123 0.857865 0.853553
0.849188 0.84477 0.840301 0.835779 0.831208 0.826586 0.821916 0.817197
0.81243 0.807616 0.802755 0.79785 0.792899 0.787904 0.782866 0.777785
0.772662 0.767499 0.762295 0.757051 0.751769 0.746449 0.741092 0.735698
0.730269 0.724806 0.719308 0.713777 0.708215 0.702621 0.696996 0.691342
0.685659 0.679948 0.674209 0.668445 0.662655 0.656841 0.651003 0.645142
0.63926 0.633356 0.627433 0.62149 0.615529 0.60955 0.603556 0.597545
0.59152 0.585481 0.579429 0.573365 0.56729 0.561205 0.555111 0.549008
0.542899 0.536782 0.53066 0.524534 0.518404 0.512271 0.506136 0.5 0.493864
0.487729 0.481596 0.475466 0.46934 0.463218 0.457101 0.450991 0.444889
0.438794 0.43271 0.426635 0.420571 0.414519 0.40848 0.402455 0.396444
0.390449 0.384471 0.37851 0.372567 0.366643 0.36074 0.354858 0.348997
0.343159 0.337345 0.331555 0.325791 0.320052 0.314341 0.308658 0.303004
0.297379 0.291785 0.286222 0.280692 0.275194 0.269731 0.264302 0.258908
0.253551 0.248231 0.242949 0.237705 0.232501 0.227337 0.222215 0.217134
0.212096 0.207101 0.20215 0.197244 0.192384 0.18757 0.182803 0.178084
0.173414 0.168792 0.16422 0.159699 0.15523 0.150812 0.146446 0.142134
0.137876 0.133673 0.129524 0.125432 0.121396 0.117416 0.113495 0.109631
0.105827 0.102081 0.0983962 0.0947713 0.0912075 0.0877053 0.0842652
0.0808876 0.0775732 0.0743224 0.0711357 0.0680135 0.0649565 0.0619649
0.0590393 0.0561801 0.0533878 0.0506627 0.0480053 0.0454159 0.0428951
0.0404431 0.0380602 0.035747 0.0335036 0.0313305 0.0292279 0.0271963
0.0252359 0.0233469 0.0215298 0.0197847 0.0181119 0.0165117 0.0149844
0.01353 0.0121489 0.0108413 0.00960734 0.00844723 0.00736117 0.00634927
0.00541171 0.00454867 0.00376022 0.00304648 0.00240761 0.00184369 0.00135478
0.000940949 0.000602275 0.000338793 0.000150591 3.76403e-05;
#X coords 0 1 511 0 200 120 1;
#X restore 1399 132 graph;
#X msg 1341 130 0;
#X obj 1235 179 osc~;
#X obj 1235 131 samplerate~;
#X obj 1235 202 *~ -0.5;
#X obj 1235 225 +~ 0.5;
#X text 1385 124 1;
#X text 1378 242 0;
#X text 1394 255 0;
#X obj 1235 155 / 512;
#X obj 1228 70 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X text 1504 109 Hann window;
#X text 1283 177 period 512;
#X text 1260 64 recalculate Hann;
#X text 1284 77 window table;
#X text 1580 258 511;
#X obj 1227 40 inlet;
#X obj 1054 232 outlet~;
#X obj 1054 28 inlet~;
#X text 1108 234 Thru;
#X obj 1330 34 loadbang;
#X text 155 226 20;
#X text 171 226 500;
#X text 186 238 1000;
#X text 200 226 2000;
#X text 244 225 4000;
#X text 164 238 250;
#X text 163 213 |;
#X text 177 213 |;
#X text 187 213 |;
#X text 209 213 |;
#X text 254 213 |;
#X text 300 213 |;
#X text 291 225 6000;
#X text 349 213 |;
#X text 338 225 8000;
#X text 391 213 |;
#X text 380 225 10000;
#X text 436 213 |;
#X text 425 225 12000;
#X text 482 213 |;
#X text 471 225 14000;
#X text 528 213 |;
#X text 517 225 16000;
#X text 574 213 |;
#X text 563 225 18000;
#X text 617 213 |;
#X text 606 225 20000;
#X text 664 213 |;
#X text 653 225 22000;
#X text 354 253 Frequency in Hz;
#X text 101 155 Magni-tude, f 6;
#X text 147 158 0.5-;
#X text 154 108 1;
#X text 154 205 0;
#X text 170 213 |;
#X obj 1227 250 tabwrite~ \$0-hann4;
#X connect 3 0 4 1;
#X connect 4 0 6 0;
#X connect 5 0 11 0;
#X connect 6 0 7 0;
#X connect 7 0 58 0;
#X connect 11 0 4 0;
#X connect 12 0 5 0;
#X connect 12 0 3 0;
#X connect 12 0 58 0;
#X connect 18 0 12 0;
#X connect 20 0 0 0;
#X connect 20 0 19 0;
#X connect 22 0 12 0;
#X coords 0 -1 1 1 590 175 2 100 100;
#X restore 239 310 pd spectrograph;
#N canvas 416 23 1024 542 box 0;
#N canvas 25 23 450 278 (subpatch) 0;
#X array \$0-fourier_spectrogram_demo_scope4 256 float 1 black black
;
#A 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;
#X coords 0 1 255 -1 500 100 1;
#X restore 181 135 graph;
#X text 396 246 Time;
#X text 108 172 Amplitude;
#X coords 0 -1 1 1 590 175 2 100 100;
#X restore 239 123 pd box;
#X obj 1035 850 metro 250;
#X obj 879 385 receive~ \$0-timbre_spectro4;
#X obj 1035 877 tabwrite~ \$0-fourier_spectrogram_demo_scope4;
#X obj 720 879 send~ \$0-timbre_spectro4;
#X obj 126 135 tgl 15 0 \$0-timbre_440_on-r empty 440_Hz 17 7 0 12
-204800 -1 -1 0 1;
#X obj 530 618 -~ 0.5;
#X obj 530 642 *~ 2;
#X obj 532 738 *~;
#X obj 549 710 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 126 165 tgl 15 0 \$0-timbre_880_on-r empty 880_Hz 17 7 0 12
-204800 -1 -1 0 1;
#X obj 260 618 -~ 0.5;
#X obj 260 642 *~ 2;
#X obj 262 738 *~;
#X obj 279 710 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 70 618 -~ 0.5;
#X obj 70 642 *~ 2;
#X obj 72 738 *~;
#X obj 89 710 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 126 195 tgl 15 0 \$0-timbre_1046_4_on-r empty 1046.4_Hz 17 7
0 12 -204800 -1 -1 0 1;
#X obj 126 225 tgl 15 0 \$0-timbre_2092_8_on-r empty 2092.8_Hz 17 7
0 12 -204800 -1 -1 0 1;
#X obj 730 642 *~ 2;
#X obj 730 594 phasor~ 440;
#X obj 530 594 phasor~ 880;
#X obj 549 680 r \$0-timbre_880_on-r;
#X obj 749 680 r \$0-timbre_440_on-r;
#X obj 260 594 phasor~ 1046.4;
#X obj 70 594 phasor~ 2092.8;
#X obj 89 680 r \$0-timbre_2092_8_on-r;
#X obj 279 680 r \$0-timbre_1046_4_on-r;
#X connect 0 0 11 0;
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X connect 3 0 11 1;
#X connect 6 0 31 0;
#X connect 7 0 4 0;
#X connect 7 0 13 0;
#X connect 7 0 14 0;
#X connect 8 0 7 1;
#X connect 11 0 13 0;
#X connect 12 0 9 0;
#X connect 16 0 17 0;
#X connect 17 0 18 0;
#X connect 18 0 14 0;
#X connect 18 0 4 0;
#X connect 18 0 13 0;
#X connect 19 0 18 1;
#X connect 21 0 22 0;
#X connect 22 0 23 0;
#X connect 23 0 13 0;
#X connect 23 0 4 0;
#X connect 23 0 14 0;
#X connect 24 0 23 1;
#X connect 25 0 26 0;
#X connect 26 0 27 0;
#X connect 27 0 13 0;
#X connect 27 0 4 0;
#X connect 27 0 14 0;
#X connect 28 0 27 1;
#X connect 31 0 7 0;
#X connect 32 0 6 0;
#X connect 33 0 16 0;
#X connect 34 0 19 0;
#X connect 35 0 8 0;
#X connect 36 0 21 0;
#X connect 37 0 25 0;
#X connect 38 0 28 0;
#X connect 39 0 24 0;
#X coords 0 -1 1 1 750 400 2 100 100;
#X restore 577 42 pd demonstration.wave;
#X text 14 35 As mentioned in the frequency chapter \, our perception
of the phenomenon known as the octave becomes further reinforced by
harmonic spectra. How does this factor into our perception of the octave?
Let’s look at some harmonic spectrum to see., f 79;
#X text 14 105 Click on the toggle marked “A4 440 Hz”. This plays
a harmonic spectrum tone (specifically \, a sawtooth wave) with a fundamental
frequency of 440 Hz. Let’s say that the amplitude the fundamental
is 1 (in actually I have scaled the amplitude slightly \, as 1 could
distort speakers). For a sawtooth wave \, the frequencies and amplitudes
of partials 2-10 would be:, f 79;
#X text 12 333 Now click on the toggle marked “A5 880 Hz”. Your
ear likely hears this as the same pitch class \, one octave higher.
Let’s look at the partials for this note. Partials 2-6 has the following
frequencies and amplitudes:, f 79;
#X text 215 388 1760 - 0.5 \, 2640 - 0.33 \, 3520 - 0.25 \, 4400 -
0.2 \, 5280 - 0.166 \, 6160 - 0.142 \, 7040 - 0.125 \, 7920 - 0.111
\, 8800 - 0.1., f 14;
#X text 213 191 880 - 0.5 \, 1320 - 0.33 \, 1760 - 0.25 \, 2200 - 0.2
\, 2640 - 0.166 \, 3080 - 0.142 \, 3520 - 0.125 \, 3960 - 0.111 \,
4400 - 0.1, f 13;
#X text 16 534 As you can see \, the first four partials of the “A5”
note with a fundamental of 880 Hz appear in the partials of the “A4”
note with a fundamental of 440 Hz. If we kept calculating the partials
of A4 we would see that even more partials would line up. This pattern
holds true for ALL octaves. If we had compared the first 10 partials
of A3 (220 Hz) to A4 \, we would have seen the first 4 partials of
A4 appear in A3. Or if we compared C6 (1046.4 Hz) to C7 (2092.8) we
would see the same pattern again. Test this on your own by listening
to them. You can also see the overlap in partials when playing the
two octaves simultaneously - certain partials will spike up in the
spectrograph when both are played together \, and those are partials
shared by both notes., f 78;
#X text 14 15 5.4 HARMONIC SPECTRUM AND THE OCTAVE, f 73;
#X restore 21 152 pd 04_HARMONIC_SPECTRUM_AND_THE_OCTAVE;
#N canvas 55 23 1330 802 05_INHARMONIC_SPECTRUM 0;
#N canvas 27 23 1413 855 demonstration.wave 0;
#X obj 973 516 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X obj 974 473 loadbang;
#X msg 974 494 1;
#X floatatom 1019 516 5 0 0 0 - - -, f 5;
#X obj 1134 -255 declare -path sounds;
#N canvas 123 39 1142 661 spectrograph 0;
#N canvas 491 173 651 544 fft-analysis 0;
#X obj 15 164 *~;
#X obj 14 99 inlet~;
#X obj 15 218 rfft~;
#X obj 14 306 *~;
#X obj 56 306 *~;
#X obj 15 356 sqrt~;
#X obj 23 386 loadbang;
#X obj 23 449 tgl 15 0 empty empty empty 0 -6 0 8 -262144 -1 -1 1 1
;
#X obj 15 8 block~ 512;
#X text 225 131 tabreceive~ outputs array contents \,;
#X text 225 149 constantly \, every block. Here it's;
#X text 223 169 used to get the Hann window to;
#X text 225 187 multiply by the input.;
#X text 120 7 block~ object does no computation but declares this;
#X text 120 24 window to be operating at a different block size from
;
#X text 122 58 Fourier transform.;
#X text 121 40 the parent window. This determines the size of the;
#X text 76 99 The inlet~ automatically re-blocks to the new block size.
;
#X obj 15 332 +~;
#X text 94 308 Take the magnitude by squaring real and imaginary part
\, adding and taking square root.;
#X text 110 424 periodically graph the output. It appears every 512
samples (about 12 milliseconds) but we only update the graph 4 times
per second. The graph is back on the main (parent) window.;
#X text 82 215 forward real FFT. Like "fft~" \, but only one inlet
(for the real part) and only the first half of the output signals are
used. (The others are determined by symmetry: they're complex conjugates
of the first half \, in reverse order.) This takes 1/2 the CPU time
of "fft".;
#X obj 23 470 metro 250;
#X msg 23 410 1;
#X obj 36 140 tabreceive~ \$0-hann5;
#X obj 14 498 tabwrite~ \$0-timbre_spectrograph5;
#X connect 0 0 2 0;
#X connect 1 0 0 0;
#X connect 2 0 3 0;
#X connect 2 0 3 1;
#X connect 2 1 4 0;
#X connect 2 1 4 1;
#X connect 3 0 18 0;
#X connect 4 0 18 1;
#X connect 5 0 25 0;
#X connect 6 0 23 0;
#X connect 7 0 22 0;
#X connect 18 0 5 0;
#X connect 22 0 25 0;
#X connect 23 0 7 0;
#X connect 24 0 0 1;
#X restore 1094 205 pd fft-analysis;
#N canvas 26 23 450 300 (subpatch) 0;
#X array \$0-timbre_spectrograph5 256 float 0 black black;
#X coords 0 128 255 0 500 100 1;
#X restore 168 115 graph;
#N canvas 0 22 450 300 (subpatch) 0;
#X array \$0-hann5 512 float 1 black black;
#A 0 0 3.76403e-05 0.000150591 0.000338823 0.000602275 0.000940949
0.00135478 0.00184369 0.00240764 0.00304651 0.00376022 0.00454867 0.00541174
0.0063493 0.00736117 0.00844726 0.00960737 0.0108413 0.0121489 0.01353
0.0149844 0.0165118 0.018112 0.0197847 0.0215298 0.023347 0.0252359
0.0271963 0.029228 0.0313305 0.0335036 0.035747 0.0380602 0.0404431
0.0428951 0.045416 0.0480053 0.0506628 0.0533879 0.0561802 0.0590394
0.061965 0.0649565 0.0680136 0.0711357 0.0743224 0.0775732 0.0808876
0.0842652 0.0877054 0.0912076 0.0947714 0.0983962 0.102082 0.105827
0.109631 0.113495 0.117416 0.121396 0.125432 0.129524 0.133673 0.137876
0.142135 0.146447 0.150812 0.15523 0.159699 0.164221 0.168792 0.173414
0.178084 0.182803 0.18757 0.192384 0.197244 0.20215 0.207101 0.212096
0.217134 0.222215 0.227338 0.232501 0.237705 0.242949 0.248231 0.253551
0.258908 0.264302 0.269731 0.275194 0.280692 0.286222 0.291785 0.297379
0.303004 0.308658 0.314341 0.320053 0.325791 0.331555 0.337345 0.343159
0.348997 0.354858 0.36074 0.366644 0.372567 0.37851 0.384471 0.390449
0.396444 0.402455 0.40848 0.414519 0.420571 0.426635 0.43271 0.438795
0.444889 0.450991 0.457101 0.463218 0.46934 0.475466 0.481596 0.487729
0.493864 0.5 0.506136 0.512271 0.518404 0.524534 0.53066 0.536782 0.542899
0.549009 0.555111 0.561205 0.56729 0.573365 0.579429 0.585481 0.59152
0.597545 0.603556 0.609551 0.615529 0.62149 0.627433 0.633356 0.63926
0.645142 0.651003 0.656841 0.662655 0.668445 0.674209 0.679947 0.685659
0.691342 0.696996 0.702621 0.708215 0.713778 0.719308 0.724806 0.730269
0.735698 0.741092 0.746449 0.751769 0.757051 0.762295 0.767499 0.772663
0.777785 0.782866 0.787904 0.792899 0.79785 0.802756 0.807616 0.81243
0.817197 0.821916 0.826586 0.831208 0.83578 0.840301 0.84477 0.849188
0.853553 0.857865 0.862124 0.866327 0.870476 0.874568 0.878604 0.882584
0.886505 0.890369 0.894173 0.897918 0.901604 0.905229 0.908792 0.912295
0.915735 0.919112 0.922427 0.925678 0.928864 0.931986 0.935044 0.938035
0.940961 0.94382 0.946612 0.949337 0.951995 0.954584 0.957105 0.959557
0.96194 0.964253 0.966496 0.96867 0.970772 0.972804 0.974764 0.976653
0.97847 0.980215 0.981888 0.983488 0.985016 0.98647 0.987851 0.989159
0.990393 0.991553 0.992639 0.993651 0.994588 0.995451 0.99624 0.996953
0.997592 0.998156 0.998645 0.999059 0.999398 0.999661 0.999849 0.999962
1 0.999962 0.999849 0.999661 0.999398 0.999059 0.998645 0.998156 0.997592
0.996953 0.99624 0.995451 0.994588 0.993651 0.992639 0.991553 0.990393
0.989159 0.987851 0.98647 0.985016 0.983488 0.981888 0.980215 0.97847
0.976653 0.974764 0.972804 0.970772 0.968669 0.966496 0.964253 0.96194
0.959557 0.957105 0.954584 0.951995 0.949337 0.946612 0.94382 0.940961
0.938035 0.935043 0.931986 0.928864 0.925678 0.922427 0.919112 0.915735
0.912295 0.908792 0.905229 0.901604 0.897918 0.894173 0.890369 0.886505
0.882584 0.878604 0.874568 0.870476 0.866327 0.862123 0.857865 0.853553
0.849188 0.84477 0.840301 0.835779 0.831208 0.826586 0.821916 0.817197
0.81243 0.807616 0.802755 0.79785 0.792899 0.787904 0.782866 0.777785
0.772662 0.767499 0.762295 0.757051 0.751769 0.746449 0.741092 0.735698
0.730269 0.724806 0.719308 0.713777 0.708215 0.702621 0.696996 0.691342
0.685659 0.679948 0.674209 0.668445 0.662655 0.656841 0.651003 0.645142
0.63926 0.633356 0.627433 0.62149 0.615529 0.60955 0.603556 0.597545
0.59152 0.585481 0.579429 0.573365 0.56729 0.561205 0.555111 0.549008
0.542899 0.536782 0.53066 0.524534 0.518404 0.512271 0.506136 0.5 0.493864
0.487729 0.481596 0.475466 0.46934 0.463218 0.457101 0.450991 0.444889
0.438794 0.43271 0.426635 0.420571 0.414519 0.40848 0.402455 0.396444
0.390449 0.384471 0.37851 0.372567 0.366643 0.36074 0.354858 0.348997
0.343159 0.337345 0.331555 0.325791 0.320052 0.314341 0.308658 0.303004
0.297379 0.291785 0.286222 0.280692 0.275194 0.269731 0.264302 0.258908
0.253551 0.248231 0.242949 0.237705 0.232501 0.227337 0.222215 0.217134
0.212096 0.207101 0.20215 0.197244 0.192384 0.18757 0.182803 0.178084
0.173414 0.168792 0.16422 0.159699 0.15523 0.150812 0.146446 0.142134
0.137876 0.133673 0.129524 0.125432 0.121396 0.117416 0.113495 0.109631
0.105827 0.102081 0.0983962 0.0947713 0.0912075 0.0877053 0.0842652
0.0808876 0.0775732 0.0743224 0.0711357 0.0680135 0.0649565 0.0619649
0.0590393 0.0561801 0.0533878 0.0506627 0.0480053 0.0454159 0.0428951
0.0404431 0.0380602 0.035747 0.0335036 0.0313305 0.0292279 0.0271963
0.0252359 0.0233469 0.0215298 0.0197847 0.0181119 0.0165117 0.0149844
0.01353 0.0121489 0.0108413 0.00960734 0.00844723 0.00736117 0.00634927
0.00541171 0.00454867 0.00376022 0.00304648 0.00240761 0.00184369 0.00135478
0.000940949 0.000602275 0.000338793 0.000150591 3.76403e-05;
#X coords 0 1 511 0 200 120 1;
#X restore 1399 132 graph;
#X msg 1341 130 0;
#X obj 1235 179 osc~;
#X obj 1235 131 samplerate~;
#X obj 1235 202 *~ -0.5;
#X obj 1235 225 +~ 0.5;
#X text 1385 124 1;
#X text 1378 242 0;
#X text 1394 255 0;
#X obj 1235 155 / 512;
#X obj 1228 70 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X text 1504 109 Hann window;
#X text 1283 177 period 512;
#X text 1260 64 recalculate Hann;
#X text 1284 77 window table;
#X text 1580 258 511;
#X obj 1227 40 inlet;
#X obj 1054 232 outlet~;
#X obj 1054 28 inlet~;
#X text 1108 234 Thru;
#X obj 1330 34 loadbang;
#X text 155 226 20;
#X text 171 226 500;
#X text 186 238 1000;
#X text 200 226 2000;
#X text 244 225 4000;
#X text 164 238 250;
#X text 163 213 |;
#X text 177 213 |;
#X text 187 213 |;
#X text 209 213 |;
#X text 254 213 |;
#X text 300 213 |;
#X text 291 225 6000;
#X text 349 213 |;
#X text 338 225 8000;
#X text 391 213 |;
#X text 380 225 10000;
#X text 436 213 |;
#X text 425 225 12000;
#X text 482 213 |;
#X text 471 225 14000;
#X text 528 213 |;
#X text 517 225 16000;
#X text 574 213 |;
#X text 563 225 18000;
#X text 617 213 |;
#X text 606 225 20000;
#X text 664 213 |;
#X text 653 225 22000;
#X text 354 253 Frequency in Hz;
#X text 101 155 Magni-tude, f 6;
#X text 147 158 0.5-;
#X text 154 108 1;
#X text 154 205 0;
#X text 170 213 |;
#X obj 1227 250 tabwrite~ \$0-hann5;
#X connect 3 0 4 1;
#X connect 4 0 6 0;
#X connect 5 0 11 0;
#X connect 6 0 7 0;
#X connect 7 0 58 0;
#X connect 11 0 4 0;
#X connect 12 0 5 0;
#X connect 12 0 3 0;
#X connect 12 0 58 0;
#X connect 18 0 12 0;
#X connect 20 0 0 0;
#X connect 20 0 19 0;
#X connect 22 0 12 0;
#X coords 0 -1 1 1 590 175 2 100 100;
#X restore 279 310 pd spectrograph;
#N canvas 416 23 1024 542 box 0;
#N canvas 25 23 450 278 (subpatch) 0;
#X array \$0-fourier_spectrogram_demo_scope5 256 float 1 black black
;
#A 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;
#X coords 0 1 255 -1 500 100 1;
#X restore 181 135 graph;
#X text 396 246 Time;
#X text 108 172 Amplitude;
#X coords 0 -1 1 1 590 175 2 100 100;
#X restore 279 123 pd box;
#X obj 974 540 metro 250;
#X obj 974 567 tabwrite~ \$0-fourier_spectrogram_demo_scope5;
#X obj 919 385 receive~ sig4;
#X obj 122 137 bng 15 250 50 0 \$0-inharmonicspec empty Inharmonic_Spectrum
17 7 0 12 -204800 -1 -1;
#X obj 122 155 bng 15 250 50 0 \$0-noise empty Noise_(Attempt) 17 7
0 12 -204800 -1 -1;
#X obj 122 173 bng 15 250 50 0 \$0-idealnoise empty Idealized_Noise
17 7 0 12 -204800 -1 -1;
#X obj 919 409 *~;
#X obj 984 286 r \$0-gainslider;
#X msg 1107 352;
#X floatatom 1069 324 5 0 0 0 - - -, f 5;
#X msg 1057 246;
#X floatatom 1011 346 5 0 0 0 - - -, f 5;
#X obj 984 310 / 64;
#X obj 119 223 hsl 128 15 0 127 0 0 \$0-gainslider empty Amplitude
-2 -8 0 10 -204800 -1 -1 0 1;
#X connect 0 0 7 0;
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X connect 3 0 7 1;
#X connect 7 0 8 0;
#X connect 9 0 13 0;
#X connect 13 0 5 0;
#X connect 13 0 8 0;
#X connect 14 0 16 0;
#X connect 14 0 19 0;
#X connect 18 0 13 1;
#X connect 19 0 18 0;
#X coords 0 -1 1 1 800 400 2 100 100;
#X restore 519 41 pd demonstration.wave;
#X text 14 35 A Harmonic spectrum produces a timbre that we identify
as a musical note notes \, and the opposite \, an INHARMONIC SPECTUM
\, produces a timbre that we cannot tie to a note. This is the spectra
of non-pitched musical sounds \, such as percussion instruments \,
as well as sounds found in nature: the crunch of leaves underneath
your feet \, the crash of a wave against the shore \, the crack of
thunder. The most rigid of harmonic spectra we call notes \, but the
most inharmonic of spectra we call NOISE., f 69;
#X text 14 165 An inharmonic spectrum for the most part is the opposite
of a harmonic spectrum \, though it can vary a bit. The most defining
aspect of an inharmonic spectrum is that the frequency of the partials
not related by integer multiples. The frequencies often vary from partial
to partial – one partial could be 1.8x the lowest partial \, the
next could be 3.2x the lowest partial \, while mixed within the spectrum
could be a partial that is 6x the lowest partial \, but because none
of the other partials are related \, this partial is heard as unrelated.
An inharmonic spectrum’s lowest frequency partial doesn’t have
the highest amplitude \, and if it does \, we still likely don’t
hear a pitch because the other partials are unrelated to this frequency.
, f 69;
#X text 12 343 The most inharmonic of spectra is known as WHITE NOISE.
White noise is generated mathematically using probability. We define
white noise as a sound in which the frequencies of the partials of
the sound are completely random \, and so random that the probability
of ANY frequency (within the audible range) is 100%. Additionally \,
the amplitudes of every partial is constant \, so no single frequency
is heard dominant over the other., f 69;
#X text 16 474 The buttons on the right produce different types of
inharmonic spectra. The first button generates a different inharmonic
spectrum every time you click the button \, by generating 48 random
frequencies for 48 sine tone generators \, and 48 random amplitudes
for those 48 sine tones. You may find that at times you almost get
a sense of pitch \, because you get a strong high amplitude frequency
that rises out of the mass. Other times it is very discordant and noisy.
Additionally \, all the frequencies are whole numbers – if we also
opened the random values to non-whole numbers (which would take some
additional coding that I wasn’t able to finish!) we would lose even
more sense of pitch. The next button is an attempt to create white
noise with those same 48 sine tone generators. This white noise isn’t
ideal \, as \, like the inharmonic spectrum \, we are limited to a
100% random probability for whole numbers only. However the sound is
close to white noise. The last button is idealized white noise \, created
through a built in computer algorithm. This spectrum is perfectly random
\, and you will see in the spectroscope that the spectrum is a straight
line \, because ALL frequencies are represented at an equal amplitude.
, f 68;
#X text 14 15 5.5 INHARMONIC SPECTRUM, f 73;
#X restore 21 175 pd 05_INHARMONIC_SPECTRUM;
#X coords 0 755 1 754 1100 775 0;
