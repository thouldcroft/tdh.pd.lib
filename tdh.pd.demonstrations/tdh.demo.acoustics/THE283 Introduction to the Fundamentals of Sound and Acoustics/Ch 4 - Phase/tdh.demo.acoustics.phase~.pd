#N canvas 27 23 1413 855 12;
#X declare -lib ggee;
#X declare -lib dependencies;
#X obj 437 29 declare -lib ggee;
#N canvas 224 97 722 127 01_INTRODUCTION 0;
#X text 8 25 We have discussed amplitude and frequency for a sound
wave \, and the remaining component of a sound we left to discuss is
PHASE. Phase can be a tricky concept to discuss because \, for the
most part \, it is inaudible. It is only we COMBINE sounds does phase
become audible. Phase is also slightly confusing because it comes from
trigonometry. Fortunately we will keep the math to a minimum and focus
on how phase relates to sound., f 98;
#X text 8 5 1 INTRODUCTION, f 73;
#X restore 117 146 pd 01_INTRODUCTION;
#X obj 1279 348 osc~ 440;
#X obj 1279 392 *~;
#X floatatom 1297 228 5 0 0 0 - - -, f 5;
#X floatatom 1279 185 5 0 0 0 - - -, f 5;
#X text 1324 182 Freq;
#X text 1343 228 Amp;
#X obj 1454 160 osc~ 440;
#X obj 1454 194 *~;
#X floatatom 1472 92 5 0 0 0 - - -, f 5;
#X floatatom 1454 67 5 0 0 0 - - -, f 5;
#X text 1492 67 Freq;
#X text 1510 99 Amp;
#X obj 1438 517 +~;
#X floatatom 1332 280 5 0 1 0 - - -, f 5;
#X text 1545 123 Phase;
#X floatatom 1507 125 5 0 0 0 - - -, f 5;
#X text 1373 279 Phase (0.0-1.0);
#X obj 1361 313 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text 1581 8 Sound Wave Addition + Working with Phase;
#X floatatom 1045 162 5 0 0 1 Freq - #0-freq1-r, f 5;
#X text 1042 141 Sine Wave 1;
#X text 1399 312 <- When changing phase of osc2 \,;
#X text 1423 322 we need to immediately retrigger;
#X text 1422 335 the phase of osc1 so that we can;
#X text 1423 346 see the effect of phase on;
#X text 1423 358 signal addition. Without the;
#X text 1423 373 retriggering \, osc1 could be at;
#X text 1423 387 any phase in its cycle \, not;
#X text 1424 400 necessarily the one we specified;
#X text 606 724 Elements to experiment with:;
#X text 597 804 2 Set both waves to the same frequency;
#X text 615 817 and amplitude. Set the phase of Wave 2;
#X text 615 829 to 0.5 \, which is a 180 degrees phase;
#X text 596 744 1 With phase set to 0 (in-phase addition) \,;
#X text 614 759 set both waves to the same frequency.;
#X text 614 773 Set both waves to 0.5 amplitude.;
#X text 614 785 What do they sum to?;
#X text 615 841 shift (anti-phase addition). What is;
#X text 615 853 the resulting wave?;
#X text 1314 -10 For phase:;
#X text 1310 5 0.5 = 180 degree phase shift;
#X text 1316 18 1 = 360 degree phase shift;
#X obj 1307 257 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#N canvas 224 97 1035 583 BLANK_MODULE 0;
#X text 7 24 If you have ever plucked a guitar string or hit a drum
\, you likely noticed that the harder you hit or plucked resulted in
a louder sound. While if you plucked or hit the objects with less intensity
\, it might have sounded softer. When a string is plucked harder \,
this means when it vibrates it moves farther from its resting point
(the point where it sits when not vibrating). This causes the string
to push the air molecules around it farther \, creating a greater pressure
build up. In our sound wave graph we map the amount of pressure above
the atmospheric pressure caused by the vibrating object in the y axis
\, depicting the wave’s compression and rarefaction. This aspect
of the wave is known as the wave’s AMPLITUDE. When we talk about
amplitude \, we often graph it abstractly between +1 and -1 \, at which
these points are the MAXIMUM points that some system can have. This
system can be our computer \, a recording studio \, or our ear \, it
all depends on the context!, f 98;
#X text 7 154 When mapping the sound pressure level to a scale of +1
to -1 \, we call it LINEAR AMPLITUDE. It makes using computers to calculate
it very easy \, and it also makes a lot of sense when we manipulate
it (as we will see). For example \, we can set the sound wave to half
its amplitude by setting the amplitude to 0.5 (or dividing all of the
amplitude points by 2). When we discuss the amplitude of a wave at
a certain point \, we talk about the absolute value max peak of a cycle.
For example if a wave goes from +0.7 to -0.9 \, we are going to take
the absolute value of those points and report the peak \, so this example
wave would have an amplitude of 0.9., f 98;
#X text 7 244 To the right is a small controllable sound generator.
Press the “On” button to turn the generator on and adjust the wave’s
amplitude with the fader labelled “AMP” by clicking and dragging
on the middle line. You will see the wave displayed next to the fader.
As the amplitude increases from 0 \, the sound will get louder. At
1 the wave is as loud as your computer can handle \, so going above
this level will create a very distorted sound., f 98;
#X text 7 4 SOUND PRESSURE LEVEL AND AMPLITUDE, f 73;
#N canvas 142 47 1920 855 demonstration.wave 0;
#X coords 0 -1 1 1 400 275 2 100 100;
#X restore 614 8 pd demonstration.wave;
#N canvas 53 102 860 714 sound_gen_amp_demo 0;
#X coords 0 -1 1 1 400 250 2 100 100;
#X restore 615 299 pd sound_gen_amp_demo;
#X text 7 314 Talking about amplitude as a linear system is a problem
\, because our ear unfortunately doesn’t hear linearly \, our ears
perceive sound LOGARITHMICALLY. This introduction to acoustics attempts
to keep as much math out of the discussion as possible \, so I will
(try) to convey this concept as succinctly as possible (my apologies
to anyone with a solid background in mathematics). In the next module
we will briefly introduce the concept of the logarithmic scale \, and
then we will see how it applies to amplitude., f 98;
#X text 7 394 Close this window to move on to the next module., f
98;
#X restore 117 230 pd BLANK_MODULE;
#N canvas 234 24 765 702 02_WHAT_IS_PHASE 0;
#X text 36 408 Now something else occurs when a sound wave follows
this pattern. We create angles when we draw one line from the center
of the circle to the 3:00 position on the circle \, and another line
to the rotating point on the circle. When the point is at 12:00 \,
we get a 90deg angle. When the point is at 9:00 \, we get a 180deg
angle \, at 6:00 we get 270deg angle \, and once we complete the full
circle we get 360deg but we restart the calculation at 0deg., f 98
;
#X text 26 18 2 WHAT IS PHASE?, f 73;
#X text 26 38 Depicted below is the most simple sound \, the sine wave
\, which we have been using as our test tone. The sine wave can be
mathematically generated through the movement of a point revolving
counterclockwise around a circle. As shown in the diagram \, as the
point revolves around the circle \, the smooth movement of the sound
wave’s compression and rarefaction are made – when the point is
at the 12:00 point of the circle \, we are at the apex of the compression
\, and when the point is at the 6:00 point of the circle \, we are
at the lowest point of the rarefaction., f 98;
#X obj 371 254 ggee/image unit_circle_sinewave.gif;
#X text 36 498 We use these angles to associate points on the sine
wave. These angles are known as the sound wave’s PHASE. As a sine
wave (and any sound wave \, for that matter) oscillates \, the phase
changes. Just like we may state the frequency and amplitude of a sound
wave (or set them with a sound generator) \, we can also state or set
the phase of sound wave. The phase sets the point that a sound wave
STARTS. So if we say that the phase of the sine wave is 90 degrees
\, then the sine wiave will start at the top of its compression. While
if the sound wave's phase is 270 degrees \, the wave will start at
the bottom of its rarefaction., f 98;
#X text 36 618 For those more mathematically inclined \, we can also
discuss phase in terms of the UNIT CIRCLE which is the technical term
for the circle. You may find the 90deg point defined as PI/2 \, 180deg
defined as PI \, and 270deg defined as 3*PI/2., f 98;
#X restore 117 174 pd 02_WHAT_IS_PHASE;
#X obj 1307 694 dac~ 1 2;
#N canvas 124 106 1137 423 03_CHANGING_PHASE 0;
#N canvas 27 23 1413 855 demonstration.wave 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-phase_demo_mod3_scope 256 float 1;
#A 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;
#X coords 0 1 255 -1 200 140 1 0 0;
#X restore 278 127 graph;
#X obj 600 287 osc~ 440;
#X obj 599 363 *~;
#X floatatom 599 258 5 0 1 0 - - -, f 5;
#X obj 121 164 bng 15 250 50 0 \$0-phase_demo_mod3_180deg-r empty 180deg
17 7 0 10 -204800 -1 -1;
#X obj 120 110 tgl 15 0 \$0-phase_demo_mod3_onoff-r empty On/Off 17
7 0 10 -204800 -1 -1 0 1;
#X obj 948 198 r \$0-phase_demo_mod3_onoff-r;
#X obj 948 227 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 948 247 sel 0 1;
#X msg 1034 271 0 \, 0.7 250;
#X msg 948 271 0.7 \, 0 250;
#X obj 742 487 tabwrite~ \$0-phase_demo_mod3_scope;
#X obj 824 462 metro 10;
#X obj 823 438 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X obj 824 395 loadbang;
#X msg 824 416 1;
#X floatatom 869 438 5 0 0 0 - - -, f 5;
#X obj 948 300 line~;
#X obj 653 122 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 653 142 0.5;
#X obj 121 189 bng 15 250 50 0 \$0-phase_demo_mod3_90deg-r empty 90deg
17 7 0 10 -204800 -1 -1;
#X obj 653 98 r \$0-phase_demo_mod3_180deg-r;
#X obj 692 143 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 692 165 0.25;
#X obj 692 119 r \$0-phase_demo_mod3_90deg-r;
#X obj 731 167 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 731 187 0.75;
#X obj 121 214 bng 15 250 50 0 \$0-phase_demo_mod3_270deg-r empty 270deg
17 7 0 10 -204800 -1 -1;
#X obj 731 143 r \$0-phase_demo_mod3_270deg-r;
#X obj 121 139 bng 15 250 50 0 \$0-phase_demo_mod3_0deg-r empty 0deg
17 7 0 10 -204800 -1 -1;
#X obj 598 93 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X msg 598 113 0;
#X obj 598 69 r \$0-phase_demo_mod3_0deg-r;
#X obj 535 95 loadbang;
#X text 156 245 Phase 0-360;
#X obj 116 246 nbx 3 14 0 360 0 0 \$0-phase_demo_mod3_deg-r empty empty
0 -8 0 10 -204800 -1 -1 0 256;
#X obj 772 179 r \$0-phase_demo_mod3_deg-r;
#X obj 772 200 / 360;
#X obj 21 126 loadbang;
#X msg 21 147 0;
#X obj 599 488 throw~ \$0-dac;
#X connect 1 0 2 0;
#X connect 2 0 11 0;
#X connect 2 0 40 0;
#X connect 3 0 1 1;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 8 0 10 0;
#X connect 8 1 9 0;
#X connect 9 0 17 0;
#X connect 10 0 17 0;
#X connect 12 0 11 0;
#X connect 13 0 12 0;
#X connect 14 0 15 0;
#X connect 15 0 13 0;
#X connect 16 0 12 1;
#X connect 17 0 2 1;
#X connect 18 0 19 0;
#X connect 19 0 3 0;
#X connect 21 0 18 0;
#X connect 22 0 23 0;
#X connect 23 0 3 0;
#X connect 24 0 22 0;
#X connect 25 0 26 0;
#X connect 26 0 3 0;
#X connect 28 0 25 0;
#X connect 30 0 31 0;
#X connect 31 0 3 0;
#X connect 32 0 30 0;
#X connect 33 0 31 0;
#X connect 36 0 37 0;
#X connect 37 0 3 0;
#X connect 38 0 39 0;
#X connect 39 0 35 0;
#X connect 39 0 5 0;
#X coords 0 -1 1 1 400 200 2 100 100;
#X restore 711 63 pd demonstration.wave;
#X text 9 10 3 CHANGING A SOUND WAVE'S PHASE, f 73;
#X text 9 150 Click the “On” button to turn on the test tone generator.
Then click the button labelled “180deg”. This will invert the phase
of the test tone \, as described above. Do you hear a difference?,
f 98;
#X text 9 200 Changing the phase actually doesn’t affect how a sound
is heard. Why? Because changing the phase doesn’t change the frequency
of a sound – there are still the same number of cycles per second.
It also doesn’t change the overall amplitude of the sound \, as the
same displacement occurs \, the only difference is that what once was
a compression is now a rarefaction \, and vice versa., f 98;
#X text 9 270 We can also shift the phase to degrees other a perfect
180 Click the buttons for 90deg and 270deg. There still shouldn’t
be an audible difference (except maybe a click when you actually change
the phase). This is because what is happening is that we are simply
starting the playback of the tone at a different point in the phase.
At the most we are starting at compression of a single cycle. The change
in a single cycle is so small that this won’t be perceived by the
ear., f 98;
#X text 9 360 Finally \, you can choose any arbitrary phase shift with
the slider \, from 0 to 359 degrees. Do you notice any change with
any of these phases?, f 98;
#X text 9 30 Sometimes \, particularly when mixing or recording \,
you may need to change the phase of a soundwave. In this case \, we
start the sound wave at the defined phase point of its compression
or rarefaction., f 98;
#X text 9 90 The most typical process in mixing and recording that
involves phase is "flipping" the phase \, essentially reversing each
phase point by 180deg. So the apex of the compression (90 deg) becomes
the apex of the rarefaction (270deg). The use for this will become
clearer later., f 98;
#X restore 117 202 pd 03_CHANGING_PHASE;
#X obj 437 54 declare -lib dependencies;
#X obj 1438 581 throw~ \$0-dac;
#X obj 1307 655 catch~ \$0-dac;
#X obj 1334 399 loadbang;
#X msg 1334 423 1;
#X obj 1280 496 tabwrite~ \$0-osc2;
#X obj 1479 551 tabwrite~ \$0-signal_sum;
#X obj 1532 470 loadbang;
#X msg 1532 494 1;
#X obj 1558 154 loadbang;
#X msg 1558 176 1;
#X obj 1505 255 tabwrite~ \$0-osc1;
#X obj 1558 198 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1
1 1;
#X obj 1558 217 metro 100;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-osc1 256 float 1;
#A 0 0.0388622 0.0542576 0.0694401 0.0843495 0.0989269 0.113116 0.12686
0.140106 0.152802 0.164898 0.176347 0.187103 0.197124 0.206368 0.214801
0.222392 0.229108 0.234925 0.23982 0.243773 0.246768 0.248795 0.24984
0.249905 0.248988 0.247094 0.244229 0.240405 0.235637 0.229944 0.223347
0.215871 0.207547 0.198407 0.188488 0.17783 0.166472 0.154462 0.141844
0.128669 0.114988 0.100855 0.0863252 0.0714569 0.0563081 0.0409381
0.0254073 0.00977668 -0.00589253 -0.0215387 -0.0371 -0.0525154 -0.0677245
-0.0826675 -0.0972859 -0.111522 -0.125321 -0.138627 -0.15139 -0.163555
-0.175078 -0.185913 -0.196018 -0.205354 -0.213883 -0.221572 -0.228391
-0.234314 -0.239313 -0.243371 -0.246474 -0.248609 -0.249768 -0.249946
-0.249142 -0.24736 -0.244606 -0.24089 -0.236226 -0.230635 -0.224138
-0.21676 -0.208532 -0.199484 -0.189654 -0.179078 -0.167798 -0.155857
-0.143305 -0.130189 -0.116563 -0.102479 -0.0879923 -0.0731601 -0.0580404
-0.0426926 -0.0271765 -0.0115538 0.00411403 0.0197657 0.0353396 0.0507749
0.0660108 0.0809876 0.0956466 0.109929 0.123779 0.137142 0.149968 0.162204
0.173803 0.18472 0.194911 0.204338 0.212959 0.220743 0.22766 0.233684
0.238789 0.242957 0.246171 0.248418 0.249689 0.249978 0.249284 0.24761
0.244965 0.241357 0.236802 0.231316 0.224923 0.217646 0.209513 0.200555
0.19081 0.180315 0.169113 0.157246 0.144762 0.131709 0.118139 0.104105
0.0896599 0.0748632 0.0597727 0.0444476 0.028948 0.0133347 -0.00233108
-0.0179878 -0.0335741 -0.0490282 -0.0642894 -0.079298 -0.0939951 -0.108323
-0.122226 -0.135648 -0.148538 -0.160845 -0.172519 -0.183514 -0.193789
-0.203302 -0.212017 -0.219899 -0.226918 -0.233046 -0.238258 -0.242534
-0.245855 -0.24821 -0.249591 -0.249991 -0.24941 -0.247849 -0.245315
-0.241818 -0.23737 -0.231987 -0.225693 -0.218513 -0.210475 -0.20161
-0.191954 -0.181544 -0.17042 -0.158628 -0.14621 -0.133218 -0.119702
-0.105717 -0.091317 -0.0765581 -0.0614985 -0.0461973 -0.0307146 -0.0151108
0.000552317 0.0162131 0.0318101 0.0472821 0.0625684 0.0776091 0.0923452
0.106719 0.120673 0.134151 0.147103 0.159477 0.171225 0.1823 0.19266
0.202263 0.211072 0.219051 0.226167 0.232395 0.237711 0.242093 0.245524
0.247991 0.249484 0.249998 0.24953 0.248078 0.245652 0.242261 0.237919
0.232643 0.226453 0.219374 0.211434 0.202663 0.193093 0.182765 0.171719
0.159999 0.147651 0.134722 0.121265 0.107331 0.0929759 0.0782547 0.0632256
0.0479483 0.0324829 0.01689 0.00123079 -0.0144333 -0.0300409 -0.0455306
-0.0608414 -0.0759126 -0.0906855 -0.105102;
#X coords 0 1 256 -1 200 140 1;
#X restore 594 206 graph;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-osc2 256 float 1;
#A 0 -0.190346 -0.179819 -0.168586 -0.15669 -0.14418 -0.131102 -0.117508
-0.103453 -0.0889912 -0.0741803 -0.0590781 -0.0437439 -0.0282378 -0.0126208
0.00304608 0.0187009 0.0342821 0.0497286 0.0649796 0.0799755 0.0946573
0.108967 0.12285 0.13625 0.149114 0.161391 0.173034 0.183998 0.194239
0.203717 0.212396 0.22024 0.22722 0.233305 0.238473 0.242704 0.245982
0.248293 0.24963 0.249987 0.249362 0.247758 0.24518 0.241636 0.237143
0.231719 0.225385 0.218166 0.210091 0.20119 0.191499 0.181056 0.1699
0.158076 0.145631 0.132615 0.119078 0.105073 0.0906555 0.075882 0.0608102
0.0454989 0.0300089 0.0144012 -0.00126298 -0.0169221 -0.0325148 -0.0479799
-0.0632567 -0.0782853 -0.0930058 -0.10736 -0.121293 -0.134749 -0.147677
-0.160024 -0.171743 -0.182787 -0.193114 -0.202682 -0.211451 -0.21939
-0.226467 -0.232655 -0.23793 -0.24227 -0.245658 -0.248082 -0.249532
-0.249998 -0.249482 -0.247986 -0.245517 -0.242084 -0.2377 -0.232382
-0.226152 -0.219034 -0.211052 -0.202241 -0.192636 -0.182275 -0.171198
-0.159449 -0.147074 -0.134121 -0.120641 -0.106686 -0.0923112 -0.0775744
-0.062533 -0.0472462 -0.0317738 -0.0161766 -0.000515789 0.0151472 0.0307508
0.0462332 0.0615339 0.0765929 0.091351 0.10575 0.119735 0.133249 0.146239
0.158656 0.170447 0.181569 0.191977 0.201632 0.210495 0.218531 0.225709
0.232001 0.237382 0.241827 0.245322 0.247854 0.249412 0.249991 0.249589
0.248206 0.245849 0.242526 0.238248 0.233034 0.226904 0.219884 0.211999
0.203283 0.193768 0.183492 0.172496 0.16082 0.148512 0.135621 0.122198
0.108294 0.0939653 0.0792675 0.0642583 0.0489966 0.0335422 0.0179557
0.00229889 -0.0133668 -0.02898 -0.0444793 -0.059804 -0.074894 -0.08969
-0.104134 -0.118167 -0.131736 -0.144788 -0.157271 -0.169136 -0.180338
-0.190831 -0.200575 -0.209531 -0.217662 -0.224937 -0.231329 -0.236812
-0.241366 -0.244971 -0.247615 -0.249287 -0.249979 -0.249687 -0.248413
-0.246164 -0.242948 -0.238778 -0.233671 -0.227645 -0.220726 -0.21294
-0.204316 -0.194888 -0.184695 -0.173777 -0.162176 -0.149938 -0.137112
-0.123747 -0.109896 -0.0956128 -0.080953 -0.0659755 -0.0507391 -0.0353035
-0.0197292 -0.00407751 0.0115903 0.0272128 0.0427286 0.0580759 0.073195
0.0880265 0.102512 0.116595 0.130221 0.143335 0.155886 0.167825 0.179103
0.189677 0.199506 0.208552 0.216778 0.224154 0.230649 0.236238 0.2409
0.244614 0.247365 0.249145 0.249946 0.249766 0.248606 0.246469 0.243364
0.239303 0.234302 0.228378 0.221557 0.213866 0.205335 0.195998 0.185892
0.175055 0.163531 0.151364 0.138601;
#X coords 0 1 256 -1 200 140 1;
#X restore 598 381 graph;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-signal_sum 256 float 1;
#A 0 8.9407e-07 7.7486e-07 6.55651e-07 5.21541e-07 3.8743e-07 2.5332e-07
1.19209e-07 1.49012e-08 7.45058e-08 1.63913e-07 2.5332e-07 3.42727e-07
4.47035e-07 5.66244e-07 6.85453e-07 8.04663e-07 9.23872e-07 1.05798e-06
1.20699e-06 1.3411e-06 1.49012e-06 1.57952e-06 1.71363e-06 1.83284e-06
1.90735e-06 1.96695e-06 2.02656e-06 2.06381e-06 2.10106e-06 2.13087e-06
2.15136e-06 2.16439e-06 2.16754e-06 2.16253e-06 2.14577e-06 2.12714e-06
2.10106e-06 2.05636e-06 2.01166e-06 1.9595e-06 1.8999e-06 1.83284e-06
1.74344e-06 1.66893e-06 1.57952e-06 1.49012e-06 1.37091e-06 1.2666e-06
1.16229e-06 1.04308e-06 9.08971e-07 7.89762e-07 6.70552e-07 5.36442e-07
4.17233e-07 2.68221e-07 1.3411e-07 0 7.45058e-08 1.49012e-07 2.38419e-07
3.27826e-07 4.32134e-07 5.36442e-07 6.55651e-07 7.89762e-07 9.08971e-07
1.04308e-06 1.17719e-06 1.3262e-06 1.46031e-06 1.56462e-06 1.69873e-06
1.81794e-06 1.8999e-06 1.9595e-06 2.01166e-06 2.06381e-06 2.10106e-06
2.12714e-06 2.14949e-06 2.16253e-06 2.16765e-06 2.16346e-06 2.15322e-06
2.13087e-06 2.10479e-06 2.05636e-06 2.01911e-06 1.96695e-06 1.90735e-06
1.83284e-06 1.75834e-06 1.68383e-06 1.59442e-06 1.50502e-06 1.38581e-06
1.2815e-06 1.17719e-06 1.04308e-06 9.38773e-07 8.19564e-07 6.70552e-07
5.51343e-07 4.17233e-07 2.83122e-07 1.49012e-07 0 7.45058e-08 1.49012e-07
2.23517e-07 3.27826e-07 4.17233e-07 5.21541e-07 6.4075e-07 7.59959e-07
8.9407e-07 1.02818e-06 1.16229e-06 1.3113e-06 1.44541e-06 1.54972e-06
1.68383e-06 1.81794e-06 1.885e-06 1.95205e-06 2.01166e-06 2.05636e-06
2.10106e-06 2.12714e-06 2.14949e-06 2.16253e-06 2.16742e-06 2.16439e-06
2.15322e-06 2.13459e-06 2.10851e-06 2.06381e-06 2.01911e-06 1.9744e-06
1.90735e-06 1.84774e-06 1.77324e-06 1.68383e-06 1.59442e-06 1.51992e-06
1.40071e-06 1.2964e-06 1.17719e-06 1.05798e-06 9.38773e-07 8.19564e-07
7.00355e-07 5.66244e-07 4.32134e-07 2.98023e-07 1.49012e-07 2.98023e-08
5.96046e-08 1.3411e-07 2.08616e-07 3.12924e-07 4.17233e-07 5.06639e-07
6.25849e-07 7.45058e-07 8.79169e-07 1.01328e-06 1.14739e-06 1.2964e-06
1.43051e-06 1.53482e-06 1.66893e-06 1.80304e-06 1.885e-06 1.9446e-06
2.00421e-06 2.04891e-06 2.09361e-06 2.11969e-06 2.14204e-06 2.16067e-06
2.16765e-06 2.16439e-06 2.15508e-06 2.13832e-06 2.11596e-06 2.07126e-06
2.03401e-06 1.98185e-06 1.9148e-06 1.84774e-06 1.77324e-06 1.68383e-06
1.59442e-06 1.51992e-06 1.41561e-06 1.3113e-06 1.19209e-06 1.07288e-06
9.68575e-07 8.49366e-07 7.00355e-07 5.81145e-07 4.47035e-07 3.12924e-07
1.78814e-07 2.98023e-08 4.47035e-08 1.19209e-07 2.08616e-07 2.83122e-07
3.8743e-07 4.91738e-07 6.10948e-07 7.45058e-07 8.64267e-07 1.01328e-06
1.11759e-06 1.2666e-06 1.43051e-06 1.53482e-06 1.63913e-06 1.78814e-06
1.87755e-06 1.9446e-06 1.99676e-06 2.04146e-06 2.07871e-06 2.11596e-06
2.14204e-06 2.15694e-06 2.16719e-06 2.16626e-06 2.15694e-06 2.13832e-06
2.11596e-06 2.07871e-06 2.04146e-06 1.98185e-06 1.92225e-06 1.87755e-06
1.78814e-06 1.71363e-06 1.60933e-06 1.51992e-06 1.41561e-06 1.3262e-06
1.20699e-06 1.08778e-06 9.68575e-07 8.49366e-07 7.30157e-07 6.10948e-07
4.61936e-07 3.27826e-07;
#X coords 0 1 256 -1 200 140 1;
#X restore 607 563 graph;
#X obj 1334 450 metro 100;
#X obj 1532 520 metro 100;
#X floatatom 1045 192 5 0 0 1 Freq - #0-freq1-r, f 5;
#X connect 2 0 3 0;
#X connect 3 0 14 0;
#X connect 3 0 54 0;
#X connect 4 0 3 1;
#X connect 4 0 44 0;
#X connect 5 0 2 0;
#X connect 8 0 9 0;
#X connect 9 0 14 1;
#X connect 9 0 60 0;
#X connect 10 0 9 1;
#X connect 11 0 8 0;
#X connect 14 0 50 0;
#X connect 14 0 55 0;
#X connect 15 0 2 1;
#X connect 15 0 19 0;
#X connect 17 0 8 1;
#X connect 19 0 17 0;
#X connect 44 0 10 0;
#X connect 44 0 15 0;
#X connect 51 0 47 0;
#X connect 51 0 47 1;
#X connect 52 0 53 0;
#X connect 53 0 66 0;
#X connect 56 0 57 0;
#X connect 57 0 67 0;
#X connect 58 0 59 0;
#X connect 59 0 61 0;
#X connect 61 0 62 0;
#X connect 62 0 60 0;
#X connect 66 0 54 0;
#X connect 67 0 55 0;
