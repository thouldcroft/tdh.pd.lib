#N canvas 1440 23 1913 1035 10;
#X obj 759 232 tdh.util.scope~;
#X obj 759 17 receive~ sig4;
#X obj 762 157 bng 15 250 50 0 \$0-harmonicspec_a empty Harmonic_Spectrum_B_(Sawtooth_Wave)
17 7 0 10 -4032 -1 -1;
#X obj 1304 266 bng 15 250 50 0 empty \$0-harmonicspec_a empty 17 7
0 10 -262144 -1 -1;
#X obj 762 123 bng 15 250 50 0 \$0-sine empty Sine_Wave 17 7 0 10 -4032
-1 -1;
#X obj 1302 157 bng 15 250 50 0 empty \$0-harmonicspec_b empty 17 7
0 10 -262144 -1 -1;
#X obj 762 140 bng 15 250 50 0 \$0-harmonicspec_b empty Harmonic_Spectrum_A_(Triangle_Wave)
17 7 0 10 -4032 -1 -1;
#X obj 762 174 bng 15 250 50 0 \$0-harmonicspec_c empty Harmonic_Spectrum_C_(Rectangle_Wave)
17 7 0 10 -4032 -1 -1;
#X text -75 196 All frequency and amplitude controls in the user interface
remotely receive from the preset freq and amp values to the right using
the receive symbol "\$0-freq#a" and "\$0-amp#a". All freq and amp controls
also remotely send to the number boxes below \, which actually set
the oscillators to develop the various timbre. These use the remote
send symbol "\$0-freq#b" and "\$0-amp#b". All remote send and receive
symbols can be seen in each object's properties., f 24;
#X text 108 251 Individual Partials/Harmonics:;
#X text 759 104 Preset Timbres;
#X text 1300 50 Sine Wave preset (silences all partials other than
the first), f 62;
#X obj 762 191 bng 15 250 50 0 \$0-inharmonicspec empty Inharmonic_Spectrum_(different_every_time)
17 7 0 10 -4032 -1 -1;
#X obj 1304 291 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#N canvas 25 23 1415 855 freq.calc.sawtooth 0;
#X obj 54 111 until;
#X obj 115 133 + 1;
#X obj 54 133 float 1;
#X obj 189 386 f;
#X text 226 386 the iterator is stored here as an index to be used
by the [route] object, f 72;
#X text 142 133 iterator \, increase by 1 each time [until] sends a
"bang";
#X obj 117 351 trigger b f;
#X obj 135 427 pack f f;
#X text 196 425 combine the iterator/partial number with the calculated
partial amplitude value as a pair for [route];
#X msg 295 233 1;
#X obj 295 211 sel 48;
#X text 341 207 this mechanism resets the iterator to "1" when the
max iterations have occured, f 40;
#X obj 328 233 loadbang;
#X obj 54 160 trigger f f;
#X text 131 157 send the iterator first to the loop mechanism \, then
to the [sel] object to test if the loop is over (and reset the iterator
back to 1);
#X obj 117 268 t f f, f 15;
#X obj 24 468 route 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
43 44 45 46 47 48, f 227;
#X obj 54 88 t f f;
#X msg 54 67 48;
#X obj 138 19 inlet;
#X text 179 18 Fundamental Frequency;
#X obj 54 20 inlet;
#X obj 24 524 send \$0-freq1a;
#X obj 123 524 send \$0-freq2a;
#X obj 220 524 send \$0-freq3a;
#X obj 317 524 send \$0-freq4a;
#X obj 414 524 send \$0-freq5a;
#X obj 511 524 send \$0-freq6a;
#X obj 610 524 send \$0-freq7a;
#X obj 707 524 send \$0-freq8a;
#X obj 804 524 send \$0-freq9a;
#X obj 901 524 send \$0-freq10a;
#X obj 997 524 send \$0-freq11a;
#X obj 1095 524 send \$0-freq12a;
#X obj 1191 524 send \$0-freq13a;
#X obj 1288 524 send \$0-freq14a;
#X obj 1386 524 send \$0-freq15a;
#X obj 1484 523 send \$0-freq16a;
#X obj 24 551 send \$0-freq17a;
#X obj 123 551 send \$0-freq18a;
#X obj 220 551 send \$0-freq19a;
#X obj 317 551 send \$0-freq20a;
#X obj 414 551 send \$0-freq21a;
#X obj 511 551 send \$0-freq22a;
#X obj 611 551 send \$0-freq23a;
#X obj 708 551 send \$0-freq24a;
#X obj 805 551 send \$0-freq25a;
#X obj 902 551 send \$0-freq26a;
#X obj 998 551 send \$0-freq27a;
#X obj 1095 551 send \$0-freq28a;
#X obj 1191 551 send \$0-freq29a;
#X obj 1288 551 send \$0-freq30a;
#X obj 1386 551 send \$0-freq31a;
#X obj 1483 551 send \$0-freq32a;
#X obj 24 578 send \$0-freq33a;
#X obj 123 578 send \$0-freq34a;
#X obj 220 578 send \$0-freq35a;
#X obj 319 578 send \$0-freq36a;
#X obj 415 578 send \$0-freq37a;
#X obj 511 578 send \$0-freq38a;
#X obj 611 578 send \$0-freq39a;
#X obj 710 578 send \$0-freq40a;
#X obj 807 578 send \$0-freq41a;
#X obj 904 578 send \$0-freq42a;
#X obj 1001 578 send \$0-freq43a;
#X obj 1097 578 send \$0-freq44a;
#X obj 1194 578 send \$0-freq45a;
#X obj 1291 578 send \$0-freq46a;
#X obj 1388 578 send \$0-freq47a;
#X obj 1485 578 send \$0-freq48a;
#X obj 117 312 * 440;
#X connect 0 0 2 0;
#X connect 1 0 2 1;
#X connect 2 0 1 0;
#X connect 2 0 13 0;
#X connect 3 0 7 0;
#X connect 6 0 3 0;
#X connect 6 1 7 1;
#X connect 7 0 16 0;
#X connect 9 0 2 1;
#X connect 10 0 9 0;
#X connect 12 0 9 0;
#X connect 13 0 10 0;
#X connect 13 1 15 0;
#X connect 15 0 70 0;
#X connect 15 1 3 1;
#X connect 16 0 22 0;
#X connect 16 1 23 0;
#X connect 16 2 24 0;
#X connect 16 3 25 0;
#X connect 16 4 26 0;
#X connect 16 5 27 0;
#X connect 16 6 28 0;
#X connect 16 7 29 0;
#X connect 16 8 30 0;
#X connect 16 9 31 0;
#X connect 16 10 32 0;
#X connect 16 11 33 0;
#X connect 16 12 34 0;
#X connect 16 13 35 0;
#X connect 16 14 36 0;
#X connect 16 15 37 0;
#X connect 16 16 38 0;
#X connect 16 17 39 0;
#X connect 16 18 40 0;
#X connect 16 19 41 0;
#X connect 16 20 42 0;
#X connect 16 21 43 0;
#X connect 16 22 44 0;
#X connect 16 23 45 0;
#X connect 16 24 46 0;
#X connect 16 25 47 0;
#X connect 16 26 48 0;
#X connect 16 27 49 0;
#X connect 16 28 50 0;
#X connect 16 29 51 0;
#X connect 16 30 52 0;
#X connect 16 31 53 0;
#X connect 16 32 54 0;
#X connect 16 33 55 0;
#X connect 16 34 56 0;
#X connect 16 35 57 0;
#X connect 16 36 58 0;
#X connect 16 37 59 0;
#X connect 16 38 60 0;
#X connect 16 39 61 0;
#X connect 16 40 62 0;
#X connect 16 41 63 0;
#X connect 16 42 64 0;
#X connect 16 43 65 0;
#X connect 16 44 66 0;
#X connect 16 45 67 0;
#X connect 16 46 68 0;
#X connect 16 47 69 0;
#X connect 17 0 0 0;
#X connect 17 1 10 1;
#X connect 18 0 17 0;
#X connect 19 0 70 1;
#X connect 21 0 18 0;
#X connect 70 0 6 0;
#X restore 1304 316 pd freq.calc.sawtooth;
#X obj 1450 286 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#N canvas 274 104 1111 673 amp.calc.sawtooth 0;
#X obj 52 91 until;
#X obj 113 113 + 1;
#X obj 52 113 float 1;
#X obj 115 298 /;
#X obj 187 386 f;
#X text 145 298 divide 1/n \, where n is the interator (and the partial
number), f 61;
#X text 224 386 the iterator is stored here as an index to be used
by the [route] object, f 72;
#X text 140 113 iterator \, increase by 1 each time [until] sends a
"bang";
#X obj 115 351 trigger b f;
#X obj 133 427 pack f f;
#X text 194 425 combine the iterator/partial number with the calculated
partial amplitude value as a pair for [route];
#X msg 293 213 1;
#X obj 293 191 sel 48;
#X text 339 187 this mechanism resets the iterator to "1" when the
max iterations have occured, f 40;
#X obj 326 213 loadbang;
#X obj 52 140 trigger f f;
#X text 129 137 send the iterator first to the loop mechanism \, then
to the [sel] object to test if the loop is over (and reset the iterator
back to 1);
#X obj 115 271 swap 1;
#X floatatom 115 325 5 0 0 0 - - -, f 5;
#X obj 115 248 t f f, f 15;
#X obj 52 68 t f f;
#X msg 52 47 48;
#X obj 24 488 route 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
43 44 45 46 47 48, f 227;
#X obj 24 544 send \$0-amp1a;
#X obj 123 544 send \$0-amp2a;
#X obj 220 544 send \$0-amp3a;
#X obj 317 544 send \$0-amp4a;
#X obj 414 544 send \$0-amp5a;
#X obj 511 544 send \$0-amp6a;
#X obj 610 544 send \$0-amp7a;
#X obj 707 544 send \$0-amp8a;
#X obj 804 544 send \$0-amp9a;
#X obj 901 544 send \$0-amp10a;
#X obj 997 544 send \$0-amp11a;
#X obj 1095 544 send \$0-amp12a;
#X obj 1191 544 send \$0-amp13a;
#X obj 1288 544 send \$0-amp4a;
#X obj 1386 544 send \$0-amp15a;
#X obj 1484 543 send \$0-amp16a;
#X obj 24 571 send \$0-amp17a;
#X obj 123 571 send \$0-amp18a;
#X obj 220 571 send \$0-amp19a;
#X obj 317 571 send \$0-amp20a;
#X obj 414 571 send \$0-amp21a;
#X obj 511 571 send \$0-amp22a;
#X obj 611 571 send \$0-amp23a;
#X obj 708 571 send \$0-amp24a;
#X obj 805 571 send \$0-amp25a;
#X obj 902 571 send \$0-amp26a;
#X obj 998 571 send \$0-amp27a;
#X obj 1191 571 send \$0-amp29a;
#X obj 1288 571 send \$0-amp30a;
#X obj 1386 571 send \$0-amp31a;
#X obj 1483 571 send \$0-amp32a;
#X obj 24 598 send \$0-amp33a;
#X obj 123 598 send \$0-amp34a;
#X obj 220 598 send \$0-amp35a;
#X obj 319 598 send \$0-amp36a;
#X obj 415 598 send \$0-amp37a;
#X obj 511 598 send \$0-amp38a;
#X obj 611 598 send \$0-amp39a;
#X obj 709 598 send \$0-amp40a;
#X obj 807 598 send \$0-amp41a;
#X obj 904 598 send \$0-amp42a;
#X obj 1001 598 send \$0-amp43a;
#X obj 1291 598 send \$0-amp46a;
#X obj 1388 598 send \$0-amp47a;
#X obj 1485 598 send \$0-amp48a;
#X obj 52 20 inlet;
#X obj 1095 571 send \$0-amp28a;
#X obj 1097 598 send \$0-amp44a;
#X obj 1194 598 send \$0-amp45a;
#X connect 0 0 2 0;
#X connect 1 0 2 1;
#X connect 2 0 1 0;
#X connect 2 0 15 0;
#X connect 3 0 18 0;
#X connect 4 0 9 0;
#X connect 8 0 4 0;
#X connect 8 1 9 1;
#X connect 9 0 22 0;
#X connect 11 0 2 1;
#X connect 12 0 11 0;
#X connect 14 0 11 0;
#X connect 15 0 12 0;
#X connect 15 1 19 0;
#X connect 17 0 3 0;
#X connect 17 1 3 1;
#X connect 18 0 8 0;
#X connect 19 0 17 0;
#X connect 19 1 4 1;
#X connect 20 0 0 0;
#X connect 20 1 12 1;
#X connect 21 0 20 0;
#X connect 22 0 23 0;
#X connect 22 1 24 0;
#X connect 22 2 25 0;
#X connect 22 3 26 0;
#X connect 22 4 27 0;
#X connect 22 5 28 0;
#X connect 22 6 29 0;
#X connect 22 7 30 0;
#X connect 22 8 31 0;
#X connect 22 9 32 0;
#X connect 22 10 33 0;
#X connect 22 11 34 0;
#X connect 22 12 35 0;
#X connect 22 13 36 0;
#X connect 22 14 37 0;
#X connect 22 15 38 0;
#X connect 22 16 39 0;
#X connect 22 17 40 0;
#X connect 22 18 41 0;
#X connect 22 19 42 0;
#X connect 22 20 43 0;
#X connect 22 21 44 0;
#X connect 22 22 45 0;
#X connect 22 23 46 0;
#X connect 22 24 47 0;
#X connect 22 25 48 0;
#X connect 22 26 49 0;
#X connect 22 27 69 0;
#X connect 22 28 50 0;
#X connect 22 29 51 0;
#X connect 22 30 52 0;
#X connect 22 31 53 0;
#X connect 22 32 54 0;
#X connect 22 33 55 0;
#X connect 22 34 56 0;
#X connect 22 35 57 0;
#X connect 22 36 58 0;
#X connect 22 37 59 0;
#X connect 22 38 60 0;
#X connect 22 39 61 0;
#X connect 22 40 62 0;
#X connect 22 41 63 0;
#X connect 22 42 64 0;
#X connect 22 43 70 0;
#X connect 22 44 71 0;
#X connect 22 45 65 0;
#X connect 22 46 66 0;
#X connect 22 47 67 0;
#X connect 68 0 21 0;
#X restore 1450 311 pd amp.calc.sawtooth;
#X obj 1302 182 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 1462 177 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#N canvas 25 23 1415 855 freq.calc.triangle 0;
#X obj 54 111 until;
#X obj 115 133 + 1;
#X obj 54 133 float 1;
#X obj 189 386 f;
#X text 226 386 the iterator is stored here as an index to be used
by the [route] object, f 72;
#X text 142 133 iterator \, increase by 1 each time [until] sends a
"bang";
#X obj 117 351 trigger b f;
#X obj 135 427 pack f f;
#X text 196 425 combine the iterator/partial number with the calculated
partial amplitude value as a pair for [route];
#X msg 295 233 1;
#X obj 295 211 sel 48;
#X text 341 207 this mechanism resets the iterator to "1" when the
max iterations have occured, f 40;
#X obj 328 233 loadbang;
#X obj 54 160 trigger f f;
#X text 131 157 send the iterator first to the loop mechanism \, then
to the [sel] object to test if the loop is over (and reset the iterator
back to 1);
#X obj 117 268 t f f, f 15;
#X obj 24 468 route 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
43 44 45 46 47 48, f 227;
#X obj 54 88 t f f;
#X msg 54 67 48;
#X obj 143 19 inlet;
#X text 184 18 Fundamental Frequency;
#X obj 54 20 inlet;
#X obj 24 524 send \$0-freq1a;
#X obj 220 524 send \$0-freq3a;
#X obj 414 524 send \$0-freq5a;
#X obj 610 524 send \$0-freq7a;
#X obj 804 524 send \$0-freq9a;
#X obj 997 524 send \$0-freq11a;
#X obj 1191 524 send \$0-freq13a;
#X obj 1386 524 send \$0-freq15a;
#X obj 24 551 send \$0-freq17a;
#X obj 220 551 send \$0-freq19a;
#X obj 414 551 send \$0-freq21a;
#X obj 611 551 send \$0-freq23a;
#X obj 805 551 send \$0-freq25a;
#X obj 998 551 send \$0-freq27a;
#X obj 1191 551 send \$0-freq29a;
#X obj 1386 551 send \$0-freq31a;
#X obj 24 578 send \$0-freq33a;
#X obj 220 578 send \$0-freq35a;
#X obj 415 578 send \$0-freq37a;
#X obj 611 578 send \$0-freq39a;
#X obj 807 578 send \$0-freq41a;
#X obj 1001 578 send \$0-freq43a;
#X obj 1194 578 send \$0-freq45a;
#X obj 1388 578 send \$0-freq47a;
#X obj 117 312 * 440;
#X connect 0 0 2 0;
#X connect 1 0 2 1;
#X connect 2 0 1 0;
#X connect 2 0 13 0;
#X connect 3 0 7 0;
#X connect 6 0 3 0;
#X connect 6 1 7 1;
#X connect 7 0 16 0;
#X connect 9 0 2 1;
#X connect 10 0 9 0;
#X connect 12 0 9 0;
#X connect 13 0 10 0;
#X connect 13 1 15 0;
#X connect 15 0 46 0;
#X connect 15 1 3 1;
#X connect 16 0 22 0;
#X connect 16 2 23 0;
#X connect 16 4 24 0;
#X connect 16 6 25 0;
#X connect 16 8 26 0;
#X connect 16 10 27 0;
#X connect 16 12 28 0;
#X connect 16 14 29 0;
#X connect 16 16 30 0;
#X connect 16 18 31 0;
#X connect 16 20 32 0;
#X connect 16 22 33 0;
#X connect 16 24 34 0;
#X connect 16 26 35 0;
#X connect 16 28 36 0;
#X connect 16 30 37 0;
#X connect 16 32 38 0;
#X connect 16 34 39 0;
#X connect 16 36 40 0;
#X connect 16 38 41 0;
#X connect 16 40 42 0;
#X connect 16 42 43 0;
#X connect 16 44 44 0;
#X connect 16 46 45 0;
#X connect 17 0 0 0;
#X connect 17 1 10 1;
#X connect 18 0 17 0;
#X connect 19 0 46 1;
#X connect 21 0 18 0;
#X connect 46 0 6 0;
#X restore 1302 207 pd freq.calc.triangle;
#N canvas 26 23 1414 855 amp.calc.triangle 0;
#X obj 52 91 until;
#X obj 113 113 + 1;
#X obj 52 113 float 1;
#X obj 115 298 /;
#X obj 187 386 f;
#X text 224 386 the iterator is stored here as an index to be used
by the [route] object, f 72;
#X text 140 113 iterator \, increase by 1 each time [until] sends a
"bang";
#X obj 115 351 trigger b f;
#X obj 133 427 pack f f;
#X text 194 425 combine the iterator/partial number with the calculated
partial amplitude value as a pair for [route];
#X msg 293 213 1;
#X obj 293 191 sel 48;
#X text 339 187 this mechanism resets the iterator to "1" when the
max iterations have occured, f 40;
#X obj 326 213 loadbang;
#X obj 52 140 trigger f f;
#X text 129 137 send the iterator first to the loop mechanism \, then
to the [sel] object to test if the loop is over (and reset the iterator
back to 1);
#X obj 115 271 swap 1;
#X floatatom 115 325 5 0 0 0 - - -, f 5;
#X obj 52 68 t f f;
#X msg 52 47 48;
#X obj 24 538 route 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
43 44 45 46 47 48, f 227;
#X obj 24 674 send \$0-amp1a;
#X obj 123 674 send \$0-amp2a;
#X obj 220 674 send \$0-amp3a;
#X obj 317 674 send \$0-amp4a;
#X obj 414 674 send \$0-amp5a;
#X obj 511 674 send \$0-amp6a;
#X obj 610 674 send \$0-amp7a;
#X obj 707 674 send \$0-amp8a;
#X obj 804 674 send \$0-amp9a;
#X obj 901 674 send \$0-amp10a;
#X obj 997 674 send \$0-amp11a;
#X obj 1095 674 send \$0-amp12a;
#X obj 1191 674 send \$0-amp13a;
#X obj 1386 674 send \$0-amp15a;
#X obj 1484 673 send \$0-amp16a;
#X obj 24 781 send \$0-amp17a;
#X obj 123 781 send \$0-amp18a;
#X obj 220 781 send \$0-amp19a;
#X obj 317 781 send \$0-amp20a;
#X obj 414 781 send \$0-amp21a;
#X obj 511 781 send \$0-amp22a;
#X obj 611 781 send \$0-amp23a;
#X obj 708 781 send \$0-amp24a;
#X obj 805 781 send \$0-amp25a;
#X obj 902 781 send \$0-amp26a;
#X obj 998 781 send \$0-amp27a;
#X obj 1191 781 send \$0-amp29a;
#X obj 1288 781 send \$0-amp30a;
#X obj 1386 781 send \$0-amp31a;
#X obj 1483 781 send \$0-amp32a;
#X obj 24 908 send \$0-amp33a;
#X obj 123 908 send \$0-amp34a;
#X obj 220 908 send \$0-amp35a;
#X obj 319 908 send \$0-amp36a;
#X obj 415 908 send \$0-amp37a;
#X obj 511 908 send \$0-amp38a;
#X obj 611 908 send \$0-amp39a;
#X obj 709 908 send \$0-amp40a;
#X obj 807 908 send \$0-amp41a;
#X obj 904 908 send \$0-amp42a;
#X obj 1001 908 send \$0-amp43a;
#X obj 1291 908 send \$0-amp46a;
#X obj 1388 908 send \$0-amp47a;
#X obj 1485 908 send \$0-amp48a;
#X obj 52 20 inlet;
#X obj 1095 781 send \$0-amp28a;
#X obj 1097 908 send \$0-amp44a;
#X obj 1194 908 send \$0-amp45a;
#X obj 115 246 *;
#X obj 115 188 t f f f, f 15;
#X text 145 298 divide 1/n^2 \, where n is the interator (and the partial
number), f 61;
#X text 141 244 n^2;
#X obj 133 449 t l b;
#X msg 160 474 0;
#X obj 1288 674 send \$0-amp14a;
#X text 195 473 All even partials need to be zeroed;
#X connect 0 0 2 0;
#X connect 1 0 2 1;
#X connect 2 0 1 0;
#X connect 2 0 14 0;
#X connect 3 0 17 0;
#X connect 4 0 8 0;
#X connect 7 0 4 0;
#X connect 7 1 8 1;
#X connect 8 0 73 0;
#X connect 10 0 2 1;
#X connect 11 0 10 0;
#X connect 13 0 10 0;
#X connect 14 0 11 0;
#X connect 14 1 70 0;
#X connect 16 0 3 0;
#X connect 16 1 3 1;
#X connect 17 0 7 0;
#X connect 18 0 0 0;
#X connect 18 1 11 1;
#X connect 19 0 18 0;
#X connect 20 0 21 0;
#X connect 20 2 23 0;
#X connect 20 4 25 0;
#X connect 20 6 27 0;
#X connect 20 8 29 0;
#X connect 20 10 31 0;
#X connect 20 12 33 0;
#X connect 20 14 34 0;
#X connect 20 16 36 0;
#X connect 20 18 38 0;
#X connect 20 20 40 0;
#X connect 20 22 42 0;
#X connect 20 24 44 0;
#X connect 20 26 46 0;
#X connect 20 28 47 0;
#X connect 20 30 49 0;
#X connect 20 32 51 0;
#X connect 20 34 53 0;
#X connect 20 36 55 0;
#X connect 20 38 57 0;
#X connect 20 40 59 0;
#X connect 20 42 61 0;
#X connect 20 44 68 0;
#X connect 20 46 63 0;
#X connect 65 0 19 0;
#X connect 69 0 16 0;
#X connect 70 0 69 0;
#X connect 70 1 69 1;
#X connect 70 2 4 1;
#X connect 73 0 20 0;
#X connect 73 1 74 0;
#X connect 74 0 22 0;
#X connect 74 0 37 0;
#X connect 74 0 52 0;
#X connect 74 0 24 0;
#X connect 74 0 39 0;
#X connect 74 0 54 0;
#X connect 74 0 26 0;
#X connect 74 0 41 0;
#X connect 74 0 56 0;
#X connect 74 0 28 0;
#X connect 74 0 43 0;
#X connect 74 0 58 0;
#X connect 74 0 30 0;
#X connect 74 0 45 0;
#X connect 74 0 60 0;
#X connect 74 0 32 0;
#X connect 74 0 66 0;
#X connect 74 0 67 0;
#X connect 74 0 75 0;
#X connect 74 0 48 0;
#X connect 74 0 62 0;
#X connect 74 0 35 0;
#X connect 74 0 50 0;
#X connect 74 0 64 0;
#X restore 1462 202 pd amp.calc.triangle;
#X obj 1304 73 bng 15 250 50 0 empty \$0-sine empty 17 7 0 10 -262144
-1 -1;
#X floatatom 108 319 5 0 0 0 - #0-amp1a #0-amp1b, f 5;
#X floatatom 108 296 5 0 0 0 - #0-freq1a #0-freq1b, f 5;
#X text 143 293 f;
#X text 144 319 a;
#X floatatom 162 319 5 0 0 0 - #0-amp2a #0-amp2b, f 5;
#X floatatom 162 296 5 0 0 0 - #0-freq2a #0-freq2b, f 5;
#X text 197 293 f;
#X text 198 319 a;
#X floatatom 216 319 5 0 0 0 - #0-amp3a #0-amp3b, f 5;
#X floatatom 216 296 5 0 0 0 - #0-freq3a #0-freq3b, f 5;
#X text 251 293 f;
#X text 252 319 a;
#X floatatom 269 319 5 0 0 0 - #0-amp4a #0-amp4b, f 5;
#X floatatom 269 296 5 0 0 0 - #0-freq4a #0-freq4b, f 5;
#X text 304 293 f;
#X text 305 319 a;
#X floatatom 323 319 5 0 0 0 - #0-amp5a #0-amp5b, f 5;
#X floatatom 323 296 5 0 0 0 - #0-freq5a #0-freq5b, f 5;
#X text 358 293 f;
#X text 359 319 a;
#X floatatom 377 319 5 0 0 0 - #0-amp6a #0-amp6b, f 5;
#X floatatom 377 296 5 0 0 0 - #0-freq6a #0-freq6b, f 5;
#X text 412 293 f;
#X text 413 319 a;
#X floatatom 429 318 5 0 0 0 - #0-amp7a #0-amp7b, f 5;
#X floatatom 429 295 5 0 0 0 - #0-freq7a #0-freq7b, f 5;
#X text 464 292 f;
#X text 465 318 a;
#X floatatom 483 318 5 0 0 0 - #0-amp8a #0-amp8b, f 5;
#X floatatom 483 295 5 0 0 0 - #0-freq8a #0-freq8b, f 5;
#X text 518 292 f;
#X text 519 318 a;
#X floatatom 537 318 5 0 0 0 - #0-amp9a #0-amp9b, f 5;
#X floatatom 537 295 5 0 0 0 - #0-freq9a #0-freq9b, f 5;
#X text 572 292 f;
#X text 573 318 a;
#X floatatom 590 318 5 0 0 0 - #0-amp10a #0-amp10b, f 5;
#X floatatom 590 295 5 0 0 0 - #0-freq10a #0-freq10b, f 5;
#X text 625 292 f;
#X text 626 318 a;
#X floatatom 644 318 5 0 0 0 - #0-amp11a #0-amp11b, f 5;
#X floatatom 644 295 5 0 0 0 - #0-freq11a #0-freq11b, f 5;
#X text 679 292 f;
#X text 680 318 a;
#X floatatom 698 318 5 0 0 0 - #0-amp12a #0-amp12b, f 5;
#X floatatom 698 295 5 0 0 0 - #0-freq12a #0-freq12b, f 5;
#X text 734 292 f;
#X text 735 318 a;
#X text 111 278 1;
#X text 166 278 2;
#X text 219 278 3;
#X text 272 278 4;
#X text 327 278 5;
#X text 380 278 6;
#X text 431 278 7;
#X text 485 278 8;
#X text 549 278 9;
#X text 602 278 10;
#X text 656 278 11;
#X text 711 278 12;
#X floatatom 107 387 5 0 0 0 - #0-amp13a #0-amp13b, f 5;
#X floatatom 108 364 5 0 0 0 - #0-freq13a #0-freq13b, f 5;
#X text 143 361 f;
#X text 143 387 a;
#X floatatom 162 387 5 0 0 0 - #0-amp14a #0-amp14b, f 5;
#X floatatom 163 364 5 0 0 0 - #0-freq14a #0-freq14b, f 5;
#X text 198 361 f;
#X text 198 387 a;
#X floatatom 216 387 5 0 0 0 - #0-amp15a #0-amp15b, f 5;
#X floatatom 217 364 5 0 0 0 - #0-freq15a #0-freq15b, f 5;
#X text 252 361 f;
#X text 252 387 a;
#X floatatom 269 387 5 0 0 0 - #0-amp16a #0-amp16b, f 5;
#X floatatom 270 364 5 0 0 0 - #0-freq16a #0-freq16b, f 5;
#X text 305 361 f;
#X text 305 387 a;
#X floatatom 323 387 5 0 0 0 - #0-amp17a #0-amp17b, f 5;
#X floatatom 324 364 5 0 0 0 - #0-freq17a #0-freq17b, f 5;
#X text 359 361 f;
#X text 359 387 a;
#X floatatom 377 387 5 0 0 0 - #0-amp18a #0-amp18b, f 5;
#X floatatom 378 364 5 0 0 0 - #0-freq18a #0-freq18b, f 5;
#X text 413 361 f;
#X text 413 387 a;
#X floatatom 428 387 5 0 0 0 - #0-amp19a #0-amp19b, f 5;
#X floatatom 429 364 5 0 0 0 - #0-freq19a #0-freq19b, f 5;
#X text 464 361 f;
#X text 464 387 a;
#X floatatom 482 387 5 0 0 0 - #0-amp20a #0-amp20b, f 5;
#X floatatom 483 364 5 0 0 0 - #0-freq20a #0-freq20b, f 5;
#X text 518 361 f;
#X text 518 387 a;
#X floatatom 536 387 5 0 0 0 - #0-amp21a #0-amp21b, f 5;
#X floatatom 537 364 5 0 0 0 - #0-freq21a #0-freq21b, f 5;
#X text 572 361 f;
#X text 572 387 a;
#X floatatom 589 387 5 0 0 0 - #0-amp22a #0-amp22b, f 5;
#X floatatom 590 364 5 0 0 0 - #0-freq22a #0-freq22b, f 5;
#X text 625 361 f;
#X text 625 387 a;
#X floatatom 643 387 5 0 0 0 - #0-amp23a #0-amp23b, f 5;
#X floatatom 644 364 5 0 0 0 - #0-freq23a #0-freq23b, f 5;
#X text 679 361 f;
#X text 679 387 a;
#X floatatom 697 387 5 0 0 0 - #0-amp24a #0-amp24b, f 5;
#X floatatom 698 364 5 0 0 0 - #0-freq24a #0-freq24b, f 5;
#X text 733 361 f;
#X text 733 387 a;
#X text 111 346 13;
#X text 166 346 14;
#X text 220 346 15;
#X text 273 346 16;
#X text 328 346 17;
#X text 381 346 18;
#X text 431 346 19;
#X text 485 346 20;
#X text 549 346 21;
#X text 602 346 22;
#X text 656 346 23;
#X text 710 346 24;
#X floatatom 107 456 5 0 0 0 - #0-amp25a #0-amp25b, f 5;
#X floatatom 107 433 5 0 0 0 - #0-freq25a #0-freq25b, f 5;
#X text 142 430 f;
#X text 143 456 a;
#X floatatom 162 456 5 0 0 0 - #0-amp26a #0-amp26b, f 5;
#X floatatom 162 433 5 0 0 0 - #0-freq26a #0-freq26b, f 5;
#X text 197 430 f;
#X text 198 456 a;
#X floatatom 216 456 5 0 0 0 - #0-amp27a #0-amp27b, f 5;
#X floatatom 216 433 5 0 0 0 - #0-freq27a #0-freq27b, f 5;
#X text 251 430 f;
#X text 252 456 a;
#X floatatom 269 456 5 0 0 0 - #0-amp28a #0-amp28b, f 5;
#X floatatom 269 433 5 0 0 0 - #0-freq28a #0-freq28b, f 5;
#X text 304 430 f;
#X text 305 456 a;
#X floatatom 323 456 5 0 0 0 - #0-amp29a #0-amp29b, f 5;
#X floatatom 323 433 5 0 0 0 - #0-freq29a #0-freq29b, f 5;
#X text 358 430 f;
#X text 359 456 a;
#X floatatom 377 456 5 0 0 0 - #0-amp30a #0-amp30b, f 5;
#X floatatom 377 433 5 0 0 0 - #0-freq30a #0-freq30b, f 5;
#X text 412 430 f;
#X text 413 456 a;
#X floatatom 429 455 5 0 0 0 - #0-amp31a #0-amp31b, f 5;
#X floatatom 429 432 5 0 0 0 - #0-freq31a #0-freq31b, f 5;
#X text 464 429 f;
#X text 465 455 a;
#X floatatom 483 455 5 0 0 0 - #0-amp32a #0-amp32b, f 5;
#X floatatom 483 432 5 0 0 0 - #0-freq32a #0-freq32b, f 5;
#X text 518 429 f;
#X text 519 455 a;
#X floatatom 537 455 5 0 0 0 - #0-amp33a #0-amp33b, f 5;
#X floatatom 537 432 5 0 0 0 - #0-freq33a #0-freq33b, f 5;
#X text 572 429 f;
#X text 573 455 a;
#X floatatom 590 455 5 0 0 0 - #0-amp34a #0-amp34b, f 5;
#X floatatom 590 432 5 0 0 0 - #0-freq34a #0-freq34b, f 5;
#X text 625 429 f;
#X text 626 455 a;
#X floatatom 644 455 5 0 0 0 - #0-amp35a #0-amp35b, f 5;
#X floatatom 644 432 5 0 0 0 - #0-freq35a #0-freq35b, f 5;
#X text 679 429 f;
#X text 680 455 a;
#X floatatom 698 455 5 0 0 0 - #0-amp36a #0-amp36b, f 5;
#X floatatom 698 432 5 0 0 0 - #0-freq36a #0-freq36b, f 5;
#X text 733 429 f;
#X text 734 455 a;
#X floatatom 107 524 5 0 0 0 - #0-amp37a #0-amp37b, f 5;
#X floatatom 107 501 5 0 0 0 - #0-freq37a #0-freq37b, f 5;
#X text 142 498 f;
#X text 143 524 a;
#X floatatom 162 524 5 0 0 0 - #0-amp38a #0-amp38b, f 5;
#X floatatom 162 501 5 0 0 0 - #0-freq38a #0-freq38b, f 5;
#X text 197 498 f;
#X text 198 524 a;
#X floatatom 216 524 5 0 0 0 - #0-amp39a #0-amp39b, f 5;
#X floatatom 216 501 5 0 0 0 - #0-freq39a #0-freq39b, f 5;
#X text 251 498 f;
#X text 252 524 a;
#X floatatom 269 524 5 0 0 0 - #0-amp40a #0-amp40b, f 5;
#X floatatom 269 501 5 0 0 0 - #0-freq40a #0-freq40b, f 5;
#X text 304 498 f;
#X text 305 524 a;
#X floatatom 323 524 5 0 0 0 - #0-amp41a #0-amp41b, f 5;
#X floatatom 323 501 5 0 0 0 - #0-freq41a #0-freq41b, f 5;
#X text 358 498 f;
#X text 359 524 a;
#X floatatom 377 524 5 0 0 0 - #0-amp42a #0-amp42b, f 5;
#X floatatom 377 501 5 0 0 0 - #0-freq42a #0-freq42b, f 5;
#X text 412 498 f;
#X text 413 524 a;
#X floatatom 428 524 5 0 0 0 - #0-amp43a #0-amp43b, f 5;
#X floatatom 428 501 5 0 0 0 - #0-freq43a #0-freq43b, f 5;
#X text 463 498 f;
#X text 464 524 a;
#X floatatom 482 524 5 0 0 0 - #0-amp44a #0-amp44b, f 5;
#X floatatom 482 501 5 0 0 0 - #0-freq44a #0-freq44b, f 5;
#X text 517 498 f;
#X text 518 524 a;
#X floatatom 536 524 5 0 0 0 - #0-amp45a #0-amp45b, f 5;
#X floatatom 536 501 5 0 0 0 - #0-freq45a #0-freq45b, f 5;
#X text 571 498 f;
#X text 572 524 a;
#X floatatom 589 524 5 0 0 0 - #0-amp46a #0-amp46b, f 5;
#X floatatom 589 501 5 0 0 0 - #0-freq46a #0-freq46b, f 5;
#X text 624 498 f;
#X text 625 524 a;
#X floatatom 643 524 5 0 0 0 - #0-amp47a #0-amp47b, f 5;
#X floatatom 643 501 5 0 0 0 - #0-freq47a #0-freq47b, f 5;
#X text 678 498 f;
#X text 679 524 a;
#X floatatom 697 524 5 0 0 0 - #0-amp48a #0-amp48b, f 5;
#X floatatom 697 501 5 0 0 0 - #0-freq48a #0-freq48b, f 5;
#X text 732 498 f;
#X text 733 524 a;
#X text 110 415 25;
#X text 165 415 26;
#X text 219 415 27;
#X text 272 415 28;
#X text 327 415 29;
#X text 380 415 30;
#X text 431 414 31;
#X text 485 414 32;
#X text 549 414 33;
#X text 602 414 34;
#X text 656 414 35;
#X text 710 414 36;
#X text 110 483 37;
#X text 165 483 38;
#X text 219 483 39;
#X text 272 483 40;
#X text 327 483 41;
#X text 380 483 42;
#X text 430 483 43;
#X text 484 483 44;
#X text 548 483 45;
#X text 601 483 46;
#X text 655 483 47;
#X text 709 483 48;
#X obj 31 765 osc~ 440;
#X floatatom 46 735 5 0 0 0 - #0-amp1b -, f 5;
#X floatatom 31 712 5 0 0 0 - #0-freq1b -, f 5;
#X text 66 709 f;
#X text 82 735 a;
#X obj 156 1281 send~ sig4;
#X obj 31 789 *~;
#X obj 101 765 osc~ 440;
#X floatatom 116 735 5 0 0 0 - #0-amp2b -, f 5;
#X floatatom 101 712 5 0 0 0 - #0-freq2b -, f 5;
#X text 136 709 f;
#X text 152 735 a;
#X obj 101 789 *~;
#X obj 171 765 osc~ 440;
#X floatatom 186 735 5 0 0 0 - #0-amp3b -, f 5;
#X floatatom 171 712 5 0 0 0 - #0-freq3b -, f 5;
#X text 206 709 f;
#X text 222 735 a;
#X obj 172 789 *~;
#X floatatom 256 735 5 0 0 0 - #0-amp4b -, f 5;
#X floatatom 241 712 5 0 0 0 - #0-freq4b -, f 5;
#X text 276 709 f;
#X text 292 735 a;
#X obj 241 789 *~;
#X obj 242 767 osc~ 440;
#X floatatom 326 735 5 0 0 0 - #0-amp5b -, f 5;
#X floatatom 311 712 5 0 0 0 - #0-freq5b -, f 5;
#X text 346 709 f;
#X text 362 735 a;
#X obj 311 789 *~;
#X obj 312 767 osc~ 440;
#X floatatom 396 735 5 0 0 0 - #0-amp6b -, f 5;
#X floatatom 381 712 5 0 0 0 - #0-freq6b -, f 5;
#X text 416 709 f;
#X text 432 735 a;
#X obj 381 789 *~;
#X obj 382 767 osc~ 440;
#X obj 452 765 osc~ 440;
#X floatatom 467 735 5 0 0 0 - #0-amp7b -, f 5;
#X floatatom 452 712 5 0 0 0 - #0-freq7b -, f 5;
#X text 487 709 f;
#X text 503 735 a;
#X obj 452 789 *~;
#X obj 522 765 osc~ 440;
#X floatatom 537 735 5 0 0 0 - #0-amp8b -, f 5;
#X floatatom 522 712 5 0 0 0 - #0-freq8b -, f 5;
#X text 557 709 f;
#X text 573 735 a;
#X obj 522 789 *~;
#X obj 592 765 osc~ 440;
#X floatatom 607 735 5 0 0 0 - #0-amp9b -, f 5;
#X floatatom 592 712 5 0 0 0 - #0-freq9b -, f 5;
#X text 627 709 f;
#X text 643 735 a;
#X obj 593 789 *~;
#X floatatom 677 735 5 0 0 0 - #0-amp10b -, f 5;
#X floatatom 662 712 5 0 0 0 - #0-freq10b -, f 5;
#X text 697 709 f;
#X text 713 735 a;
#X obj 662 789 *~;
#X obj 663 767 osc~ 440;
#X floatatom 747 735 5 0 0 0 - #0-amp11b -, f 5;
#X floatatom 732 712 5 0 0 0 - #0-freq11b -, f 5;
#X text 767 709 f;
#X text 783 735 a;
#X obj 732 789 *~;
#X obj 733 767 osc~ 440;
#X floatatom 817 735 5 0 0 0 - #0-amp12b -, f 5;
#X floatatom 802 712 5 0 0 0 - #0-freq12b -, f 5;
#X text 837 709 f;
#X text 853 735 a;
#X obj 802 789 *~;
#X obj 803 767 osc~ 440;
#X text 34 684 1;
#X text 104 684 2;
#X text 174 684 3;
#X text 244 684 4;
#X text 315 684 5;
#X text 384 684 6;
#X text 454 684 7;
#X text 524 684 8;
#X text 604 684 9;
#X text 674 684 10;
#X text 744 684 11;
#X text 814 684 12;
#X obj 871 765 osc~ 440;
#X floatatom 886 735 5 0 0 0 - #0-amp13b -, f 5;
#X floatatom 871 712 5 0 0 0 - #0-freq13b -, f 5;
#X text 906 709 f;
#X text 922 735 a;
#X obj 871 789 *~;
#X obj 941 765 osc~ 440;
#X floatatom 956 735 5 0 0 0 - #0-amp14b -, f 5;
#X floatatom 941 712 5 0 0 0 - #0-freq14b -, f 5;
#X text 976 709 f;
#X text 992 735 a;
#X obj 941 789 *~;
#X obj 1011 765 osc~ 440;
#X floatatom 1026 735 5 0 0 0 - #0-amp15b -, f 5;
#X floatatom 1011 712 5 0 0 0 - #0-freq15b -, f 5;
#X text 1046 709 f;
#X text 1062 735 a;
#X obj 1012 789 *~;
#X floatatom 1096 735 5 0 0 0 - #0-amp16b -, f 5;
#X floatatom 1081 712 5 0 0 0 - #0-freq16b -, f 5;
#X text 1116 709 f;
#X text 1132 735 a;
#X obj 1081 789 *~;
#X obj 1082 767 osc~ 440;
#X floatatom 1166 735 5 0 0 0 - #0-amp17b -, f 5;
#X floatatom 1151 712 5 0 0 0 - #0-freq17b -, f 5;
#X text 1186 709 f;
#X text 1202 735 a;
#X obj 1151 789 *~;
#X obj 1152 767 osc~ 440;
#X floatatom 1236 735 5 0 0 0 - #0-amp18b -, f 5;
#X floatatom 1221 712 5 0 0 0 - #0-freq18b -, f 5;
#X text 1256 709 f;
#X text 1272 735 a;
#X obj 1221 789 *~;
#X obj 1222 767 osc~ 440;
#X obj 1292 765 osc~ 440;
#X floatatom 1307 735 5 0 0 0 - #0-amp19b -, f 5;
#X floatatom 1292 712 5 0 0 0 - #0-freq19b -, f 5;
#X text 1327 709 f;
#X text 1343 735 a;
#X obj 1292 789 *~;
#X obj 1362 765 osc~ 440;
#X floatatom 1377 735 5 0 0 0 - #0-amp20b -, f 5;
#X floatatom 1362 712 5 0 0 0 - #0-freq20b -, f 5;
#X text 1397 709 f;
#X text 1413 735 a;
#X obj 1362 789 *~;
#X obj 1432 765 osc~ 440;
#X floatatom 1447 735 5 0 0 0 - #0-amp21b -, f 5;
#X floatatom 1432 712 5 0 0 0 - #0-freq21b -, f 5;
#X text 1467 709 f;
#X text 1483 735 a;
#X obj 1433 789 *~;
#X floatatom 1517 735 5 0 0 0 - #0-amp22b -, f 5;
#X floatatom 1502 712 5 0 0 0 - #0-freq22b -, f 5;
#X text 1537 709 f;
#X text 1553 735 a;
#X obj 1502 789 *~;
#X obj 1503 767 osc~ 440;
#X floatatom 1587 735 5 0 0 0 - #0-amp23b -, f 5;
#X floatatom 1572 712 5 0 0 0 - #0-freq23b -, f 5;
#X text 1607 709 f;
#X text 1623 735 a;
#X obj 1572 789 *~;
#X obj 1573 767 osc~ 440;
#X floatatom 1657 735 5 0 0 0 - #0-amp24b -, f 5;
#X floatatom 1642 712 5 0 0 0 - #0-freq24b -, f 5;
#X text 1677 709 f;
#X text 1693 735 a;
#X obj 1642 789 *~;
#X obj 1643 767 osc~ 440;
#X text 874 684 13;
#X text 944 684 14;
#X text 1014 684 15;
#X text 1084 684 16;
#X text 1155 684 17;
#X text 1224 684 18;
#X text 1294 684 19;
#X text 1364 684 20;
#X text 1444 684 21;
#X text 1514 684 22;
#X text 1584 684 23;
#X text 1654 684 24;
#X obj 32 1281 outlet~;
#X obj 31 1186 *~;
#X obj 139 1183 / 127;
#X obj 142 1160 hsl 128 15 0 127 0 0 empty \$0-gainslider empty -2
-8 0 10 -262144 -1 -1 4362 1;
#X text 279 1158 gain;
#X obj 41 934 osc~ 440;
#X floatatom 56 904 5 0 0 0 - #0-amp25b -, f 5;
#X floatatom 41 881 5 0 0 0 - #0-freq25b -, f 5;
#X text 76 878 f;
#X text 92 904 a;
#X obj 41 958 *~;
#X obj 111 934 osc~ 440;
#X floatatom 126 904 5 0 0 0 - #0-amp26b -, f 5;
#X floatatom 111 881 5 0 0 0 - #0-freq26b -, f 5;
#X text 146 878 f;
#X text 162 904 a;
#X obj 111 958 *~;
#X obj 181 934 osc~ 440;
#X floatatom 196 904 5 0 0 0 - #0-amp27b -, f 5;
#X floatatom 181 881 5 0 0 0 - #0-freq27b -, f 5;
#X text 216 878 f;
#X text 232 904 a;
#X obj 182 958 *~;
#X floatatom 266 904 5 0 0 0 - #0-amp28b -, f 5;
#X floatatom 251 881 5 0 0 0 - #0-freq28b -, f 5;
#X text 286 878 f;
#X text 302 904 a;
#X obj 251 958 *~;
#X obj 252 936 osc~ 440;
#X floatatom 336 904 5 0 0 0 - #0-amp29b -, f 5;
#X floatatom 321 881 5 0 0 0 - #0-freq29b -, f 5;
#X text 356 878 f;
#X text 372 904 a;
#X obj 321 958 *~;
#X obj 322 936 osc~ 440;
#X floatatom 406 904 5 0 0 0 - #0-amp30b -, f 5;
#X floatatom 391 881 5 0 0 0 - #0-freq30b -, f 5;
#X text 426 878 f;
#X text 442 904 a;
#X obj 391 958 *~;
#X obj 392 936 osc~ 440;
#X obj 462 934 osc~ 440;
#X floatatom 477 904 5 0 0 0 - #0-amp31b -, f 5;
#X floatatom 462 881 5 0 0 0 - #0-freq31b -, f 5;
#X text 497 878 f;
#X text 513 904 a;
#X obj 462 958 *~;
#X obj 532 934 osc~ 440;
#X floatatom 547 904 5 0 0 0 - #0-amp32b -, f 5;
#X floatatom 532 881 5 0 0 0 - #0-freq32b -, f 5;
#X text 567 878 f;
#X text 583 904 a;
#X obj 532 958 *~;
#X obj 602 934 osc~ 440;
#X floatatom 617 904 5 0 0 0 - #0-amp33b -, f 5;
#X floatatom 602 881 5 0 0 0 - #0-freq33b -, f 5;
#X text 637 878 f;
#X text 653 904 a;
#X obj 603 958 *~;
#X floatatom 687 904 5 0 0 0 - #0-amp34b -, f 5;
#X floatatom 672 881 5 0 0 0 - #0-freq34b -, f 5;
#X text 707 878 f;
#X text 723 904 a;
#X obj 672 958 *~;
#X obj 673 936 osc~ 440;
#X floatatom 757 904 5 0 0 0 - #0-amp35b -, f 5;
#X floatatom 742 881 5 0 0 0 - #0-freq35b -, f 5;
#X text 777 878 f;
#X text 793 904 a;
#X obj 742 958 *~;
#X obj 743 936 osc~ 440;
#X floatatom 827 904 5 0 0 0 - #0-amp36b -, f 5;
#X floatatom 812 881 5 0 0 0 - #0-freq36b -, f 5;
#X text 847 878 f;
#X text 863 904 a;
#X obj 812 958 *~;
#X obj 813 936 osc~ 440;
#X text 873 904 a;
#X obj 891 934 osc~ 440;
#X floatatom 906 904 5 0 0 0 - #0-amp37b -, f 5;
#X floatatom 891 881 5 0 0 0 - #0-freq37b -, f 5;
#X text 926 878 f;
#X text 942 904 a;
#X obj 891 958 *~;
#X obj 961 934 osc~ 440;
#X floatatom 976 904 5 0 0 0 - #0-amp38b -, f 5;
#X floatatom 961 881 5 0 0 0 - #0-freq38b -, f 5;
#X text 996 878 f;
#X text 1012 904 a;
#X obj 961 958 *~;
#X obj 1031 934 osc~ 440;
#X floatatom 1046 904 5 0 0 0 - #0-amp39b -, f 5;
#X floatatom 1031 881 5 0 0 0 - #0-freq39b -, f 5;
#X text 1066 878 f;
#X text 1082 904 a;
#X obj 1032 958 *~;
#X floatatom 1116 904 5 0 0 0 - #0-amp40b -, f 5;
#X floatatom 1101 881 5 0 0 0 - #0-freq40b -, f 5;
#X text 1136 878 f;
#X text 1152 904 a;
#X obj 1101 958 *~;
#X obj 1102 936 osc~ 440;
#X floatatom 1186 904 5 0 0 0 - #0-amp41b -, f 5;
#X floatatom 1171 881 5 0 0 0 - #0-freq41b -, f 5;
#X text 1206 878 f;
#X text 1222 904 a;
#X obj 1171 958 *~;
#X obj 1172 936 osc~ 440;
#X floatatom 1256 904 5 0 0 0 - #0-amp42b -, f 5;
#X floatatom 1241 881 5 0 0 0 - #0-freq42b -, f 5;
#X text 1276 878 f;
#X text 1292 904 a;
#X obj 1241 958 *~;
#X obj 1242 936 osc~ 440;
#X obj 1312 934 osc~ 440;
#X floatatom 1327 904 5 0 0 0 - #0-amp43b -, f 5;
#X floatatom 1312 881 5 0 0 0 - #0-freq43b -, f 5;
#X text 1347 878 f;
#X text 1363 904 a;
#X obj 1312 958 *~;
#X obj 1382 934 osc~ 440;
#X floatatom 1397 904 5 0 0 0 - #0-amp44b -, f 5;
#X floatatom 1382 881 5 0 0 0 - #0-freq44b -, f 5;
#X text 1417 878 f;
#X text 1433 904 a;
#X obj 1382 958 *~;
#X obj 1452 934 osc~ 440;
#X floatatom 1467 904 5 0 0 0 - #0-amp45b -, f 5;
#X floatatom 1452 881 5 0 0 0 - #0-freq45b -, f 5;
#X text 1487 878 f;
#X text 1503 904 a;
#X obj 1453 958 *~;
#X floatatom 1537 904 5 0 0 0 - #0-amp46b -, f 5;
#X floatatom 1522 881 5 0 0 0 - #0-freq46b -, f 5;
#X text 1557 878 f;
#X text 1573 904 a;
#X obj 1522 958 *~;
#X obj 1523 936 osc~ 440;
#X floatatom 1607 904 5 0 0 0 - #0-amp47b -, f 5;
#X floatatom 1592 881 5 0 0 0 - #0-freq47b -, f 5;
#X text 1627 878 f;
#X text 1643 904 a;
#X obj 1592 958 *~;
#X obj 1593 936 osc~ 440;
#X floatatom 1677 904 5 0 0 0 - #0-amp48b -, f 5;
#X floatatom 1662 881 5 0 0 0 - #0-freq48b -, f 5;
#X text 1697 878 f;
#X text 1713 904 a;
#X obj 1662 958 *~;
#X obj 1663 936 osc~ 440;
#X text 46 856 25;
#X text 111 856 26;
#X text 185 856 27;
#X text 248 856 28;
#X text 323 856 29;
#X text 396 856 30;
#X text 465 855 31;
#X text 530 855 32;
#X text 604 855 33;
#X text 667 855 34;
#X text 741 855 35;
#X text 815 855 36;
#X text 895 853 37;
#X text 970 853 38;
#X text 1034 853 39;
#X text 1107 853 40;
#X text 1172 853 41;
#X text 1245 853 42;
#X text 1313 853 43;
#X text 1388 853 44;
#X text 1452 853 45;
#X text 1525 853 46;
#X text 1599 853 47;
#X text 1663 853 48;
#N canvas 25 23 592 344 freq.calc.sine 0;
#X obj 246 291 send, f 5;
#X obj 148 52 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 148 110 send \$0-freq1a;
#X msg 148 84 440;
#N canvas 25 23 869 484 for.loop.2-48 0;
#X obj 54 111 until;
#X obj 115 133 + 1;
#X text 142 133 iterator \, increase by 1 each time [until] sends a
"bang";
#X text 341 207 this mechanism resets the iterator to "1" when the
max iterations have occured, f 40;
#X obj 328 233 loadbang;
#X obj 54 160 trigger f f;
#X text 131 157 send the iterator first to the loop mechanism \, then
to the [sel] object to test if the loop is over (and reset the iterator
back to 1);
#X obj 54 88 t f f;
#X obj 54 20 inlet;
#X obj 117 244 outlet;
#X msg 295 233 2;
#X obj 54 133 float 2;
#X msg 54 67 47;
#X obj 295 211 sel 48;
#X connect 0 0 11 0;
#X connect 1 0 11 1;
#X connect 4 0 10 0;
#X connect 5 0 13 0;
#X connect 5 1 9 0;
#X connect 7 0 0 0;
#X connect 8 0 12 0;
#X connect 10 0 11 1;
#X connect 11 0 1 0;
#X connect 11 0 5 0;
#X connect 12 0 7 0;
#X connect 13 0 10 0;
#X restore 246 87 pd for.loop.2-48;
#X msg 246 250 0;
#X obj 246 160 float \$0;
#X obj 246 134 t b s;
#X obj 246 212 t b s;
#X obj 246 110 makefilename %%d-freq%da;
#X obj 246 186 makefilename;
#X msg 307 162 set \$1;
#X text 24 82 set first partial to the fundamental, f 18;
#X text 363 78 set the remaining partials to zero, f 18;
#X obj 145 27 inlet;
#X connect 1 0 4 0;
#X connect 1 0 3 0;
#X connect 3 0 2 0;
#X connect 4 0 9 0;
#X connect 5 0 0 0;
#X connect 6 0 10 0;
#X connect 7 0 6 0;
#X connect 7 1 11 0;
#X connect 8 0 5 0;
#X connect 8 1 0 1;
#X connect 9 0 7 0;
#X connect 10 0 8 0;
#X connect 11 0 10 0;
#X connect 14 0 1 0;
#X restore 1304 104 pd freq.calc.sine;
#N canvas 26 23 822 657 amp.calc.sine 0;
#X obj 251 309 send, f 5;
#X obj 153 57 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#N canvas 25 23 869 484 for.loop.2-48 0;
#X obj 54 111 until;
#X obj 115 133 + 1;
#X text 142 133 iterator \, increase by 1 each time [until] sends a
"bang";
#X text 341 207 this mechanism resets the iterator to "1" when the
max iterations have occured, f 40;
#X obj 328 233 loadbang;
#X obj 54 160 trigger f f;
#X text 131 157 send the iterator first to the loop mechanism \, then
to the [sel] object to test if the loop is over (and reset the iterator
back to 1);
#X obj 54 88 t f f;
#X obj 54 20 inlet;
#X obj 117 244 outlet;
#X msg 295 233 2;
#X obj 54 133 float 2;
#X msg 54 67 47;
#X obj 295 211 sel 48;
#X connect 0 0 11 0;
#X connect 1 0 11 1;
#X connect 4 0 10 0;
#X connect 5 0 13 0;
#X connect 5 1 9 0;
#X connect 7 0 0 0;
#X connect 8 0 12 0;
#X connect 10 0 11 1;
#X connect 11 0 1 0;
#X connect 11 0 5 0;
#X connect 12 0 7 0;
#X connect 13 0 10 0;
#X restore 251 122 pd for.loop.2-48;
#X msg 251 281 0;
#X obj 251 195 float \$0;
#X obj 251 169 t b s;
#X obj 251 247 t b s;
#X obj 251 221 makefilename;
#X msg 312 197 set \$1;
#X text 368 113 set the remaining partials to zero, f 18;
#X msg 153 89 1;
#X text 185 59 set first partial amplitude to 1, f 17;
#X obj 251 145 makefilename %%d-amp%da;
#X obj 153 125 send \$0-amp1a;
#X obj 152 39 inlet;
#X connect 1 0 2 0;
#X connect 1 0 10 0;
#X connect 2 0 12 0;
#X connect 3 0 0 0;
#X connect 4 0 7 0;
#X connect 5 0 4 0;
#X connect 5 1 8 0;
#X connect 6 0 3 0;
#X connect 6 1 0 1;
#X connect 7 0 6 0;
#X connect 8 0 7 0;
#X connect 10 0 13 0;
#X connect 12 0 5 0;
#X connect 14 0 1 0;
#X restore 1424 104 pd amp.calc.sine;
#X obj 1301 397 bng 15 250 50 0 empty \$0-harmonicspec_c empty 17 7
0 10 -262144 -1 -1;
#X obj 1301 422 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 1461 417 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text 1301 373 Harmonic Spectrum C (Rectangle Wave) Preset;
#N canvas 25 23 1415 855 freq.calc.rect 0;
#X obj 54 111 until;
#X obj 115 133 + 1;
#X obj 54 133 float 1;
#X obj 189 386 f;
#X text 226 386 the iterator is stored here as an index to be used
by the [route] object, f 72;
#X text 142 133 iterator \, increase by 1 each time [until] sends a
"bang";
#X obj 117 351 trigger b f;
#X obj 135 427 pack f f;
#X text 196 425 combine the iterator/partial number with the calculated
partial amplitude value as a pair for [route];
#X msg 295 233 1;
#X obj 295 211 sel 48;
#X text 341 207 this mechanism resets the iterator to "1" when the
max iterations have occured, f 40;
#X obj 328 233 loadbang;
#X obj 54 160 trigger f f;
#X text 131 157 send the iterator first to the loop mechanism \, then
to the [sel] object to test if the loop is over (and reset the iterator
back to 1);
#X obj 117 268 t f f, f 15;
#X obj 24 468 route 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
43 44 45 46 47 48, f 227;
#X obj 54 88 t f f;
#X msg 54 67 48;
#X obj 143 19 inlet;
#X text 184 18 Fundamental Frequency;
#X obj 54 20 inlet;
#X obj 24 524 send \$0-freq1a;
#X obj 220 524 send \$0-freq3a;
#X obj 414 524 send \$0-freq5a;
#X obj 610 524 send \$0-freq7a;
#X obj 804 524 send \$0-freq9a;
#X obj 997 524 send \$0-freq11a;
#X obj 1191 524 send \$0-freq13a;
#X obj 1386 524 send \$0-freq15a;
#X obj 24 551 send \$0-freq17a;
#X obj 220 551 send \$0-freq19a;
#X obj 414 551 send \$0-freq21a;
#X obj 611 551 send \$0-freq23a;
#X obj 805 551 send \$0-freq25a;
#X obj 998 551 send \$0-freq27a;
#X obj 1191 551 send \$0-freq29a;
#X obj 1386 551 send \$0-freq31a;
#X obj 24 578 send \$0-freq33a;
#X obj 220 578 send \$0-freq35a;
#X obj 415 578 send \$0-freq37a;
#X obj 611 578 send \$0-freq39a;
#X obj 807 578 send \$0-freq41a;
#X obj 1001 578 send \$0-freq43a;
#X obj 1194 578 send \$0-freq45a;
#X obj 1388 578 send \$0-freq47a;
#X obj 117 312 * 440;
#X connect 0 0 2 0;
#X connect 1 0 2 1;
#X connect 2 0 1 0;
#X connect 2 0 13 0;
#X connect 3 0 7 0;
#X connect 6 0 3 0;
#X connect 6 1 7 1;
#X connect 7 0 16 0;
#X connect 9 0 2 1;
#X connect 10 0 9 0;
#X connect 12 0 9 0;
#X connect 13 0 10 0;
#X connect 13 1 15 0;
#X connect 15 0 46 0;
#X connect 15 1 3 1;
#X connect 16 0 22 0;
#X connect 16 2 23 0;
#X connect 16 4 24 0;
#X connect 16 6 25 0;
#X connect 16 8 26 0;
#X connect 16 10 27 0;
#X connect 16 12 28 0;
#X connect 16 14 29 0;
#X connect 16 16 30 0;
#X connect 16 18 31 0;
#X connect 16 20 32 0;
#X connect 16 22 33 0;
#X connect 16 24 34 0;
#X connect 16 26 35 0;
#X connect 16 28 36 0;
#X connect 16 30 37 0;
#X connect 16 32 38 0;
#X connect 16 34 39 0;
#X connect 16 36 40 0;
#X connect 16 38 41 0;
#X connect 16 40 42 0;
#X connect 16 42 43 0;
#X connect 16 44 44 0;
#X connect 16 46 45 0;
#X connect 17 0 0 0;
#X connect 17 1 10 1;
#X connect 18 0 17 0;
#X connect 19 0 46 1;
#X connect 21 0 18 0;
#X connect 46 0 6 0;
#X restore 1301 447 pd freq.calc.rect;
#N canvas 25 23 1415 855 amp.calc.rect 0;
#X obj 52 91 until;
#X obj 113 113 + 1;
#X obj 52 113 float 1;
#X obj 115 298 /;
#X obj 187 386 f;
#X text 224 386 the iterator is stored here as an index to be used
by the [route] object, f 72;
#X text 140 113 iterator \, increase by 1 each time [until] sends a
"bang";
#X obj 115 351 trigger b f;
#X obj 133 427 pack f f;
#X text 194 425 combine the iterator/partial number with the calculated
partial amplitude value as a pair for [route];
#X msg 293 213 1;
#X obj 293 191 sel 48;
#X text 339 187 this mechanism resets the iterator to "1" when the
max iterations have occured, f 40;
#X obj 326 213 loadbang;
#X obj 52 140 trigger f f;
#X text 129 137 send the iterator first to the loop mechanism \, then
to the [sel] object to test if the loop is over (and reset the iterator
back to 1);
#X obj 115 271 swap 1;
#X floatatom 115 325 5 0 0 0 - - -, f 5;
#X obj 52 68 t f f;
#X msg 52 47 48;
#X obj 24 538 route 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
43 44 45 46 47 48, f 227;
#X obj 24 674 send \$0-amp1a;
#X obj 123 674 send \$0-amp2a;
#X obj 220 674 send \$0-amp3a;
#X obj 317 674 send \$0-amp4a;
#X obj 414 674 send \$0-amp5a;
#X obj 511 674 send \$0-amp6a;
#X obj 610 674 send \$0-amp7a;
#X obj 707 674 send \$0-amp8a;
#X obj 804 674 send \$0-amp9a;
#X obj 901 674 send \$0-amp10a;
#X obj 997 674 send \$0-amp11a;
#X obj 1095 674 send \$0-amp12a;
#X obj 1191 674 send \$0-amp13a;
#X obj 1386 674 send \$0-amp15a;
#X obj 1484 673 send \$0-amp16a;
#X obj 24 781 send \$0-amp17a;
#X obj 123 781 send \$0-amp18a;
#X obj 220 781 send \$0-amp19a;
#X obj 317 781 send \$0-amp20a;
#X obj 414 781 send \$0-amp21a;
#X obj 511 781 send \$0-amp22a;
#X obj 611 781 send \$0-amp23a;
#X obj 708 781 send \$0-amp24a;
#X obj 805 781 send \$0-amp25a;
#X obj 902 781 send \$0-amp26a;
#X obj 998 781 send \$0-amp27a;
#X obj 1191 781 send \$0-amp29a;
#X obj 1288 781 send \$0-amp30a;
#X obj 1386 781 send \$0-amp31a;
#X obj 1483 781 send \$0-amp32a;
#X obj 24 908 send \$0-amp33a;
#X obj 123 908 send \$0-amp34a;
#X obj 220 908 send \$0-amp35a;
#X obj 319 908 send \$0-amp36a;
#X obj 415 908 send \$0-amp37a;
#X obj 511 908 send \$0-amp38a;
#X obj 611 908 send \$0-amp39a;
#X obj 709 908 send \$0-amp40a;
#X obj 807 908 send \$0-amp41a;
#X obj 904 908 send \$0-amp42a;
#X obj 1001 908 send \$0-amp43a;
#X obj 1291 908 send \$0-amp46a;
#X obj 1388 908 send \$0-amp47a;
#X obj 1485 908 send \$0-amp48a;
#X obj 52 20 inlet;
#X obj 1095 781 send \$0-amp28a;
#X obj 1097 908 send \$0-amp44a;
#X obj 1194 908 send \$0-amp45a;
#X obj 133 449 t l b;
#X msg 160 474 0;
#X obj 1288 674 send \$0-amp14a;
#X text 195 473 All even partials need to be zeroed;
#X obj 115 188 t f f, f 15;
#X text 145 298 divide 1/n \, where n is the interator (and the partial
number), f 61;
#X connect 0 0 2 0;
#X connect 1 0 2 1;
#X connect 2 0 1 0;
#X connect 2 0 14 0;
#X connect 3 0 17 0;
#X connect 4 0 8 0;
#X connect 7 0 4 0;
#X connect 7 1 8 1;
#X connect 8 0 69 0;
#X connect 10 0 2 1;
#X connect 11 0 10 0;
#X connect 13 0 10 0;
#X connect 14 0 11 0;
#X connect 14 1 73 0;
#X connect 16 0 3 0;
#X connect 16 1 3 1;
#X connect 17 0 7 0;
#X connect 18 0 0 0;
#X connect 18 1 11 1;
#X connect 19 0 18 0;
#X connect 20 0 21 0;
#X connect 20 2 23 0;
#X connect 20 4 25 0;
#X connect 20 6 27 0;
#X connect 20 8 29 0;
#X connect 20 10 31 0;
#X connect 20 12 33 0;
#X connect 20 14 34 0;
#X connect 20 16 36 0;
#X connect 20 18 38 0;
#X connect 20 20 40 0;
#X connect 20 22 42 0;
#X connect 20 24 44 0;
#X connect 20 26 46 0;
#X connect 20 28 47 0;
#X connect 20 30 49 0;
#X connect 20 32 51 0;
#X connect 20 34 53 0;
#X connect 20 36 55 0;
#X connect 20 38 57 0;
#X connect 20 40 59 0;
#X connect 20 42 61 0;
#X connect 20 44 68 0;
#X connect 20 46 63 0;
#X connect 65 0 19 0;
#X connect 69 0 20 0;
#X connect 69 1 70 0;
#X connect 70 0 22 0;
#X connect 70 0 37 0;
#X connect 70 0 52 0;
#X connect 70 0 24 0;
#X connect 70 0 39 0;
#X connect 70 0 54 0;
#X connect 70 0 26 0;
#X connect 70 0 41 0;
#X connect 70 0 56 0;
#X connect 70 0 28 0;
#X connect 70 0 43 0;
#X connect 70 0 58 0;
#X connect 70 0 30 0;
#X connect 70 0 45 0;
#X connect 70 0 60 0;
#X connect 70 0 32 0;
#X connect 70 0 66 0;
#X connect 70 0 67 0;
#X connect 70 0 71 0;
#X connect 70 0 48 0;
#X connect 70 0 62 0;
#X connect 70 0 35 0;
#X connect 70 0 50 0;
#X connect 70 0 64 0;
#X connect 73 0 16 0;
#X connect 73 1 4 1;
#X restore 1461 442 pd amp.calc.rect;
#X obj 1308 516 bng 15 250 50 0 empty \$0-inharmonicspec empty 17 7
0 10 -262144 -1 -1;
#N canvas 25 23 592 344 freq.calc.inharm 0;
#X obj 246 291 send, f 5;
#X obj 244 64 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 246 160 float \$0;
#X obj 246 134 t b s;
#X obj 246 212 t b s;
#X obj 246 110 makefilename %%d-freq%da;
#X obj 246 186 makefilename;
#X msg 307 162 set \$1;
#X obj 241 39 inlet;
#N canvas 25 23 869 484 for.loop.1-48 0;
#X obj 54 111 until;
#X obj 115 133 + 1;
#X text 142 133 iterator \, increase by 1 each time [until] sends a
"bang";
#X text 341 207 this mechanism resets the iterator to "1" when the
max iterations have occured, f 40;
#X obj 328 233 loadbang;
#X obj 54 160 trigger f f;
#X text 131 157 send the iterator first to the loop mechanism \, then
to the [sel] object to test if the loop is over (and reset the iterator
back to 1);
#X obj 54 88 t f f;
#X obj 54 20 inlet;
#X obj 117 244 outlet;
#X obj 295 211 sel 48;
#X msg 54 67 48;
#X msg 295 233 1;
#X obj 54 133 float 1;
#X connect 0 0 13 0;
#X connect 1 0 13 1;
#X connect 4 0 12 0;
#X connect 5 0 10 0;
#X connect 5 1 9 0;
#X connect 7 0 0 0;
#X connect 8 0 11 0;
#X connect 10 0 12 0;
#X connect 11 0 7 0;
#X connect 12 0 13 1;
#X connect 13 0 1 0;
#X connect 13 0 5 0;
#X restore 246 87 pd for.loop.1-48;
#X obj 195 238 random 20001;
#X text 19 180 randomly choose partial frequency;
#X connect 1 0 9 0;
#X connect 2 0 6 0;
#X connect 3 0 2 0;
#X connect 3 1 7 0;
#X connect 4 0 10 0;
#X connect 4 1 0 1;
#X connect 5 0 3 0;
#X connect 6 0 4 0;
#X connect 7 0 6 0;
#X connect 8 0 1 0;
#X connect 9 0 5 0;
#X connect 10 0 0 0;
#X restore 1308 547 pd freq.calc.inharm;
#N canvas 26 23 907 626 amp.calc.inharm 0;
#X obj 546 566 send, f 5;
#X obj 428 119 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 428 215 float \$0;
#X obj 428 189 t b s;
#X obj 428 241 makefilename;
#X msg 489 217 set \$1;
#X obj 428 94 inlet;
#N canvas 25 23 869 484 for.loop.1-48 0;
#X obj 54 111 until;
#X obj 115 133 + 1;
#X text 142 133 iterator \, increase by 1 each time [until] sends a
"bang";
#X text 341 207 this mechanism resets the iterator to "1" when the
max iterations have occured, f 40;
#X obj 328 233 loadbang;
#X obj 54 160 trigger f f;
#X text 131 157 send the iterator first to the loop mechanism \, then
to the [sel] object to test if the loop is over (and reset the iterator
back to 1);
#X obj 54 88 t f f;
#X obj 54 20 inlet;
#X obj 117 244 outlet;
#X obj 295 211 sel 48;
#X msg 54 67 48;
#X msg 295 233 1;
#X obj 54 133 float 1;
#X connect 0 0 13 0;
#X connect 1 0 13 1;
#X connect 4 0 12 0;
#X connect 5 0 10 0;
#X connect 5 1 9 0;
#X connect 7 0 0 0;
#X connect 8 0 11 0;
#X connect 10 0 12 0;
#X connect 11 0 7 0;
#X connect 12 0 13 1;
#X connect 13 0 1 0;
#X connect 13 0 5 0;
#X restore 428 142 pd for.loop.1-48;
#X text 172 266 randomly choose partial amp (weighted low so that our
signal won't be too loud), f 28;
#X obj 283 370 random 101;
#X obj 283 391 / 100;
#X obj 267 518 f;
#X obj 428 267 t b s;
#X obj 231 334 t b b;
#X obj 199 370 random 101;
#X obj 199 391 / 100;
#X obj 188 518 f;
#X obj 223 456 sel 1 0;
#X obj 223 422 <;
#X text 276 445 If left number is less \, send left number \, else
send right number;
#X text 78 508 store the two generated random values, f 17;
#X obj 745 564 print;
#X obj 737 520 pack f s;
#X obj 428 165 makefilename %%d-amp%da;
#X obj 248 573 * 0.25;
#X text 114 572 Scale all amplitudes to prevent clipping, f 20;
#X connect 1 0 7 0;
#X connect 2 0 4 0;
#X connect 3 0 2 0;
#X connect 3 1 5 0;
#X connect 4 0 12 0;
#X connect 5 0 4 0;
#X connect 6 0 1 0;
#X connect 7 0 23 0;
#X connect 9 0 10 0;
#X connect 10 0 11 1;
#X connect 10 0 18 1;
#X connect 11 0 24 0;
#X connect 12 0 13 0;
#X connect 12 1 0 1;
#X connect 13 0 14 0;
#X connect 13 1 9 0;
#X connect 14 0 15 0;
#X connect 15 0 16 1;
#X connect 15 0 18 0;
#X connect 16 0 24 0;
#X connect 17 0 16 0;
#X connect 17 1 11 0;
#X connect 18 0 17 0;
#X connect 22 0 21 0;
#X connect 23 0 3 0;
#X connect 24 0 0 0;
#X restore 1450 546 pd amp.calc.inharm;
#X obj 32 1118 catch~ additive;
#X obj 31 819 throw~ additive;
#X obj 32 1228 clip~ -0.99 0.99;
#X obj 41 985 throw~ additive;
#X obj 1115 121 vsl 15 100 0 127 0 1 \$0-gainslider empty Gain/Volume
-25 -10 0 10 -4032 -1 -1 3400 1;
#X obj 297 1270 dac~ 1 2;
#X text 1302 133 Harmonic Spectrum A (Triangle Wave) Preset;
#X text 1304 242 Harmonic Spectrum B (Sawtooth Wave) Preset;
#N canvas 551 178 822 657 amp.calc.sine 0;
#X obj 251 309 send, f 5;
#X obj 153 57 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#N canvas 26 23 869 484 for.loop.2-48 0;
#X obj 54 111 until;
#X obj 115 133 + 1;
#X text 142 133 iterator \, increase by 1 each time [until] sends a
"bang";
#X text 341 207 this mechanism resets the iterator to "1" when the
max iterations have occured, f 40;
#X obj 328 233 loadbang;
#X obj 54 160 trigger f f;
#X text 131 157 send the iterator first to the loop mechanism \, then
to the [sel] object to test if the loop is over (and reset the iterator
back to 1);
#X obj 54 88 t f f;
#X obj 54 20 inlet;
#X obj 117 244 outlet;
#X obj 295 211 sel 48;
#X obj 54 133 float 1;
#X msg 295 233 1;
#X msg 54 67 48;
#X connect 0 0 11 0;
#X connect 1 0 11 1;
#X connect 4 0 12 0;
#X connect 5 0 10 0;
#X connect 5 1 9 0;
#X connect 7 0 0 0;
#X connect 8 0 13 0;
#X connect 10 0 12 0;
#X connect 11 0 1 0;
#X connect 11 0 5 0;
#X connect 12 0 11 1;
#X connect 13 0 7 0;
#X restore 251 122 pd for.loop.2-48;
#X msg 251 281 0;
#X obj 251 195 float \$0;
#X obj 251 169 t b s;
#X obj 251 247 t b s;
#X obj 251 221 makefilename;
#X msg 312 197 set \$1;
#X obj 251 145 makefilename %%d-amp%da;
#X obj 152 39 inlet;
#X text 348 77 set the amp of all partials to 0;
#X connect 1 0 2 0;
#X connect 2 0 9 0;
#X connect 3 0 0 0;
#X connect 4 0 7 0;
#X connect 5 0 4 0;
#X connect 5 1 8 0;
#X connect 6 0 3 0;
#X connect 6 1 0 1;
#X connect 7 0 6 0;
#X connect 8 0 7 0;
#X connect 9 0 5 0;
#X connect 10 0 1 0;
#X restore 1424 -24 pd amp.calc.sine;
#N canvas 26 23 592 344 freq.calc.init 0;
#X obj 151 291 send, f 5;
#X obj 148 52 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X msg 151 250 0;
#X obj 151 160 float \$0;
#X obj 151 134 t b s;
#X obj 151 212 t b s;
#X obj 151 110 makefilename %%d-freq%da;
#X obj 151 186 makefilename;
#X msg 215 161 set \$1;
#X obj 145 27 inlet;
#N canvas 26 23 869 484 for.loop.1-48 0;
#X obj 54 111 until;
#X obj 115 133 + 1;
#X text 142 133 iterator \, increase by 1 each time [until] sends a
"bang";
#X text 341 207 this mechanism resets the iterator to "1" when the
max iterations have occured, f 40;
#X obj 328 233 loadbang;
#X obj 54 160 trigger f f;
#X text 131 157 send the iterator first to the loop mechanism \, then
to the [sel] object to test if the loop is over (and reset the iterator
back to 1);
#X obj 54 88 t f f;
#X obj 54 20 inlet;
#X obj 117 244 outlet;
#X obj 295 211 sel 48;
#X obj 54 133 float 1;
#X msg 54 67 48;
#X msg 295 233 1;
#X connect 0 0 11 0;
#X connect 1 0 11 1;
#X connect 4 0 13 0;
#X connect 5 0 10 0;
#X connect 5 1 9 0;
#X connect 7 0 0 0;
#X connect 8 0 12 0;
#X connect 10 0 13 0;
#X connect 11 0 1 0;
#X connect 11 0 5 0;
#X connect 12 0 7 0;
#X connect 13 0 11 1;
#X restore 151 87 pd for.loop.1-48;
#X text 246 32 sets all partials to 0;
#X connect 1 0 10 0;
#X connect 2 0 0 0;
#X connect 3 0 7 0;
#X connect 4 0 3 0;
#X connect 4 1 8 0;
#X connect 5 0 2 0;
#X connect 5 1 0 1;
#X connect 6 0 4 0;
#X connect 7 0 5 0;
#X connect 8 0 7 0;
#X connect 9 0 1 0;
#X connect 10 0 6 0;
#X restore 1304 -24 pd freq.calc.init;
#X text 1302 7 All topmost [bang] buttons are remotely triggered by
the button's in the UI;
#X text 105 74 User interface -----------------------------------------------------------------------------------------------------------------------------------------------------------------------
, f 182;
#X text 102 -150 All sound waves are actually composed of many individual
simple sound waves called SINE WAVES. Click on the blue preset button
labeled Sine Wave to see the wave on the oscilloscope \, and hear it
played over your speakers or headphones. On their own \, sine waves
don't exist in nature \, they must by synthetically made. When a natural
sound occurs \, it is composed of hundreds of sine waves that sum together
to form a COMPLEX WAVE. Each sine wave within a complex wave has its
own frequency and ampitude. You can manipulate 48 different sine waves
below. Set the second the second partial to a different frequency (number
box labelled "f") and increase that partial's amplitude (number box
labelled "a"). Notice the change in the displayed waveform as the two
sine waves add together. This change in waveform is due to phase interference.
When a complex wave creates a musical tone \, we call this, f 102
;
#X text 105 101 Spectrum \, Timbre \, & Additive Synthesis;
#X obj 1304 -56 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text 1300 -112 Intialize;
#X obj 1302 -86 loadbang;
#X text 1305 488 Inharmonic Spectrum;
#X obj 1305 589 bng 15 250 50 0 empty \$0-noise empty 17 7 0 10 -262144
-1 -1;
#N canvas 228 23 847 767 freq.calc.noise 0;
#X obj 286 633 send, f 5;
#X obj 282 183 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 286 502 float \$0;
#X obj 286 476 t b s;
#X obj 286 554 t b s;
#X obj 286 452 makefilename %%d-freq%da;
#X obj 286 528 makefilename;
#X msg 347 504 set \$1;
#X obj 282 161 inlet;
#N canvas 25 23 869 484 for.loop.1-48 0;
#X obj 54 111 until;
#X obj 115 133 + 1;
#X text 142 133 iterator \, increase by 1 each time [until] sends a
"bang";
#X text 341 207 this mechanism resets the iterator to "1" when the
max iterations have occured, f 40;
#X obj 328 233 loadbang;
#X obj 54 160 trigger f f;
#X text 131 157 send the iterator first to the loop mechanism \, then
to the [sel] object to test if the loop is over (and reset the iterator
back to 1);
#X obj 54 88 t f f;
#X obj 54 20 inlet;
#X obj 117 244 outlet;
#X obj 295 211 sel 48;
#X msg 54 67 48;
#X msg 295 233 1;
#X obj 54 133 float 1;
#X connect 0 0 13 0;
#X connect 1 0 13 1;
#X connect 4 0 12 0;
#X connect 5 0 10 0;
#X connect 5 1 9 0;
#X connect 7 0 0 0;
#X connect 8 0 11 0;
#X connect 10 0 12 0;
#X connect 11 0 7 0;
#X connect 12 0 13 1;
#X connect 13 0 1 0;
#X connect 13 0 5 0;
#X restore 286 429 pd for.loop.1-48;
#X obj 235 580 random 20001;
#X text 6 586 randomly choose partial frequency;
#X obj 560 178 bng 15 250 50 0 empty \$0-sine empty 17 7 0 10 -262144
-1 -1;
#X text 583 176 From Sine;
#X msg 516 314 0;
#X obj 560 204 bng 15 250 50 0 empty \$0-harmonicspec_b empty 17 7
0 10 -262144 -1 -1;
#X text 583 202 From Tri;
#X obj 560 230 bng 15 250 50 0 empty \$0-harmonicspec_a empty 17 7
0 10 -262144 -1 -1;
#X text 583 228 From Saw;
#X obj 560 256 bng 15 250 50 0 empty \$0-harmonicspec_c empty 17 7
0 10 -262144 -1 -1;
#X text 583 254 From Rect;
#X obj 560 282 bng 15 250 50 0 empty \$0-inharmonicspec empty 17 7
0 10 -262144 -1 -1;
#X text 583 280 From Inharm;
#X text 489 132 These buttons are from all the other presets \, which
will turn off the [metro] object, f 34;
#X msg 282 204 1;
#X text 301 36 The only difference between the "Inharmonic Spectrum"
and white noise is that the white noise module continuously generates
random values \, which then gives an even distribution of random (whole
number) frequencies \, thus approaching white noise. This continual
generation is provided by [metro].;
#X obj 282 387 metro 10;
#X text 267 129 When the white noise preset is triggered \, turn metro
on, f 28;
#X text 401 501 here \, the "set" command sets [makefilename] as if
its argument was the symbol output above. Then the \$0 locally generated
unique number replaces %d in the above symbol;
#X text 445 438 generates the symbol "%d-freqNa" where N is 1-48 generated
from the for loop above. the portion "%%d" from the argument is translated
to just "%d" so that we can use it as a replaceable element below;
#X connect 1 0 24 0;
#X connect 2 0 6 0;
#X connect 3 0 2 0;
#X connect 3 1 7 0;
#X connect 4 0 10 0;
#X connect 4 1 0 1;
#X connect 5 0 3 0;
#X connect 6 0 4 0;
#X connect 7 0 6 0;
#X connect 8 0 1 0;
#X connect 9 0 5 0;
#X connect 10 0 0 0;
#X connect 12 0 14 0;
#X connect 14 0 26 0;
#X connect 15 0 14 0;
#X connect 17 0 14 0;
#X connect 19 0 14 0;
#X connect 21 0 14 0;
#X connect 24 0 26 0;
#X connect 26 0 9 0;
#X restore 1308 627 pd freq.calc.noise;
#N canvas 228 23 847 767 amp.calc.noise 0;
#X obj 296 675 send, f 5;
#X obj 282 183 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 286 502 float \$0;
#X obj 286 476 t b s;
#X obj 286 554 t b s;
#X obj 286 528 makefilename;
#X msg 347 504 set \$1;
#X obj 282 161 inlet;
#N canvas 25 23 869 484 for.loop.1-48 0;
#X obj 54 111 until;
#X obj 115 133 + 1;
#X text 142 133 iterator \, increase by 1 each time [until] sends a
"bang";
#X text 341 207 this mechanism resets the iterator to "1" when the
max iterations have occured, f 40;
#X obj 328 233 loadbang;
#X obj 54 160 trigger f f;
#X text 131 157 send the iterator first to the loop mechanism \, then
to the [sel] object to test if the loop is over (and reset the iterator
back to 1);
#X obj 54 88 t f f;
#X obj 54 20 inlet;
#X obj 117 244 outlet;
#X obj 295 211 sel 48;
#X msg 54 67 48;
#X msg 295 233 1;
#X obj 54 133 float 1;
#X connect 0 0 13 0;
#X connect 1 0 13 1;
#X connect 4 0 12 0;
#X connect 5 0 10 0;
#X connect 5 1 9 0;
#X connect 7 0 0 0;
#X connect 8 0 11 0;
#X connect 10 0 12 0;
#X connect 11 0 7 0;
#X connect 12 0 13 1;
#X connect 13 0 1 0;
#X connect 13 0 5 0;
#X restore 286 429 pd for.loop.1-48;
#X obj 560 178 bng 15 250 50 0 empty \$0-sine empty 17 7 0 10 -262144
-1 -1;
#X text 583 176 From Sine;
#X msg 516 314 0;
#X obj 560 204 bng 15 250 50 0 empty \$0-harmonicspec_b empty 17 7
0 10 -262144 -1 -1;
#X text 583 202 From Tri;
#X obj 560 230 bng 15 250 50 0 empty \$0-harmonicspec_a empty 17 7
0 10 -262144 -1 -1;
#X text 583 228 From Saw;
#X obj 560 256 bng 15 250 50 0 empty \$0-harmonicspec_c empty 17 7
0 10 -262144 -1 -1;
#X text 583 254 From Rect;
#X obj 560 282 bng 15 250 50 0 empty \$0-inharmonicspec empty 17 7
0 10 -262144 -1 -1;
#X text 583 280 From Inharm;
#X text 489 132 These buttons are from all the other presets \, which
will turn off the [metro] object, f 34;
#X msg 282 204 1;
#X text 301 36 The only difference between the "Inharmonic Spectrum"
and white noise is that the white noise module continuously generates
random values \, which then gives an even distribution of random (whole
number) frequencies \, thus approaching white noise. This continual
generation is provided by [metro].;
#X text 267 129 When the white noise preset is triggered \, turn metro
on, f 28;
#X text 401 501 here \, the "set" command sets [makefilename] as if
its argument was the symbol output above. Then the \$0 locally generated
unique number replaces %d in the above symbol;
#X obj 286 452 makefilename %%d-amp%da;
#X text 445 438 generates the symbol "%d-ampNa" where N is 1-48 generated
from the for loop above. the portion "%%d" from the argument is translated
to just "%d" so that we can use it as a replaceable element below;
#X obj 235 580 random 100;
#X text 6 586 randomly choose partial amp;
#X obj 235 601 * 0.01;
#X obj 234 622 * 0.25;
#X obj 282 387 metro 5;
#X connect 1 0 21 0;
#X connect 2 0 5 0;
#X connect 3 0 2 0;
#X connect 3 1 6 0;
#X connect 4 0 27 0;
#X connect 4 1 0 1;
#X connect 5 0 4 0;
#X connect 6 0 5 0;
#X connect 7 0 1 0;
#X connect 8 0 25 0;
#X connect 9 0 11 0;
#X connect 11 0 31 0;
#X connect 12 0 11 0;
#X connect 14 0 11 0;
#X connect 16 0 11 0;
#X connect 18 0 11 0;
#X connect 21 0 31 0;
#X connect 25 0 3 0;
#X connect 27 0 29 0;
#X connect 29 0 30 0;
#X connect 30 0 0 0;
#X connect 31 0 8 0;
#X restore 1437 625 pd amp.calc.noise;
#X obj 762 209 bng 15 250 50 0 \$0-noise empty Noise_(Continuously_Generated_Random_Freq_and_Amp)
17 7 0 10 -4032 -1 -1;
#X connect 1 0 0 0;
#X connect 3 0 13 0;
#X connect 3 0 15 0;
#X connect 5 0 17 0;
#X connect 5 0 18 0;
#X connect 13 0 14 0;
#X connect 15 0 16 0;
#X connect 17 0 19 0;
#X connect 18 0 20 0;
#X connect 21 0 606 0;
#X connect 21 0 605 0;
#X connect 262 0 268 0;
#X connect 263 0 268 1;
#X connect 264 0 262 0;
#X connect 268 0 617 0;
#X connect 269 0 274 0;
#X connect 270 0 274 1;
#X connect 271 0 269 0;
#X connect 274 0 617 0;
#X connect 275 0 280 0;
#X connect 276 0 280 1;
#X connect 277 0 275 0;
#X connect 280 0 617 0;
#X connect 281 0 285 1;
#X connect 282 0 286 0;
#X connect 285 0 617 0;
#X connect 286 0 285 0;
#X connect 287 0 291 1;
#X connect 288 0 292 0;
#X connect 291 0 617 0;
#X connect 292 0 291 0;
#X connect 293 0 297 1;
#X connect 294 0 298 0;
#X connect 297 0 617 0;
#X connect 298 0 297 0;
#X connect 299 0 304 0;
#X connect 300 0 304 1;
#X connect 301 0 299 0;
#X connect 304 0 617 0;
#X connect 305 0 310 0;
#X connect 306 0 310 1;
#X connect 307 0 305 0;
#X connect 310 0 617 0;
#X connect 311 0 316 0;
#X connect 312 0 316 1;
#X connect 313 0 311 0;
#X connect 316 0 617 0;
#X connect 317 0 321 1;
#X connect 318 0 322 0;
#X connect 321 0 617 0;
#X connect 322 0 321 0;
#X connect 323 0 327 1;
#X connect 324 0 328 0;
#X connect 327 0 617 0;
#X connect 328 0 327 0;
#X connect 329 0 333 1;
#X connect 330 0 334 0;
#X connect 333 0 617 0;
#X connect 334 0 333 0;
#X connect 347 0 352 0;
#X connect 348 0 352 1;
#X connect 349 0 347 0;
#X connect 352 0 617 0;
#X connect 353 0 358 0;
#X connect 354 0 358 1;
#X connect 355 0 353 0;
#X connect 358 0 617 0;
#X connect 359 0 364 0;
#X connect 360 0 364 1;
#X connect 361 0 359 0;
#X connect 364 0 617 0;
#X connect 365 0 369 1;
#X connect 366 0 370 0;
#X connect 369 0 617 0;
#X connect 370 0 369 0;
#X connect 371 0 375 1;
#X connect 372 0 376 0;
#X connect 375 0 617 0;
#X connect 376 0 375 0;
#X connect 377 0 381 1;
#X connect 378 0 382 0;
#X connect 381 0 617 0;
#X connect 382 0 381 0;
#X connect 383 0 388 0;
#X connect 384 0 388 1;
#X connect 385 0 383 0;
#X connect 388 0 617 0;
#X connect 389 0 394 0;
#X connect 390 0 394 1;
#X connect 391 0 389 0;
#X connect 394 0 617 0;
#X connect 395 0 400 0;
#X connect 396 0 400 1;
#X connect 397 0 395 0;
#X connect 400 0 617 0;
#X connect 401 0 405 1;
#X connect 402 0 406 0;
#X connect 405 0 617 0;
#X connect 406 0 405 0;
#X connect 407 0 411 1;
#X connect 408 0 412 0;
#X connect 411 0 617 0;
#X connect 412 0 411 0;
#X connect 413 0 417 1;
#X connect 414 0 418 0;
#X connect 417 0 617 0;
#X connect 418 0 417 0;
#X connect 432 0 618 0;
#X connect 433 0 432 1;
#X connect 434 0 433 0;
#X connect 436 0 441 0;
#X connect 437 0 441 1;
#X connect 438 0 436 0;
#X connect 441 0 619 0;
#X connect 442 0 447 0;
#X connect 443 0 447 1;
#X connect 444 0 442 0;
#X connect 447 0 619 0;
#X connect 448 0 453 0;
#X connect 449 0 453 1;
#X connect 450 0 448 0;
#X connect 453 0 619 0;
#X connect 454 0 458 1;
#X connect 455 0 459 0;
#X connect 458 0 619 0;
#X connect 459 0 458 0;
#X connect 460 0 464 1;
#X connect 461 0 465 0;
#X connect 464 0 619 0;
#X connect 465 0 464 0;
#X connect 466 0 470 1;
#X connect 467 0 471 0;
#X connect 470 0 619 0;
#X connect 471 0 470 0;
#X connect 472 0 477 0;
#X connect 473 0 477 1;
#X connect 474 0 472 0;
#X connect 477 0 619 0;
#X connect 478 0 483 0;
#X connect 479 0 483 1;
#X connect 480 0 478 0;
#X connect 483 0 619 0;
#X connect 484 0 489 0;
#X connect 485 0 489 1;
#X connect 486 0 484 0;
#X connect 489 0 619 0;
#X connect 490 0 494 1;
#X connect 491 0 495 0;
#X connect 494 0 619 0;
#X connect 495 0 494 0;
#X connect 496 0 500 1;
#X connect 497 0 501 0;
#X connect 500 0 619 0;
#X connect 501 0 500 0;
#X connect 502 0 506 1;
#X connect 503 0 507 0;
#X connect 506 0 619 0;
#X connect 507 0 506 0;
#X connect 509 0 514 0;
#X connect 510 0 514 1;
#X connect 511 0 509 0;
#X connect 514 0 619 0;
#X connect 515 0 520 0;
#X connect 516 0 520 1;
#X connect 517 0 515 0;
#X connect 520 0 619 0;
#X connect 521 0 526 0;
#X connect 522 0 526 1;
#X connect 523 0 521 0;
#X connect 526 0 619 0;
#X connect 527 0 531 1;
#X connect 528 0 532 0;
#X connect 531 0 619 0;
#X connect 532 0 531 0;
#X connect 533 0 537 1;
#X connect 534 0 538 0;
#X connect 537 0 619 0;
#X connect 538 0 537 0;
#X connect 539 0 543 1;
#X connect 540 0 544 0;
#X connect 543 0 619 0;
#X connect 544 0 543 0;
#X connect 545 0 550 0;
#X connect 546 0 550 1;
#X connect 547 0 545 0;
#X connect 550 0 619 0;
#X connect 551 0 556 0;
#X connect 552 0 556 1;
#X connect 553 0 551 0;
#X connect 556 0 619 0;
#X connect 557 0 562 0;
#X connect 558 0 562 1;
#X connect 559 0 557 0;
#X connect 562 0 619 0;
#X connect 563 0 567 1;
#X connect 564 0 568 0;
#X connect 567 0 619 0;
#X connect 568 0 567 0;
#X connect 569 0 573 1;
#X connect 570 0 574 0;
#X connect 573 0 619 0;
#X connect 574 0 573 0;
#X connect 575 0 579 1;
#X connect 576 0 580 0;
#X connect 579 0 619 0;
#X connect 580 0 579 0;
#X connect 607 0 608 0;
#X connect 607 0 609 0;
#X connect 608 0 611 0;
#X connect 609 0 612 0;
#X connect 613 0 615 0;
#X connect 613 0 614 0;
#X connect 616 0 432 0;
#X connect 618 0 431 0;
#X connect 618 0 267 0;
#X connect 618 0 621 0;
#X connect 618 0 621 1;
#X connect 630 0 625 0;
#X connect 630 0 624 0;
#X connect 632 0 630 0;
#X connect 634 0 635 0;
#X connect 634 0 636 0;
#X coords 0 -1 1 1 1100 450 2 100 100;
