#N canvas 1974 -135 1412 855 10;
#X obj -418 307 osc~ 440;
#X obj -418 393 *~;
#X floatatom -341 314 5 0 1 0 - - -, f 5;
#X obj 1443 -114 tdh.util.scope~;
#X text -340 205 Frequency;
#X text -330 271 Amplitude (0.0-1.0);
#X obj -418 532 send~ sig1;
#X obj 2072 -146 receive~ sig1;
#X obj -397 347 / 127;
#X obj -338 224 hsl 128 15 0 127 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X obj -341 290 hsl 128 15 0 127 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X obj -341 243 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0
10 -262144 -1 -1 0 256;
#X obj -415 238 / 127;
#X text -628 349 This brings slider's range to 0.0-1.0;
#X text -648 233 This brings slider's range to 0.0-1.0;
#X obj -474 503 outlet~;
#X text -544 533 Send to oscilloscope;
#X text -615 503 Send out the subpatch;
#X text -598 190 Sliders output whole numbers from 0-127;
#X text -337 107 Frequency & Amplitude;
#X text -343 145 Parameters can either be set through;
#X text -343 159 sliders or typing/dragging in number;
#X text -343 171 boxes;
#X text -653 263 This brings slider's range to 0-20000 \,;
#X text -654 276 which is the range of human hearing for;
#X text -656 288 frequency. Then we send that value to;
#X text -654 301 the left inlet of [osc~];
#X text -646 381 We can control a signal's amplitude;
#X text -646 395 by scaling it from 0-1 by multiplying;
#X text -648 409 it by a range of number from 0-1;
#X obj -415 270 * 20000;
#X text 101 102 AMPLITUDE AND FREQUENCY;
#N canvas 1440 -209 1920 1035 demonstration.wave 0;
#X floatatom 690 375 0 0 0 0 - - -;
#X obj 845 296 trigger f f;
#X obj 945 383 + 1;
#X obj 908 347 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 845 237 line;
#X obj 908 382 f 0;
#X msg 945 348 0;
#X obj 945 270 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 845 216 0 \, 1000 10000;
#X obj 980 188 loadbang;
#X obj 845 188 loadbang;
#X obj 690 347 expr sin(2 * 3.14159 * $f1 / 360);
#X text 276 410 0.5;
#X text 376 410 1;
#X text 476 410 1.5;
#X text 578 410 2;
#N canvas 0 22 450 278 (subpatch) 0;
#X array demo_soundwave 360 float 3;
#A 0 0.0348995 0.0697564 0.104528 0.139173 0.173648 0.207912 0.241922
0.275637 0.309017 0.34202 0.374606 0.406736 0.438371 0.469471 0.5 0.529919
0.559192 0.587785 0.615661 0.642787 0.66913 0.694658 0.719339 0.743144
0.766044 0.78801 0.809017 0.829037 0.848048 0.866025 0.882947 0.898794
0.913545 0.927184 0.939692 0.951056 0.961261 0.970295 0.978147 0.984808
0.990268 0.994522 0.997564 0.999391 1 0.999391 0.997564 0.994522 0.990268
0.984808 0.978148 0.970296 0.961262 0.951057 0.939693 0.927184 0.913546
0.898795 0.882948 0.866026 0.848049 0.829039 0.809018 0.788012 0.766046
0.743146 0.719341 0.69466 0.669132 0.642789 0.615663 0.587787 0.559195
0.529921 0.500002 0.469473 0.438373 0.406739 0.374609 0.342022 0.309019
0.27564 0.241924 0.207914 0.173651 0.139175 0.104531 0.0697588 0.0349018
2.53518e-06 -0.034897 -0.069754 -0.104526 -0.139171 -0.173645 -0.207909
-0.241919 -0.275635 -0.309014 -0.342017 -0.374604 -0.406734 -0.438368
-0.469469 -0.499997 -0.529917 -0.55919 -0.587783 -0.615659 -0.642785
-0.669128 -0.694656 -0.719338 -0.743143 -0.766042 -0.788009 -0.809015
-0.829036 -0.848046 -0.866024 -0.882946 -0.898792 -0.913544 -0.927183
-0.939691 -0.951055 -0.961261 -0.970295 -0.978147 -0.984807 -0.990268
-0.994521 -0.997564 -0.999391 -1 -0.999391 -0.997564 -0.994522 -0.990269
-0.984808 -0.978148 -0.970297 -0.961263 -0.951058 -0.939694 -0.927185
-0.913547 -0.898796 -0.88295 -0.866027 -0.848051 -0.82904 -0.809019
-0.788013 -0.766047 -0.743148 -0.719343 -0.694662 -0.669134 -0.642791
-0.615665 -0.587789 -0.559197 -0.529923 -0.500004 -0.469476 -0.438375
-0.406741 -0.374611 -0.342025 -0.309021 -0.275642 -0.241926 -0.207917
-0.173653 -0.139178 -0.104533 -0.0697611 -0.0349048 -5.07036e-06 0.0348942
0.0697515 0.104524 0.139168 0.173643 0.207906 0.241917 0.275632 0.309012
0.342015 0.374602 0.406732 0.438366 0.469467 0.499995 0.529914 0.559188
0.587781 0.615657 0.642783 0.669126 0.694654 0.719336 0.743141 0.766041
0.788007 0.809013 0.829034 0.848045 0.866023 0.882945 0.898791 0.913543
0.927182 0.939691 0.951055 0.96126 0.970294 0.978146 0.984807 0.990267
0.994521 0.997564 0.999391 1 0.999391 0.997564 0.994523 0.990269 0.984809
0.978149 0.970297 0.961264 0.951058 0.939695 0.927186 0.913548 0.898797
0.882951 0.866029 0.848052 0.829041 0.809021 0.788015 0.766049 0.743149
0.719345 0.694663 0.669136 0.642793 0.615667 0.587791 0.559199 0.529925
0.500006 0.469478 0.438377 0.406743 0.374613 0.342027 0.309024 0.275644
0.241929 0.207919 0.173656 0.139181 0.104535 0.0697637 0.0349069 7.60554e-06
-0.0348917 -0.0697485 -0.104521 -0.139166 -0.173641 -0.207904 -0.241914
-0.27563 -0.30901 -0.342013 -0.374599 -0.406729 -0.438364 -0.469465
-0.499993 -0.529913 -0.559186 -0.587779 -0.615656 -0.642782 -0.669124
-0.694652 -0.719334 -0.743139 -0.766039 -0.788005 -0.809012 -0.829033
-0.848044 -0.866022 -0.882944 -0.89879 -0.913542 -0.927181 -0.93969
-0.951054 -0.961259 -0.970294 -0.978146 -0.984806 -0.990267 -0.994521
-0.997563 -0.999391 -1 -0.999391 -0.997565 -0.994523 -0.990269 -0.984809
-0.978149 -0.970298 -0.961264 -0.95106 -0.939696 -0.927188 -0.913549
-0.898798 -0.882952 -0.86603 -0.848053 -0.829043 -0.809022 -0.788016
-0.76605 -0.743152 -0.719347 -0.694665 -0.669138 -0.642795 -0.615669
-0.587793 -0.559201 -0.529927 -0.500008 -0.46948 -0.438381 -0.406746
-0.374616 -0.34203 -0.309027 -0.275647 -0.241931 -0.207921 -0.173657
-0.139182 -0.104538 -0.0697671 -0.0349104 -0.98481;
#X coords 0 1 360 -1 400 280 1 0 0;
#X restore 187 125 graph;
#X obj 981 118 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 785 414 tabwrite demo_soundwave;
#X msg 980 219 \; demo_soundwave xticks 0 90 1;
#X msg 981 262 \; demo_soundwave yticks 0 0.1 5;
#X text 184 410 0;
#X text 340 430 Time (Seconds);
#X text 167 393 -1;
#X text 155 327 -0.5;
#X text 172 120 1;
#X text 160 187 0.5;
#X text 172 257 0;
#X text 103 253 Amplitude;
#X text 106 264 (Linear);
#X text 869 115 Initialization:;
#X connect 0 0 18 0;
#X connect 1 0 11 0;
#X connect 1 1 3 0;
#X connect 2 0 5 1;
#X connect 3 0 5 0;
#X connect 4 0 1 0;
#X connect 5 0 2 0;
#X connect 5 0 18 1;
#X connect 6 0 5 1;
#X connect 7 0 6 0;
#X connect 8 0 4 0;
#X connect 8 0 7 0;
#X connect 9 0 19 0;
#X connect 9 0 20 0;
#X connect 10 0 8 0;
#X connect 11 0 0 0;
#X connect 17 0 8 0;
#X connect 17 0 19 0;
#X coords 0 -1 1 1 500 350 2 100 100;
#X restore 792 125 pd demonstration.wave;
#N canvas 181 23 1259 697 frequency.test 0;
#X msg 773 156 \; pd dsp 1;
#X obj 710 131 trigger b b;
#X obj 635 526 osc~;
#X obj 635 595 dac~ 1 2;
#X obj 635 559 *~ 0.5;
#X msg 929 282 440;
#X obj 874 498 line;
#X msg 874 312 0 50 \, 0.5 50;
#X obj 710 238 trigger b b b b b, f 37;
#X msg 819 368 0 50;
#X obj 819 339 del 5000;
#X obj 764 397 del 5050;
#X obj 635 481 line;
#X obj 764 432 del 5;
#X msg 764 453 0.5 50;
#X text 906 497 Amp envelope;
#X text 962 296 1 Calibration tone for 5 sec;
#X obj 719 556 sel 22000;
#X obj 719 577 delay 100;
#X msg 719 598 0 100;
#X obj 105 107 bng 15 250 50 0 start_test empty empty 17 7 0 10 -262144
-1 -1;
#X text 126 106 Frequency Test;
#X obj 236 107 nbx 5 15 -1e+37 1e+37 0 0 empty current_frequency empty
15 10 0 10 -262144 -1 -1 0 256;
#X obj 458 534 send current_frequency;
#X msg 635 456 0 \, 22000 30000;
#X obj 709 98 bng 15 250 50 0 empty start_test empty 17 7 0 10 -262144
-1 -1;
#X msg 774 598 \; pd dsp 0;
#X text 779 553 silence oscillator & turn off dsp when done;
#X obj 710 152 del 100;
#X text 296 106 Current Frequency (Hz);
#X connect 1 0 28 0;
#X connect 1 1 0 0;
#X connect 2 0 4 0;
#X connect 4 0 3 0;
#X connect 4 0 3 1;
#X connect 5 0 2 0;
#X connect 5 0 23 0;
#X connect 6 0 4 1;
#X connect 7 0 6 0;
#X connect 8 1 11 0;
#X connect 8 2 10 0;
#X connect 8 3 7 0;
#X connect 8 4 5 0;
#X connect 9 0 6 0;
#X connect 10 0 9 0;
#X connect 11 0 13 0;
#X connect 11 0 24 0;
#X connect 12 0 2 0;
#X connect 12 0 17 0;
#X connect 12 0 23 0;
#X connect 13 0 14 0;
#X connect 14 0 6 0;
#X connect 17 0 18 0;
#X connect 18 0 19 0;
#X connect 18 0 26 0;
#X connect 19 0 6 0;
#X connect 24 0 12 0;
#X connect 25 0 1 0;
#X connect 28 0 8 0;
#X coords 0 -1 1 1 340 30 2 100 100;
#X restore 875 744 pd frequency.test;
#N canvas 2240 -72 1379 796 linear_log 0;
#X msg 1140 208 100 5000;
#X obj 1140 250 t f f;
#X obj 1140 273 tabwrite linear;
#N canvas 0 22 450 278 (subpatch) 0;
#X array linear 100 float 3;
#A 0 0.8 1.6 2.8 3.6 4.8 5.6 6.8 7.6 8.8 9.6 10.8 11.6 12.8 13.6 14.8
15.6 16.8 17.6 18.8 19.6 20.8 21.6 22.8 23.6 24.8 25.6 26.8 27.6 28.8
29.6 30.8 31.6 32.8 33.6 34.8 35.6 36.8 37.6 38.8 39.6 40.8 41.6 42.8
43.6 44.8 45.6 46.8 47.6 48.8 49.6 50.8 51.6 52.8 53.6 54.8 55.6 56.8
57.6 58.8 59.6 60.8 61.6 62.8 63.6 64.8 65.6 66.8 67.6 68.8 69.6 70.8
71.6 72.8 73.6 74.8 75.6 76.8 77.6 78.8 79.6 80.8 81.6 82.8 83.6 84.8
85.6 86.8 87.6 88.8 89.6 90.8 91.6 92.8 93.6 94.8 95.6 96.8 97.6 98.8
100;
#X coords 0 100 100 0 200 140 1 0 0;
#X restore 178 121 graph;
#X msg 1256 256 \; linear yticks 0 25 5;
#X obj 1256 206 loadbang;
#X msg 1140 428 100 5000;
#N canvas 0 22 450 278 (subpatch) 0;
#X array logarithmic 100 float 3;
#A 0 0.64 2.56 7.84 12.96 23.04 31.36 46.24 57.76 77.44 92.16 116.64
134.56 163.84 184.96 219.04 243.36 282.24 309.76 353.44 384.16 432.64
466.56 519.84 556.96 615.04 655.36 718.24 761.76 829.44 876.16 948.64
998.56 1075.84 1128.96 1211.04 1267.36 1354.24 1413.76 1505.44 1568.16
1664.64 1730.56 1831.84 1900.96 2007.04 2079.36 2190.24 2265.76 2381.44
2460.16 2580.64 2662.56 2787.84 2872.96 3003.04 3091.36 3226.24 3317.76
3457.44 3552.16 3696.64 3794.56 3943.84 4044.96 4199.04 4303.36 4462.24
4569.76 4733.44 4844.16 5012.64 5126.56 5299.84 5416.96 5595.04 5715.36
5898.24 6021.76 6209.44 6336.16 6528.64 6658.56 6855.84 6988.96 7191.04
7327.36 7534.24 7673.76 7885.44 8028.16 8244.64 8390.56 8611.84 8760.96
8987.04 9139.36 9370.24 9525.76 9761.44 10000;
#X coords 0 10000 100 0 200 140 2 0 0;
#X restore 462 120 graph;
#X obj 1256 426 loadbang;
#X obj 1140 515 t f b;
#X obj 1192 541 f;
#X obj 1140 493 *;
#X obj 1140 470 t f f f;
#X obj 1140 566 tabwrite logarithmic;
#X obj 1140 449 line 0;
#X obj 1140 229 line 0;
#X msg 1256 447 \; logarithmic xticks 0 25 5;
#X msg 1256 479 \; logarithmic yticks 0 500 5;
#X msg 1256 225 \; linear xticks 0 25 10;
#X text 457 262 0;
#X text 220 262 25;
#X text 269 262 50;
#X text 319 262 75;
#X text 364 262 100;
#X text 449 250 0;
#X text 443 216 25;
#X text 443 180 50;
#X text 443 147 75;
#X text 438 114 100;
#X text 173 263 0;
#X text 165 253 0;
#X text 159 219 25;
#X text 159 183 50;
#X text 159 148 75;
#X text 154 116 100;
#X text 500 262 25;
#X text 549 261 50;
#X text 599 261 75;
#X text 644 261 100;
#X text 103 173 Perceived;
#X text 103 185 Level;
#X text 383 173 Perceived;
#X text 383 185 Level;
#X text 211 278 Sound Pressure Level;
#X text 491 278 Sound Pressure Level;
#X connect 0 0 15 0;
#X connect 1 0 2 0;
#X connect 1 1 2 1;
#X connect 5 0 18 0;
#X connect 5 0 4 0;
#X connect 6 0 14 0;
#X connect 8 0 16 0;
#X connect 8 0 17 0;
#X connect 9 0 13 0;
#X connect 9 1 10 0;
#X connect 10 0 13 1;
#X connect 11 0 9 0;
#X connect 12 0 11 0;
#X connect 12 1 11 1;
#X connect 12 2 10 1;
#X connect 14 0 12 0;
#X connect 15 0 1 0;
#X coords 0 -1 1 1 570 200 2 100 100;
#X restore 1295 546 pd linear_log;
#N canvas 2882 363 699 439 INTRODUCTION 0;
#X text 5 7 INTRODUCTION;
#X text 6 29 Sound waves are created through the movement of a vibrating
mass. An object vibrates enough to make sound through an excitation
- this excitation could be air passing over vocal cords \, a plectrum
(pick) plucking a guitar string \, a stick hitting a drum head \, two
hands snapping a carrot in half \, or a rock hitting pavement. This
vibration creates a variation in the pressure of air molecules (or
water molecules \, though not as easily) that travels as a WAVE that
\, when it reaches our ears \, the brain amazingly interprets as sound!
, f 112;
#X text 6 99 How does this all work? Let’s use a guitar string as
an example as a vibrating mass. A guitar pick pulls the string back
\, then releases it and the string starts to vibrate. The first movement
of the vibration is a movement of the string opposite to the direction
the pick pulled the strong. This movement pushes the air molecules
around it. Sometimes these molecules are pushed far \, sometimes pushed
just a little. Once the surrounding molecules get pushed \, a build-up
of pressure (caused by an increase in the number of molecules for the
area) results. This pressure effects all of the molecules around the
vibrating mass. As the pressure increases around the string \, the
molecules increase the pressure of the molecules surrounding them.
This pushes other molecules out away from the string. This causes a
chain reaction that produces an increase in pressure that travels all
the way to your ear drums (or to a microphone) \, with some loss of
energy. This pressure pushes your ear drum in \, directly analogous
to the string vibration. This increase in pressure on the ear drum
is known as the sound wave’s COMPRESSION. Back at the string \, the
string can only move so far in one direction \, and so it will then
swing back the other way. This leaves empty space with lower pressure
\, and all molecules attract to areas with a lower pressure \, so they
will fill in the space where the string was \, and in fact they travel
past where the space they initially had occupied. This causes an opposite
chain reaction \, where all of the molecules \, including those pushing
against your ear drum \, reverse direction to seek an area of less
pressure \, and all involved \, including the ear drum \, swing past
the place of initial rest \, and in fact build up pressure in the opposite
direction. We call this the wave’s RAREFACTION. If the string is
plucked hard enough \, the cycle repeats again as the string swings
back. This cycle of increasing and then decreasing of pressure at our
ear drum is astoundingly interpreted by our brains as sound!, f 112
;
#X text 6 319 We typically can’t see sound move in the air normally
\, so we graph sounds such as you see below. The vertical/y-axis of
the graph maps the change in air pressure. The equilibrium of air pressure
(known as the ATMOSPHERIC PRESSURE) is at the center of the axis \,
which we mark (arbitrarily) as 0 The increase in pressure \, the wave’s
compression \, is the area above the equilibrium on the graph \, and
we use positive numbers to represent this. The wave’s rarefaction
is represented by the area below the 0 point \, and we use negative
numbers to represent this portion of the wave., f 112;
#X restore 139 212 pd INTRODUCTION;
#X text 101 133 In the modules below you will explore two fundamental
components of a sound wave: it's amplitude and it's frequency. Click
on a module (a box labelled "pd" with a section title) to read about
these aspects and interact with hands on tools which will allow you
to see these sound aspects in action. Additionally you can control
a sound wave generator to the right of this text \, allowing you to
manipulate the generator's frequency and amplitude., f 103;
#X connect 0 0 1 0;
#X connect 1 0 6 0;
#X connect 1 0 15 0;
#X connect 2 0 1 1;
#X connect 7 0 3 0;
#X connect 8 0 2 0;
#X connect 9 0 12 0;
#X connect 10 0 8 0;
#X connect 11 0 0 0;
#X connect 12 0 30 0;
#X connect 30 0 11 0;
#X coords 0 -1 1 1 1200 450 2 100 100;
