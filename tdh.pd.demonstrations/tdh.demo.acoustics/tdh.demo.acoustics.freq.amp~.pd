#N canvas 1440 -209 1920 1035 10;
#X obj -418 307 osc~ 440;
#X obj -418 393 *~;
#X floatatom -341 314 5 0 1 0 - - -, f 5;
#X obj 1552 -100 tdh.util.scope~;
#X text -340 205 Frequency;
#X text -330 271 Amplitude (0.0-1.0);
#X obj -418 532 send~ sig1;
#X obj 2072 -146 receive~ sig1;
#X obj -397 347 / 127;
#X obj -338 224 hsl 128 15 0 127 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X obj -341 290 hsl 128 15 0 127 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X obj -341 243 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0
10 -262144 -1 -1 0 256;
#X obj -415 238 / 127;
#X text -628 349 This brings slider's range to 0.0-1.0;
#X text -648 233 This brings slider's range to 0.0-1.0;
#X obj -474 503 outlet~;
#X text -544 533 Send to oscilloscope;
#X text -615 503 Send out the subpatch;
#X text -598 190 Sliders output whole numbers from 0-127;
#X text -337 107 Frequency & Amplitude;
#X text -343 145 Parameters can either be set through;
#X text -343 159 sliders or typing/dragging in number;
#X text -343 171 boxes;
#X text -653 263 This brings slider's range to 0-20000 \,;
#X text -654 276 which is the range of human hearing for;
#X text -656 288 frequency. Then we send that value to;
#X text -654 301 the left inlet of [osc~];
#X text -646 381 We can control a signal's amplitude;
#X text -646 395 by scaling it from 0-1 by multiplying;
#X text -648 409 it by a range of number from 0-1;
#X obj -415 270 * 20000;
#X text 101 102 AMPLITUDE AND FREQUENCY;
#N canvas 0 22 450 278 (subpatch) 0;
#X array linear-\$0 100 float 3;
#A 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0;
#X coords 0 0 100 100 200 140 1 0 0;
#X restore 1602 396 graph;
#X text 102 158 Sound waves are created through the movement of a vibrating
mass. An object vibrates enough to make sound through and excitation
\; this could be air passing over vocal cords \, a plectrum (pick)
plucking a guitar string \, a stick hitting a drum head \, two hands
snapping a carrot in half \, or a rock hitting pavement., f 112;
#N canvas 1440 -209 1920 1035 demonstration.wave 0;
#X floatatom 690 375 0 0 0 0 - - -;
#X obj 845 296 trigger f f;
#X obj 945 383 + 1;
#X obj 908 347 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 845 237 line;
#X obj 908 382 f 0;
#X msg 945 348 0;
#X obj 945 270 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 845 216 0 \, 1000 10000;
#X obj 980 188 loadbang;
#X obj 845 188 loadbang;
#X obj 690 347 expr sin(2 * 3.14159 * $f1 / 360);
#X text 276 410 0.5;
#X text 376 410 1;
#X text 476 410 1.5;
#X text 578 410 2;
#N canvas 0 22 450 278 (subpatch) 0;
#X array demo_soundwave 360 float 3;
#A 0 0.0348995 0.0697564 0.104528 0.139173 0.173648 0.207912 0.241922
0.275637 0.309017 0.34202 0.374606 0.406736 0.438371 0.469471 0.5 0.529919
0.559192 0.587785 0.615661 0.642787 0.66913 0.694658 0.719339 0.743144
0.766044 0.78801 0.809017 0.829037 0.848048 0.866025 0.882947 0.898794
0.913545 0.927184 0.939692 0.951056 0.961261 0.970295 0.978147 0.984808
0.990268 0.994522 0.997564 0.999391 1 0.999391 0.997564 0.994522 0.990268
0.984808 0.978148 0.970296 0.961262 0.951057 0.939693 0.927184 0.913546
0.898795 0.882948 0.866026 0.848049 0.829039 0.809018 0.788012 0.766046
0.743146 0.719341 0.69466 0.669132 0.642789 0.615663 0.587787 0.559195
0.529921 0.500002 0.469473 0.438373 0.406739 0.374609 0.342022 0.309019
0.27564 0.241924 0.207914 0.173651 0.139175 0.104531 0.0697588 0.0349018
2.53518e-06 -0.034897 -0.069754 -0.104526 -0.139171 -0.173645 -0.207909
-0.241919 -0.275635 -0.309014 -0.342017 -0.374604 -0.406734 -0.438368
-0.469469 -0.499997 -0.529917 -0.55919 -0.587783 -0.615659 -0.642785
-0.669128 -0.694656 -0.719338 -0.743143 -0.766042 -0.788009 -0.809015
-0.829036 -0.848046 -0.866024 -0.882946 -0.898792 -0.913544 -0.927183
-0.939691 -0.951055 -0.961261 -0.970295 -0.978147 -0.984807 -0.990268
-0.994521 -0.997564 -0.999391 -1 -0.999391 -0.997564 -0.994522 -0.990269
-0.984808 -0.978148 -0.970297 -0.961263 -0.951058 -0.939694 -0.927185
-0.913547 -0.898796 -0.88295 -0.866027 -0.848051 -0.82904 -0.809019
-0.788013 -0.766047 -0.743148 -0.719343 -0.694662 -0.669134 -0.642791
-0.615665 -0.587789 -0.559197 -0.529923 -0.500004 -0.469476 -0.438375
-0.406741 -0.374611 -0.342025 -0.309021 -0.275642 -0.241926 -0.207917
-0.173653 -0.139178 -0.104533 -0.0697611 -0.0349048 -5.07036e-06 0.0348942
0.0697515 0.104524 0.139168 0.173643 0.207906 0.241917 0.275632 0.309012
0.342015 0.374602 0.406732 0.438366 0.469467 0.499995 0.529914 0.559188
0.587781 0.615657 0.642783 0.669126 0.694654 0.719336 0.743141 0.766041
0.788007 0.809013 0.829034 0.848045 0.866023 0.882945 0.898791 0.913543
0.927182 0.939691 0.951055 0.96126 0.970294 0.978146 0.984807 0.990267
0.994521 0.997564 0.999391 1 0.999391 0.997564 0.994523 0.990269 0.984809
0.978149 0.970297 0.961264 0.951058 0.939695 0.927186 0.913548 0.898797
0.882951 0.866029 0.848052 0.829041 0.809021 0.788015 0.766049 0.743149
0.719345 0.694663 0.669136 0.642793 0.615667 0.587791 0.559199 0.529925
0.500006 0.469478 0.438377 0.406743 0.374613 0.342027 0.309024 0.275644
0.241929 0.207919 0.173656 0.139181 0.104535 0.0697637 0.0349069 7.60554e-06
-0.0348917 -0.0697485 -0.104521 -0.139166 -0.173641 -0.207904 -0.241914
-0.27563 -0.30901 -0.342013 -0.374599 -0.406729 -0.438364 -0.469465
-0.499993 -0.529913 -0.559186 -0.587779 -0.615656 -0.642782 -0.669124
-0.694652 -0.719334 -0.743139 -0.766039 -0.788005 -0.809012 -0.829033
-0.848044 -0.866022 -0.882944 -0.89879 -0.913542 -0.927181 -0.93969
-0.951054 -0.961259 -0.970294 -0.978146 -0.984806 -0.990267 -0.994521
-0.997563 -0.999391 -1 -0.999391 -0.997565 -0.994523 -0.990269 -0.984809
-0.978149 -0.970298 -0.961264 -0.95106 -0.939696 -0.927188 -0.913549
-0.898798 -0.882952 -0.86603 -0.848053 -0.829043 -0.809022 -0.788016
-0.76605 -0.743152 -0.719347 -0.694665 -0.669138 -0.642795 -0.615669
-0.587793 -0.559201 -0.529927 -0.500008 -0.46948 -0.438381 -0.406746
-0.374616 -0.34203 -0.309027 -0.275647 -0.241931 -0.207921 -0.173657
-0.139182 -0.104538 -0.0697671 -0.0349104 -0.98481;
#X coords 0 1 360 -1 400 280 1 0 0;
#X restore 187 125 graph;
#X obj 981 118 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 785 414 tabwrite demo_soundwave;
#X msg 980 219 \; demo_soundwave xticks 0 90 1;
#X msg 981 262 \; demo_soundwave yticks 0 0.1 5;
#X text 184 410 0;
#X text 340 430 Time (Seconds);
#X text 167 393 -1;
#X text 155 327 -0.5;
#X text 172 120 1;
#X text 160 187 0.5;
#X text 172 257 0;
#X text 103 253 Amplitude;
#X text 106 264 (Linear);
#X text 869 115 Initialization:;
#X connect 0 0 18 0;
#X connect 1 0 11 0;
#X connect 1 1 3 0;
#X connect 2 0 5 1;
#X connect 3 0 5 0;
#X connect 4 0 1 0;
#X connect 5 0 2 0;
#X connect 5 0 18 1;
#X connect 6 0 5 1;
#X connect 7 0 6 0;
#X connect 8 0 4 0;
#X connect 8 0 7 0;
#X connect 9 0 19 0;
#X connect 9 0 20 0;
#X connect 10 0 8 0;
#X connect 11 0 0 0;
#X connect 17 0 8 0;
#X connect 17 0 19 0;
#X coords 0 -1 1 1 500 350 2 100 100;
#X restore 792 225 pd demonstration.wave;
#X text 102 208 Once this mass starts vibrating \, it pushes the air
molecules around it. Sometimes these molecules are pushed far \, sometimes
pushed just a little. Once the surround molecules get pushed \, they
collide with the molecules around them. Those molecules get pushed
\, but not as hard as the molecules surrounding the vibrating mass.
The second set of molecules in turn collide with the molecules around
THEM \, with some loss of strength. This process repeats until the
molecules next to you ear drums (next to a microphone diaphragm) gets
pushed \, increasing the pressure of molecules. Now molecules tend
to want to go where there is less pressure \, i.e. where there is less
molecules. Once a molecule is pushed \, it will attempt to return where
it originally was \, because right now there is less pressure/more
room where they *were*. They often over shoot this target by a bit.
However \, as long as the vibrating mass stops vibrating \, the molecule
will eventually settle to where it originally was. This molecule movement
back causes your ear drum to also be relieved of pressure \, and it
also over shoots its target a little bit. Thus a single vibration will
cause this chain of events to happen \, and as long as it doesn’t
lose too much energy in the process \, will cause your ear drum to
move. If the vibrating body keeps vibrating at least more than 20 times
a second \, the ear hears a sound!, f 112;
#X text 101 136 INTRODUCTION;
#X text 101 373 AMPLITUDE;
#X text 102 398 We obviously can’t see sound move in the air normally
\, so we graph sounds such as you see below. We arbitrarily mark “0”
on the vertical/y axis as the ear drum’s starting point. The push
on the ear drum ramps up the y axis to a maximum \, which we will arbitrarily
call “1” \, and then it ramps down back to 0 \, overshoots the
original position \, and if the energy in the sound wave is strong
enough \, the ear drum and molecules may push as far beyond the original
point as it had been initially pushed. This is dependent on the amount
of energy in the signal. All natural-occurring sounds will eventually
lose energy and return to 0 We call the push above 0 the wave’s COMPRESSION
\, while the dip below 0 is the wave’s RAREFACTION. The displacement
caused by the wave is known as the wave’s AMPLITUDE. We will often
refer to the wave’s amplitude by its average between its compression
and rarefaction \, taking the absolute value of the rarefaction. The
wave you see below has an amplitude of 1, f 112;
#X text 102 518 Amplitude represents the change in sound pressure level
caused by the movement of molecules in reaction to a vibrating element.
Sound pressure level is one of the many factors that effects how LOUD
we hear a sound. There are many other factors that affect the loudness
of a sound \, and that is beyond the scope of this text. Later we will
discuss another way to calculate the intensity/loudness of a sound
that is more closely aligned with how we hear \, called the DECIBEL.
, f 112;
#X text 101 593 FREQUENCY;
#X text 102 618 The horizontal/x axis is labelled “Time”. Therefore
this graph marks the change in amplitude (displacement of molecules/ear
drum) over time. Time has a very strong effect on our perception of
a sound. The change in amplitude over time is a major signifier in
how we determine a sound’s source (more about THAT in the “Envelope”
section). The other element that is highly dependent on time is the
sound’s pitch. Pitch is a purely perceptual (i.e. not scientifically
quantifiable) element of sound that allows us to order sounds as higher
or lower in pitch. This is most easily noticed in music: some notes
are higher (such as flute playing a note) while other notes are lower
(a tuba playing a note). This also exists with natural sounds. If you
hit two hollowed out logs of different sizes with a branch \, you might
hear a pitch difference between the two., f 112;
#X text 102 718 The element of pitch is primarily (but not entirely)
tied to the *quantifiable* element of a sound wave known as FREQUENCY.
When a wave’s amplitude makes a full compression and rarefaction
and then returns to 0 \, we call this a wave’s CYCLE. A wave’s
frequency is how many full cycles it completes in one second. We use
the label Hertz (Hz) to signify the value we are discuss is the frequency
(cycles per second) of a wave (or really \, they frequency of ANY regularly
repeating element in nature). Look at the graph and trace an imaginary
line up from the 1 second mark \, and then check how many full cycles
of the sound wave happen in that one second. You will notice that only
one full cycle is completed in one second. Therefore this sound wave
has a frequency of 1 Hz. You will notice that the graph has two full
cycles depicted \, over 2 seconds. If the graph instead represented
1 whole second \, but still had the two cycles \, then we would say
the frequency is 2 Hz., f 112;
#X text 102 828 The human ear has limits in amplitude and frequency
to what it can hear. For frequency \, the human ear can only hear approximately
between 20 Hz and 20 \, 0 Hz. Some people can hear a little bit higher
and a little bit lower \, particularly younger people \; as we get
older \, the range shrinks a bit. You playback system also determines
what frequencies you can hear \; your headphones may only playback
20 Hz to 18 \, 0 Hz (hopefully your system can playback at least 20-20
\, 0 Hz \, but it isn’t always guaranteed!). You can test your own
ear’s frequency perception (or your playback system’s range) using
the controls below. First you must go to the "Pd Window" (Window->Pd
Window) and click the toggle next to "DSP". You may also need to set
your audio output (Media->Audio Settings...) and set the "Output Devices"
to your built in speakers \, headphones \, or audio interface. You
will hear a tone for 5 secs \, which you should adjust so that you
can hear that tone well \, then the test will begin., f 112;
#X connect 0 0 1 0;
#X connect 1 0 6 0;
#X connect 1 0 15 0;
#X connect 2 0 1 1;
#X connect 7 0 3 0;
#X connect 8 0 2 0;
#X connect 9 0 12 0;
#X connect 10 0 8 0;
#X connect 11 0 0 0;
#X connect 12 0 30 0;
#X connect 30 0 11 0;
#X coords 0 -1 1 1 1200 450 2 100 100;
