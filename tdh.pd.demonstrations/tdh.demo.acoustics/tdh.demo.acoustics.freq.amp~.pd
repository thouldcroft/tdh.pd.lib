#N canvas 1842 120 1412 855 10;
#X obj -418 307 osc~ 440;
#X obj -418 393 *~;
#X floatatom -341 314 5 0 1 0 - - -, f 5;
#X obj 1443 -114 tdh.util.scope~;
#X text -340 205 Frequency;
#X text -330 271 Amplitude (0.0-1.0);
#X obj -418 532 send~ sig1;
#X obj 2072 -146 receive~ sig1;
#X obj -397 347 / 127;
#X obj -338 224 hsl 128 15 0 127 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X obj -341 290 hsl 128 15 0 127 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X obj -341 243 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0
10 -262144 -1 -1 0 256;
#X obj -415 238 / 127;
#X text -628 349 This brings slider's range to 0.0-1.0;
#X text -648 233 This brings slider's range to 0.0-1.0;
#X obj -474 503 outlet~;
#X text -544 533 Send to oscilloscope;
#X text -615 503 Send out the subpatch;
#X text -598 190 Sliders output whole numbers from 0-127;
#X text -337 107 Frequency & Amplitude;
#X text -343 145 Parameters can either be set through;
#X text -343 159 sliders or typing/dragging in number;
#X text -343 171 boxes;
#X text -653 263 This brings slider's range to 0-20000 \,;
#X text -654 276 which is the range of human hearing for;
#X text -656 288 frequency. Then we send that value to;
#X text -654 301 the left inlet of [osc~];
#X text -646 381 We can control a signal's amplitude;
#X text -646 395 by scaling it from 0-1 by multiplying;
#X text -648 409 it by a range of number from 0-1;
#X obj -415 270 * 20000;
#X text 101 102 AMPLITUDE AND FREQUENCY;
#N canvas 181 23 1259 697 frequency.test 0;
#X msg 773 156 \; pd dsp 1;
#X obj 710 131 trigger b b;
#X obj 635 526 osc~;
#X obj 635 595 dac~ 1 2;
#X obj 635 559 *~ 0.5;
#X msg 929 282 440;
#X obj 874 498 line;
#X msg 874 312 0 50 \, 0.5 50;
#X obj 710 238 trigger b b b b b, f 37;
#X msg 819 368 0 50;
#X obj 819 339 del 5000;
#X obj 764 397 del 5050;
#X obj 635 481 line;
#X obj 764 432 del 5;
#X msg 764 453 0.5 50;
#X text 906 497 Amp envelope;
#X text 962 296 1 Calibration tone for 5 sec;
#X obj 719 556 sel 22000;
#X obj 719 577 delay 100;
#X msg 719 598 0 100;
#X obj 105 107 bng 15 250 50 0 start_test empty empty 17 7 0 10 -262144
-1 -1;
#X text 126 106 Frequency Test;
#X obj 236 107 nbx 5 15 -1e+37 1e+37 0 0 empty current_frequency empty
15 10 0 10 -262144 -1 -1 0 256;
#X obj 458 534 send current_frequency;
#X msg 635 456 0 \, 22000 30000;
#X obj 709 98 bng 15 250 50 0 empty start_test empty 17 7 0 10 -262144
-1 -1;
#X msg 774 598 \; pd dsp 0;
#X text 779 553 silence oscillator & turn off dsp when done;
#X obj 710 152 del 100;
#X text 296 106 Current Frequency (Hz);
#X connect 1 0 28 0;
#X connect 1 1 0 0;
#X connect 2 0 4 0;
#X connect 4 0 3 0;
#X connect 4 0 3 1;
#X connect 5 0 2 0;
#X connect 5 0 23 0;
#X connect 6 0 4 1;
#X connect 7 0 6 0;
#X connect 8 1 11 0;
#X connect 8 2 10 0;
#X connect 8 3 7 0;
#X connect 8 4 5 0;
#X connect 9 0 6 0;
#X connect 10 0 9 0;
#X connect 11 0 13 0;
#X connect 11 0 24 0;
#X connect 12 0 2 0;
#X connect 12 0 17 0;
#X connect 12 0 23 0;
#X connect 13 0 14 0;
#X connect 14 0 6 0;
#X connect 17 0 18 0;
#X connect 18 0 19 0;
#X connect 18 0 26 0;
#X connect 19 0 6 0;
#X connect 24 0 12 0;
#X connect 25 0 1 0;
#X connect 28 0 8 0;
#X coords 0 -1 1 1 340 30 2 100 100;
#X restore 875 744 pd frequency.test;
#N canvas 2240 -72 1379 796 linear_log 0;
#X msg 1140 208 100 5000;
#X obj 1140 250 t f f;
#X obj 1140 273 tabwrite linear;
#N canvas 0 22 450 278 (subpatch) 0;
#X array linear 100 float 3;
#A 0 0.8 1.6 2.8 3.6 4.8 5.6 6.8 7.6 8.8 9.6 10.8 11.6 12.8 13.6 14.8
15.6 16.8 17.6 18.8 19.6 20.8 21.6 22.8 23.6 24.8 25.6 26.8 27.6 28.8
29.6 30.8 31.6 32.8 33.6 34.8 35.6 36.8 37.6 38.8 39.6 40.8 41.6 42.8
43.6 44.8 45.6 46.8 47.6 48.8 49.6 50.8 51.6 52.8 53.6 54.8 55.6 56.8
57.6 58.8 59.6 60.8 61.6 62.8 63.6 64.8 65.6 66.8 67.6 68.8 69.6 70.8
71.6 72.8 73.6 74.8 75.6 76.8 77.6 78.8 79.6 80.8 81.6 82.8 83.6 84.8
85.6 86.8 87.6 88.8 89.6 90.8 91.6 92.8 93.6 94.8 95.6 96.8 97.6 98.8
100;
#X coords 0 100 100 0 200 140 1 0 0;
#X restore 178 121 graph;
#X msg 1256 256 \; linear yticks 0 25 5;
#X obj 1256 206 loadbang;
#X msg 1140 428 100 5000;
#N canvas 0 22 450 278 (subpatch) 0;
#X array logarithmic 100 float 3;
#A 0 0.64 2.56 7.84 12.96 23.04 31.36 46.24 57.76 77.44 92.16 116.64
134.56 163.84 184.96 219.04 243.36 282.24 309.76 353.44 384.16 432.64
466.56 519.84 556.96 615.04 655.36 718.24 761.76 829.44 876.16 948.64
998.56 1075.84 1128.96 1211.04 1267.36 1354.24 1413.76 1505.44 1568.16
1664.64 1730.56 1831.84 1900.96 2007.04 2079.36 2190.24 2265.76 2381.44
2460.16 2580.64 2662.56 2787.84 2872.96 3003.04 3091.36 3226.24 3317.76
3457.44 3552.16 3696.64 3794.56 3943.84 4044.96 4199.04 4303.36 4462.24
4569.76 4733.44 4844.16 5012.64 5126.56 5299.84 5416.96 5595.04 5715.36
5898.24 6021.76 6209.44 6336.16 6528.64 6658.56 6855.84 6988.96 7191.04
7327.36 7534.24 7673.76 7885.44 8028.16 8244.64 8390.56 8611.84 8760.96
8987.04 9139.36 9370.24 9525.76 9761.44 10000;
#X coords 0 10000 100 0 200 140 2 0 0;
#X restore 462 120 graph;
#X obj 1256 426 loadbang;
#X obj 1140 515 t f b;
#X obj 1192 541 f;
#X obj 1140 493 *;
#X obj 1140 470 t f f f;
#X obj 1140 566 tabwrite logarithmic;
#X obj 1140 449 line 0;
#X obj 1140 229 line 0;
#X msg 1256 447 \; logarithmic xticks 0 25 5;
#X msg 1256 479 \; logarithmic yticks 0 500 5;
#X msg 1256 225 \; linear xticks 0 25 10;
#X text 457 262 0;
#X text 220 262 25;
#X text 269 262 50;
#X text 319 262 75;
#X text 364 262 100;
#X text 449 250 0;
#X text 443 216 25;
#X text 443 180 50;
#X text 443 147 75;
#X text 438 114 100;
#X text 173 263 0;
#X text 165 253 0;
#X text 159 219 25;
#X text 159 183 50;
#X text 159 148 75;
#X text 154 116 100;
#X text 500 262 25;
#X text 549 261 50;
#X text 599 261 75;
#X text 644 261 100;
#X text 103 173 Perceived;
#X text 103 185 Level;
#X text 383 173 Perceived;
#X text 383 185 Level;
#X text 211 278 Sound Pressure Level;
#X text 491 278 Sound Pressure Level;
#X connect 0 0 15 0;
#X connect 1 0 2 0;
#X connect 1 1 2 1;
#X connect 5 0 18 0;
#X connect 5 0 4 0;
#X connect 6 0 14 0;
#X connect 8 0 16 0;
#X connect 8 0 17 0;
#X connect 9 0 13 0;
#X connect 9 1 10 0;
#X connect 10 0 13 1;
#X connect 11 0 9 0;
#X connect 12 0 11 0;
#X connect 12 1 11 1;
#X connect 12 2 10 1;
#X connect 14 0 12 0;
#X connect 15 0 1 0;
#X coords 0 -1 1 1 570 200 2 100 100;
#X restore 1295 546 pd linear_log;
#X text 101 133 In the modules below you will explore two fundamental
components of a sound wave: it's amplitude and it's frequency. Click
on a module (a box labelled "pd" with a section title) to read about
these aspects and interact with hands on tools which will allow you
to see these sound aspects in action. Additionally you can control
a sound wave generator to the right of this text \, allowing you to
manipulate the generator's frequency and amplitude., f 75;
#N canvas 2117 136 1089 587 SOUND_PRESSURE_LEVEL 1;
#X text 4 3 If you have ever plucked a guitar string or hit a drum
\, you likely noticed that the harder you hit or plucked resulted in
a louder sound. While if you plucked or hit the objects with less intensity
\, it might have sounded softer. When a string is plucked harder \,
this means when it vibrates it moves farther from its resting point
(the point where it sits when not vibrating). This causes the string
to push the air molecules around it farther \, creating a greater pressure
build up. In our sound wave graph we map the amount of pressure above
the atmospheric pressure caused by the vibrating object in the y axis
\, depicting the wave’s compression and rarefaction. This aspect
of the wave is known as the wave’s AMPLITUDE. When we talk about
amplitude \, we often graph it abstractly between +1 and -1 \, at which
these points are the MAXIMUM points that some system can have. This
system can be our computer \, a recording studio \, or our ear \, it
all depends on the context!, f 73;
#X text 4 173 When mapping the sound pressure level to a scale of +1
to -1 \, we call it LINEAR AMPLITUDE. It makes using computers to calculate
it very easy \, and it also makes a lot of sense when we manipulate
it (as we will see). For example \, we can set the sound wave to half
its amplitude by setting the amplitude to 0.5 (or dividing all of the
amplitude points by 2). When we discuss the amplitude of a wave at
a certain point \, we talk about the absolute value max peak of a cycle.
For example if a wave goes from +0.7 to -0.9 \, we are going to take
the absolute value of those points and report the peak \, so this example
wave would have an amplitude of 0.9., f 73;
#X text 4 293 To the right is a small controllable sound generator.
Press the “On” button to turn the generator on and adjust the wave’s
amplitude with the fader labelled “AMP” by clicking and dragging
on the middle line. You will see the wave displayed next to the fader.
As the amplitude increases from 0 \, the sound will get louder. At
1 the wave is as loud as your computer can handle \, so going above
this level will create a very distorted sound., f 73;
#X restore 286 609 pd SOUND_PRESSURE_LEVEL \, AMPLITUDE \, AND THE
DECIBEL;
#X connect 0 0 1 0;
#X connect 1 0 6 0;
#X connect 1 0 15 0;
#X connect 2 0 1 1;
#X connect 7 0 3 0;
#X connect 8 0 2 0;
#X connect 9 0 12 0;
#X connect 10 0 8 0;
#X connect 11 0 0 0;
#X connect 12 0 30 0;
#X connect 30 0 11 0;
#X coords 0 -1 1 1 1100 450 2 100 100;
