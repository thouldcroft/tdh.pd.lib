#N canvas 21 23 1413 855 10;
#X obj 759 444 tdh.util.scope~;
#X obj 756 12 receive~ sig4;
#X obj 782 277 bng 15 250 50 0 \$0-harmonicspec_a empty Harmonic_Spectrum_B_(Sawtooth_Wave)
17 7 0 10 -4032 -1 -1;
#X obj 1304 266 bng 15 250 50 0 empty \$0-harmonicspec_a empty 17 7
0 10 -262144 -1 -1;
#X obj 782 243 bng 15 250 50 0 \$0-sine empty Sine_Wave 17 7 0 10 -4032
-1 -1;
#X obj 1302 157 bng 15 250 50 0 empty \$0-harmonicspec_b empty 17 7
0 10 -262144 -1 -1;
#X obj 782 260 bng 15 250 50 0 \$0-harmonicspec_b empty Harmonic_Spectrum_A_(Triangle_Wave)
17 7 0 10 -4032 -1 -1;
#X obj 782 294 bng 15 250 50 0 \$0-harmonicspec_c empty Harmonic_Spectrum_C_(Rectangle_Wave)
17 7 0 10 -4032 -1 -1;
#X text -145 196 All frequency and amplitude controls in the user interface
remotely receive from the preset freq and amp values to the right using
the receive symbol "\$0-freq#a" and "\$0-amp#a". All freq and amp controls
also remotely send to the number boxes below \, which actually set
the oscillators to develop the various timbre. These use the remote
send symbol "\$0-freq#b" and "\$0-amp#b". All remote send and receive
symbols can be seen in each object's properties., f 24;
#X text 108 571 Individual Partials/Harmonics:;
#X text 1300 50 Sine Wave preset (silences all partials other than
the first), f 62;
#X obj 782 311 bng 15 250 50 0 \$0-inharmonicspec empty Inharmonic_Spectrum_(different_every_time)
17 7 0 10 -4032 -1 -1;
#X obj 1304 291 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#N canvas 25 23 1415 855 freq.calc.sawtooth 0;
#X obj 54 111 until;
#X obj 115 133 + 1;
#X obj 54 133 float 1;
#X obj 189 386 f;
#X text 226 386 the iterator is stored here as an index to be used
by the [route] object, f 72;
#X text 142 133 iterator \, increase by 1 each time [until] sends a
"bang";
#X obj 117 351 trigger b f;
#X obj 135 427 pack f f;
#X text 196 425 combine the iterator/partial number with the calculated
partial amplitude value as a pair for [route];
#X msg 295 233 1;
#X obj 295 211 sel 48;
#X text 341 207 this mechanism resets the iterator to "1" when the
max iterations have occured, f 40;
#X obj 328 233 loadbang;
#X obj 54 160 trigger f f;
#X text 131 157 send the iterator first to the loop mechanism \, then
to the [sel] object to test if the loop is over (and reset the iterator
back to 1);
#X obj 117 268 t f f, f 15;
#X obj 24 468 route 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
43 44 45 46 47 48, f 227;
#X obj 54 88 t f f;
#X msg 54 67 48;
#X obj 138 19 inlet;
#X text 179 18 Fundamental Frequency;
#X obj 54 20 inlet;
#X obj 24 524 send \$0-freq1a;
#X obj 123 524 send \$0-freq2a;
#X obj 220 524 send \$0-freq3a;
#X obj 317 524 send \$0-freq4a;
#X obj 414 524 send \$0-freq5a;
#X obj 511 524 send \$0-freq6a;
#X obj 610 524 send \$0-freq7a;
#X obj 707 524 send \$0-freq8a;
#X obj 804 524 send \$0-freq9a;
#X obj 901 524 send \$0-freq10a;
#X obj 997 524 send \$0-freq11a;
#X obj 1095 524 send \$0-freq12a;
#X obj 1191 524 send \$0-freq13a;
#X obj 1288 524 send \$0-freq14a;
#X obj 1386 524 send \$0-freq15a;
#X obj 1484 523 send \$0-freq16a;
#X obj 24 551 send \$0-freq17a;
#X obj 123 551 send \$0-freq18a;
#X obj 220 551 send \$0-freq19a;
#X obj 317 551 send \$0-freq20a;
#X obj 414 551 send \$0-freq21a;
#X obj 511 551 send \$0-freq22a;
#X obj 611 551 send \$0-freq23a;
#X obj 708 551 send \$0-freq24a;
#X obj 805 551 send \$0-freq25a;
#X obj 902 551 send \$0-freq26a;
#X obj 998 551 send \$0-freq27a;
#X obj 1095 551 send \$0-freq28a;
#X obj 1191 551 send \$0-freq29a;
#X obj 1288 551 send \$0-freq30a;
#X obj 1386 551 send \$0-freq31a;
#X obj 1483 551 send \$0-freq32a;
#X obj 24 578 send \$0-freq33a;
#X obj 123 578 send \$0-freq34a;
#X obj 220 578 send \$0-freq35a;
#X obj 319 578 send \$0-freq36a;
#X obj 415 578 send \$0-freq37a;
#X obj 511 578 send \$0-freq38a;
#X obj 611 578 send \$0-freq39a;
#X obj 710 578 send \$0-freq40a;
#X obj 807 578 send \$0-freq41a;
#X obj 904 578 send \$0-freq42a;
#X obj 1001 578 send \$0-freq43a;
#X obj 1097 578 send \$0-freq44a;
#X obj 1194 578 send \$0-freq45a;
#X obj 1291 578 send \$0-freq46a;
#X obj 1388 578 send \$0-freq47a;
#X obj 1485 578 send \$0-freq48a;
#X obj 117 312 * 440;
#X connect 0 0 2 0;
#X connect 1 0 2 1;
#X connect 2 0 1 0;
#X connect 2 0 13 0;
#X connect 3 0 7 0;
#X connect 6 0 3 0;
#X connect 6 1 7 1;
#X connect 7 0 16 0;
#X connect 9 0 2 1;
#X connect 10 0 9 0;
#X connect 12 0 9 0;
#X connect 13 0 10 0;
#X connect 13 1 15 0;
#X connect 15 0 70 0;
#X connect 15 1 3 1;
#X connect 16 0 22 0;
#X connect 16 1 23 0;
#X connect 16 2 24 0;
#X connect 16 3 25 0;
#X connect 16 4 26 0;
#X connect 16 5 27 0;
#X connect 16 6 28 0;
#X connect 16 7 29 0;
#X connect 16 8 30 0;
#X connect 16 9 31 0;
#X connect 16 10 32 0;
#X connect 16 11 33 0;
#X connect 16 12 34 0;
#X connect 16 13 35 0;
#X connect 16 14 36 0;
#X connect 16 15 37 0;
#X connect 16 16 38 0;
#X connect 16 17 39 0;
#X connect 16 18 40 0;
#X connect 16 19 41 0;
#X connect 16 20 42 0;
#X connect 16 21 43 0;
#X connect 16 22 44 0;
#X connect 16 23 45 0;
#X connect 16 24 46 0;
#X connect 16 25 47 0;
#X connect 16 26 48 0;
#X connect 16 27 49 0;
#X connect 16 28 50 0;
#X connect 16 29 51 0;
#X connect 16 30 52 0;
#X connect 16 31 53 0;
#X connect 16 32 54 0;
#X connect 16 33 55 0;
#X connect 16 34 56 0;
#X connect 16 35 57 0;
#X connect 16 36 58 0;
#X connect 16 37 59 0;
#X connect 16 38 60 0;
#X connect 16 39 61 0;
#X connect 16 40 62 0;
#X connect 16 41 63 0;
#X connect 16 42 64 0;
#X connect 16 43 65 0;
#X connect 16 44 66 0;
#X connect 16 45 67 0;
#X connect 16 46 68 0;
#X connect 16 47 69 0;
#X connect 17 0 0 0;
#X connect 17 1 10 1;
#X connect 18 0 17 0;
#X connect 19 0 70 1;
#X connect 21 0 18 0;
#X connect 70 0 6 0;
#X restore 1304 316 pd freq.calc.sawtooth;
#X obj 1450 286 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#N canvas 274 104 1111 673 amp.calc.sawtooth 0;
#X obj 52 91 until;
#X obj 113 113 + 1;
#X obj 52 113 float 1;
#X obj 115 298 /;
#X obj 187 386 f;
#X text 145 298 divide 1/n \, where n is the interator (and the partial
number), f 61;
#X text 224 386 the iterator is stored here as an index to be used
by the [route] object, f 72;
#X text 140 113 iterator \, increase by 1 each time [until] sends a
"bang";
#X obj 115 351 trigger b f;
#X obj 133 427 pack f f;
#X text 194 425 combine the iterator/partial number with the calculated
partial amplitude value as a pair for [route];
#X msg 293 213 1;
#X obj 293 191 sel 48;
#X text 339 187 this mechanism resets the iterator to "1" when the
max iterations have occured, f 40;
#X obj 326 213 loadbang;
#X obj 52 140 trigger f f;
#X text 129 137 send the iterator first to the loop mechanism \, then
to the [sel] object to test if the loop is over (and reset the iterator
back to 1);
#X obj 115 271 swap 1;
#X floatatom 115 325 5 0 0 0 - - -, f 5;
#X obj 115 248 t f f, f 15;
#X obj 52 68 t f f;
#X msg 52 47 48;
#X obj 24 488 route 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
43 44 45 46 47 48, f 227;
#X obj 24 544 send \$0-amp1a;
#X obj 123 544 send \$0-amp2a;
#X obj 220 544 send \$0-amp3a;
#X obj 317 544 send \$0-amp4a;
#X obj 414 544 send \$0-amp5a;
#X obj 511 544 send \$0-amp6a;
#X obj 610 544 send \$0-amp7a;
#X obj 707 544 send \$0-amp8a;
#X obj 804 544 send \$0-amp9a;
#X obj 901 544 send \$0-amp10a;
#X obj 997 544 send \$0-amp11a;
#X obj 1095 544 send \$0-amp12a;
#X obj 1191 544 send \$0-amp13a;
#X obj 1288 544 send \$0-amp4a;
#X obj 1386 544 send \$0-amp15a;
#X obj 1484 543 send \$0-amp16a;
#X obj 24 571 send \$0-amp17a;
#X obj 123 571 send \$0-amp18a;
#X obj 220 571 send \$0-amp19a;
#X obj 317 571 send \$0-amp20a;
#X obj 414 571 send \$0-amp21a;
#X obj 511 571 send \$0-amp22a;
#X obj 611 571 send \$0-amp23a;
#X obj 708 571 send \$0-amp24a;
#X obj 805 571 send \$0-amp25a;
#X obj 902 571 send \$0-amp26a;
#X obj 998 571 send \$0-amp27a;
#X obj 1191 571 send \$0-amp29a;
#X obj 1288 571 send \$0-amp30a;
#X obj 1386 571 send \$0-amp31a;
#X obj 1483 571 send \$0-amp32a;
#X obj 24 598 send \$0-amp33a;
#X obj 123 598 send \$0-amp34a;
#X obj 220 598 send \$0-amp35a;
#X obj 319 598 send \$0-amp36a;
#X obj 415 598 send \$0-amp37a;
#X obj 511 598 send \$0-amp38a;
#X obj 611 598 send \$0-amp39a;
#X obj 709 598 send \$0-amp40a;
#X obj 807 598 send \$0-amp41a;
#X obj 904 598 send \$0-amp42a;
#X obj 1001 598 send \$0-amp43a;
#X obj 1291 598 send \$0-amp46a;
#X obj 1388 598 send \$0-amp47a;
#X obj 1485 598 send \$0-amp48a;
#X obj 52 20 inlet;
#X obj 1095 571 send \$0-amp28a;
#X obj 1097 598 send \$0-amp44a;
#X obj 1194 598 send \$0-amp45a;
#X connect 0 0 2 0;
#X connect 1 0 2 1;
#X connect 2 0 1 0;
#X connect 2 0 15 0;
#X connect 3 0 18 0;
#X connect 4 0 9 0;
#X connect 8 0 4 0;
#X connect 8 1 9 1;
#X connect 9 0 22 0;
#X connect 11 0 2 1;
#X connect 12 0 11 0;
#X connect 14 0 11 0;
#X connect 15 0 12 0;
#X connect 15 1 19 0;
#X connect 17 0 3 0;
#X connect 17 1 3 1;
#X connect 18 0 8 0;
#X connect 19 0 17 0;
#X connect 19 1 4 1;
#X connect 20 0 0 0;
#X connect 20 1 12 1;
#X connect 21 0 20 0;
#X connect 22 0 23 0;
#X connect 22 1 24 0;
#X connect 22 2 25 0;
#X connect 22 3 26 0;
#X connect 22 4 27 0;
#X connect 22 5 28 0;
#X connect 22 6 29 0;
#X connect 22 7 30 0;
#X connect 22 8 31 0;
#X connect 22 9 32 0;
#X connect 22 10 33 0;
#X connect 22 11 34 0;
#X connect 22 12 35 0;
#X connect 22 13 36 0;
#X connect 22 14 37 0;
#X connect 22 15 38 0;
#X connect 22 16 39 0;
#X connect 22 17 40 0;
#X connect 22 18 41 0;
#X connect 22 19 42 0;
#X connect 22 20 43 0;
#X connect 22 21 44 0;
#X connect 22 22 45 0;
#X connect 22 23 46 0;
#X connect 22 24 47 0;
#X connect 22 25 48 0;
#X connect 22 26 49 0;
#X connect 22 27 69 0;
#X connect 22 28 50 0;
#X connect 22 29 51 0;
#X connect 22 30 52 0;
#X connect 22 31 53 0;
#X connect 22 32 54 0;
#X connect 22 33 55 0;
#X connect 22 34 56 0;
#X connect 22 35 57 0;
#X connect 22 36 58 0;
#X connect 22 37 59 0;
#X connect 22 38 60 0;
#X connect 22 39 61 0;
#X connect 22 40 62 0;
#X connect 22 41 63 0;
#X connect 22 42 64 0;
#X connect 22 43 70 0;
#X connect 22 44 71 0;
#X connect 22 45 65 0;
#X connect 22 46 66 0;
#X connect 22 47 67 0;
#X connect 68 0 21 0;
#X restore 1450 311 pd amp.calc.sawtooth;
#X obj 1302 182 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 1462 177 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#N canvas 25 23 1415 855 freq.calc.triangle 0;
#X obj 54 111 until;
#X obj 115 133 + 1;
#X obj 54 133 float 1;
#X obj 189 386 f;
#X text 226 386 the iterator is stored here as an index to be used
by the [route] object, f 72;
#X text 142 133 iterator \, increase by 1 each time [until] sends a
"bang";
#X obj 117 351 trigger b f;
#X obj 135 427 pack f f;
#X text 196 425 combine the iterator/partial number with the calculated
partial amplitude value as a pair for [route];
#X msg 295 233 1;
#X obj 295 211 sel 48;
#X text 341 207 this mechanism resets the iterator to "1" when the
max iterations have occured, f 40;
#X obj 328 233 loadbang;
#X obj 54 160 trigger f f;
#X text 131 157 send the iterator first to the loop mechanism \, then
to the [sel] object to test if the loop is over (and reset the iterator
back to 1);
#X obj 117 268 t f f, f 15;
#X obj 24 468 route 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
43 44 45 46 47 48, f 227;
#X obj 54 88 t f f;
#X msg 54 67 48;
#X obj 143 19 inlet;
#X text 184 18 Fundamental Frequency;
#X obj 54 20 inlet;
#X obj 24 524 send \$0-freq1a;
#X obj 220 524 send \$0-freq3a;
#X obj 414 524 send \$0-freq5a;
#X obj 610 524 send \$0-freq7a;
#X obj 804 524 send \$0-freq9a;
#X obj 997 524 send \$0-freq11a;
#X obj 1191 524 send \$0-freq13a;
#X obj 1386 524 send \$0-freq15a;
#X obj 24 551 send \$0-freq17a;
#X obj 220 551 send \$0-freq19a;
#X obj 414 551 send \$0-freq21a;
#X obj 611 551 send \$0-freq23a;
#X obj 805 551 send \$0-freq25a;
#X obj 998 551 send \$0-freq27a;
#X obj 1191 551 send \$0-freq29a;
#X obj 1386 551 send \$0-freq31a;
#X obj 24 578 send \$0-freq33a;
#X obj 220 578 send \$0-freq35a;
#X obj 415 578 send \$0-freq37a;
#X obj 611 578 send \$0-freq39a;
#X obj 807 578 send \$0-freq41a;
#X obj 1001 578 send \$0-freq43a;
#X obj 1194 578 send \$0-freq45a;
#X obj 1388 578 send \$0-freq47a;
#X obj 117 312 * 440;
#X connect 0 0 2 0;
#X connect 1 0 2 1;
#X connect 2 0 1 0;
#X connect 2 0 13 0;
#X connect 3 0 7 0;
#X connect 6 0 3 0;
#X connect 6 1 7 1;
#X connect 7 0 16 0;
#X connect 9 0 2 1;
#X connect 10 0 9 0;
#X connect 12 0 9 0;
#X connect 13 0 10 0;
#X connect 13 1 15 0;
#X connect 15 0 46 0;
#X connect 15 1 3 1;
#X connect 16 0 22 0;
#X connect 16 2 23 0;
#X connect 16 4 24 0;
#X connect 16 6 25 0;
#X connect 16 8 26 0;
#X connect 16 10 27 0;
#X connect 16 12 28 0;
#X connect 16 14 29 0;
#X connect 16 16 30 0;
#X connect 16 18 31 0;
#X connect 16 20 32 0;
#X connect 16 22 33 0;
#X connect 16 24 34 0;
#X connect 16 26 35 0;
#X connect 16 28 36 0;
#X connect 16 30 37 0;
#X connect 16 32 38 0;
#X connect 16 34 39 0;
#X connect 16 36 40 0;
#X connect 16 38 41 0;
#X connect 16 40 42 0;
#X connect 16 42 43 0;
#X connect 16 44 44 0;
#X connect 16 46 45 0;
#X connect 17 0 0 0;
#X connect 17 1 10 1;
#X connect 18 0 17 0;
#X connect 19 0 46 1;
#X connect 21 0 18 0;
#X connect 46 0 6 0;
#X restore 1302 207 pd freq.calc.triangle;
#N canvas 26 23 1414 855 amp.calc.triangle 0;
#X obj 52 91 until;
#X obj 113 113 + 1;
#X obj 52 113 float 1;
#X obj 115 298 /;
#X obj 187 386 f;
#X text 224 386 the iterator is stored here as an index to be used
by the [route] object, f 72;
#X text 140 113 iterator \, increase by 1 each time [until] sends a
"bang";
#X obj 115 351 trigger b f;
#X obj 133 427 pack f f;
#X text 194 425 combine the iterator/partial number with the calculated
partial amplitude value as a pair for [route];
#X msg 293 213 1;
#X obj 293 191 sel 48;
#X text 339 187 this mechanism resets the iterator to "1" when the
max iterations have occured, f 40;
#X obj 326 213 loadbang;
#X obj 52 140 trigger f f;
#X text 129 137 send the iterator first to the loop mechanism \, then
to the [sel] object to test if the loop is over (and reset the iterator
back to 1);
#X obj 115 271 swap 1;
#X floatatom 115 325 5 0 0 0 - - -, f 5;
#X obj 52 68 t f f;
#X msg 52 47 48;
#X obj 24 538 route 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
43 44 45 46 47 48, f 227;
#X obj 24 674 send \$0-amp1a;
#X obj 123 674 send \$0-amp2a;
#X obj 220 674 send \$0-amp3a;
#X obj 317 674 send \$0-amp4a;
#X obj 414 674 send \$0-amp5a;
#X obj 511 674 send \$0-amp6a;
#X obj 610 674 send \$0-amp7a;
#X obj 707 674 send \$0-amp8a;
#X obj 804 674 send \$0-amp9a;
#X obj 901 674 send \$0-amp10a;
#X obj 997 674 send \$0-amp11a;
#X obj 1095 674 send \$0-amp12a;
#X obj 1191 674 send \$0-amp13a;
#X obj 1386 674 send \$0-amp15a;
#X obj 1484 673 send \$0-amp16a;
#X obj 24 781 send \$0-amp17a;
#X obj 123 781 send \$0-amp18a;
#X obj 220 781 send \$0-amp19a;
#X obj 317 781 send \$0-amp20a;
#X obj 414 781 send \$0-amp21a;
#X obj 511 781 send \$0-amp22a;
#X obj 611 781 send \$0-amp23a;
#X obj 708 781 send \$0-amp24a;
#X obj 805 781 send \$0-amp25a;
#X obj 902 781 send \$0-amp26a;
#X obj 998 781 send \$0-amp27a;
#X obj 1191 781 send \$0-amp29a;
#X obj 1288 781 send \$0-amp30a;
#X obj 1386 781 send \$0-amp31a;
#X obj 1483 781 send \$0-amp32a;
#X obj 24 908 send \$0-amp33a;
#X obj 123 908 send \$0-amp34a;
#X obj 220 908 send \$0-amp35a;
#X obj 319 908 send \$0-amp36a;
#X obj 415 908 send \$0-amp37a;
#X obj 511 908 send \$0-amp38a;
#X obj 611 908 send \$0-amp39a;
#X obj 709 908 send \$0-amp40a;
#X obj 807 908 send \$0-amp41a;
#X obj 904 908 send \$0-amp42a;
#X obj 1001 908 send \$0-amp43a;
#X obj 1291 908 send \$0-amp46a;
#X obj 1388 908 send \$0-amp47a;
#X obj 1485 908 send \$0-amp48a;
#X obj 52 20 inlet;
#X obj 1095 781 send \$0-amp28a;
#X obj 1097 908 send \$0-amp44a;
#X obj 1194 908 send \$0-amp45a;
#X obj 115 246 *;
#X obj 115 188 t f f f, f 15;
#X text 145 298 divide 1/n^2 \, where n is the interator (and the partial
number), f 61;
#X text 141 244 n^2;
#X obj 133 449 t l b;
#X msg 160 474 0;
#X obj 1288 674 send \$0-amp14a;
#X text 195 473 All even partials need to be zeroed;
#X connect 0 0 2 0;
#X connect 1 0 2 1;
#X connect 2 0 1 0;
#X connect 2 0 14 0;
#X connect 3 0 17 0;
#X connect 4 0 8 0;
#X connect 7 0 4 0;
#X connect 7 1 8 1;
#X connect 8 0 73 0;
#X connect 10 0 2 1;
#X connect 11 0 10 0;
#X connect 13 0 10 0;
#X connect 14 0 11 0;
#X connect 14 1 70 0;
#X connect 16 0 3 0;
#X connect 16 1 3 1;
#X connect 17 0 7 0;
#X connect 18 0 0 0;
#X connect 18 1 11 1;
#X connect 19 0 18 0;
#X connect 20 0 21 0;
#X connect 20 2 23 0;
#X connect 20 4 25 0;
#X connect 20 6 27 0;
#X connect 20 8 29 0;
#X connect 20 10 31 0;
#X connect 20 12 33 0;
#X connect 20 14 34 0;
#X connect 20 16 36 0;
#X connect 20 18 38 0;
#X connect 20 20 40 0;
#X connect 20 22 42 0;
#X connect 20 24 44 0;
#X connect 20 26 46 0;
#X connect 20 28 47 0;
#X connect 20 30 49 0;
#X connect 20 32 51 0;
#X connect 20 34 53 0;
#X connect 20 36 55 0;
#X connect 20 38 57 0;
#X connect 20 40 59 0;
#X connect 20 42 61 0;
#X connect 20 44 68 0;
#X connect 20 46 63 0;
#X connect 65 0 19 0;
#X connect 69 0 16 0;
#X connect 70 0 69 0;
#X connect 70 1 69 1;
#X connect 70 2 4 1;
#X connect 73 0 20 0;
#X connect 73 1 74 0;
#X connect 74 0 22 0;
#X connect 74 0 37 0;
#X connect 74 0 52 0;
#X connect 74 0 24 0;
#X connect 74 0 39 0;
#X connect 74 0 54 0;
#X connect 74 0 26 0;
#X connect 74 0 41 0;
#X connect 74 0 56 0;
#X connect 74 0 28 0;
#X connect 74 0 43 0;
#X connect 74 0 58 0;
#X connect 74 0 30 0;
#X connect 74 0 45 0;
#X connect 74 0 60 0;
#X connect 74 0 32 0;
#X connect 74 0 66 0;
#X connect 74 0 67 0;
#X connect 74 0 75 0;
#X connect 74 0 48 0;
#X connect 74 0 62 0;
#X connect 74 0 35 0;
#X connect 74 0 50 0;
#X connect 74 0 64 0;
#X restore 1462 202 pd amp.calc.triangle;
#X obj 1304 73 bng 15 250 50 0 empty \$0-sine empty 17 7 0 10 -262144
-1 -1;
#X floatatom 108 639 5 0 0 0 - #0-amp1a #0-amp1b, f 5;
#X floatatom 108 616 5 0 0 0 - #0-freq1a #0-freq1b, f 5;
#X text 143 613 f;
#X text 144 639 a;
#X floatatom 162 639 5 0 0 0 - #0-amp2a #0-amp2b, f 5;
#X floatatom 162 616 5 0 0 0 - #0-freq2a #0-freq2b, f 5;
#X text 197 613 f;
#X text 198 639 a;
#X floatatom 216 639 5 0 0 0 - #0-amp3a #0-amp3b, f 5;
#X floatatom 216 616 5 0 0 0 - #0-freq3a #0-freq3b, f 5;
#X text 251 613 f;
#X text 252 639 a;
#X floatatom 269 639 5 0 0 0 - #0-amp4a #0-amp4b, f 5;
#X floatatom 269 616 5 0 0 0 - #0-freq4a #0-freq4b, f 5;
#X text 304 613 f;
#X text 305 639 a;
#X floatatom 323 639 5 0 0 0 - #0-amp5a #0-amp5b, f 5;
#X floatatom 323 616 5 0 0 0 - #0-freq5a #0-freq5b, f 5;
#X text 358 613 f;
#X text 359 639 a;
#X floatatom 377 639 5 0 0 0 - #0-amp6a #0-amp6b, f 5;
#X floatatom 377 616 5 0 0 0 - #0-freq6a #0-freq6b, f 5;
#X text 412 613 f;
#X text 413 639 a;
#X floatatom 429 638 5 0 0 0 - #0-amp7a #0-amp7b, f 5;
#X floatatom 429 615 5 0 0 0 - #0-freq7a #0-freq7b, f 5;
#X text 464 612 f;
#X text 465 638 a;
#X floatatom 483 638 5 0 0 0 - #0-amp8a #0-amp8b, f 5;
#X floatatom 483 615 5 0 0 0 - #0-freq8a #0-freq8b, f 5;
#X text 518 612 f;
#X text 519 638 a;
#X floatatom 537 638 5 0 0 0 - #0-amp9a #0-amp9b, f 5;
#X floatatom 537 615 5 0 0 0 - #0-freq9a #0-freq9b, f 5;
#X text 572 612 f;
#X text 573 638 a;
#X floatatom 590 638 5 0 0 0 - #0-amp10a #0-amp10b, f 5;
#X floatatom 590 615 5 0 0 0 - #0-freq10a #0-freq10b, f 5;
#X text 625 612 f;
#X text 626 638 a;
#X floatatom 644 638 5 0 0 0 - #0-amp11a #0-amp11b, f 5;
#X floatatom 644 615 5 0 0 0 - #0-freq11a #0-freq11b, f 5;
#X text 679 612 f;
#X text 680 638 a;
#X floatatom 698 638 5 0 0 0 - #0-amp12a #0-amp12b, f 5;
#X floatatom 698 615 5 0 0 0 - #0-freq12a #0-freq12b, f 5;
#X text 734 612 f;
#X text 735 638 a;
#X text 111 598 1;
#X text 166 598 2;
#X text 219 598 3;
#X text 272 598 4;
#X text 327 598 5;
#X text 380 598 6;
#X text 431 598 7;
#X text 485 598 8;
#X text 549 598 9;
#X text 602 598 10;
#X text 656 598 11;
#X text 711 598 12;
#X floatatom 107 707 5 0 0 0 - #0-amp13a #0-amp13b, f 5;
#X floatatom 108 684 5 0 0 0 - #0-freq13a #0-freq13b, f 5;
#X text 143 681 f;
#X text 143 707 a;
#X floatatom 162 707 5 0 0 0 - #0-amp14a #0-amp14b, f 5;
#X floatatom 163 684 5 0 0 0 - #0-freq14a #0-freq14b, f 5;
#X text 198 681 f;
#X text 198 707 a;
#X floatatom 216 707 5 0 0 0 - #0-amp15a #0-amp15b, f 5;
#X floatatom 217 684 5 0 0 0 - #0-freq15a #0-freq15b, f 5;
#X text 252 681 f;
#X text 252 707 a;
#X floatatom 269 707 5 0 0 0 - #0-amp16a #0-amp16b, f 5;
#X floatatom 270 684 5 0 0 0 - #0-freq16a #0-freq16b, f 5;
#X text 305 681 f;
#X text 305 707 a;
#X floatatom 323 707 5 0 0 0 - #0-amp17a #0-amp17b, f 5;
#X floatatom 324 684 5 0 0 0 - #0-freq17a #0-freq17b, f 5;
#X text 359 681 f;
#X text 359 707 a;
#X floatatom 377 707 5 0 0 0 - #0-amp18a #0-amp18b, f 5;
#X floatatom 378 684 5 0 0 0 - #0-freq18a #0-freq18b, f 5;
#X text 413 681 f;
#X text 413 707 a;
#X floatatom 428 707 5 0 0 0 - #0-amp19a #0-amp19b, f 5;
#X floatatom 429 684 5 0 0 0 - #0-freq19a #0-freq19b, f 5;
#X text 464 681 f;
#X text 464 707 a;
#X floatatom 482 707 5 0 0 0 - #0-amp20a #0-amp20b, f 5;
#X floatatom 483 684 5 0 0 0 - #0-freq20a #0-freq20b, f 5;
#X text 518 681 f;
#X text 518 707 a;
#X floatatom 536 707 5 0 0 0 - #0-amp21a #0-amp21b, f 5;
#X floatatom 537 684 5 0 0 0 - #0-freq21a #0-freq21b, f 5;
#X text 572 681 f;
#X text 572 707 a;
#X floatatom 589 707 5 0 0 0 - #0-amp22a #0-amp22b, f 5;
#X floatatom 590 684 5 0 0 0 - #0-freq22a #0-freq22b, f 5;
#X text 625 681 f;
#X text 625 707 a;
#X floatatom 643 707 5 0 0 0 - #0-amp23a #0-amp23b, f 5;
#X floatatom 644 684 5 0 0 0 - #0-freq23a #0-freq23b, f 5;
#X text 679 681 f;
#X text 679 707 a;
#X floatatom 697 707 5 0 0 0 - #0-amp24a #0-amp24b, f 5;
#X floatatom 698 684 5 0 0 0 - #0-freq24a #0-freq24b, f 5;
#X text 733 681 f;
#X text 733 707 a;
#X text 111 666 13;
#X text 166 666 14;
#X text 220 666 15;
#X text 273 666 16;
#X text 328 666 17;
#X text 381 666 18;
#X text 431 666 19;
#X text 485 666 20;
#X text 549 666 21;
#X text 602 666 22;
#X text 656 666 23;
#X text 710 666 24;
#X floatatom 107 776 5 0 0 0 - #0-amp25a #0-amp25b, f 5;
#X floatatom 107 753 5 0 0 0 - #0-freq25a #0-freq25b, f 5;
#X text 142 750 f;
#X text 143 776 a;
#X floatatom 162 776 5 0 0 0 - #0-amp26a #0-amp26b, f 5;
#X floatatom 162 753 5 0 0 0 - #0-freq26a #0-freq26b, f 5;
#X text 197 750 f;
#X text 198 776 a;
#X floatatom 216 776 5 0 0 0 - #0-amp27a #0-amp27b, f 5;
#X floatatom 216 753 5 0 0 0 - #0-freq27a #0-freq27b, f 5;
#X text 251 750 f;
#X text 252 776 a;
#X floatatom 269 776 5 0 0 0 - #0-amp28a #0-amp28b, f 5;
#X floatatom 269 753 5 0 0 0 - #0-freq28a #0-freq28b, f 5;
#X text 304 750 f;
#X text 305 776 a;
#X floatatom 323 776 5 0 0 0 - #0-amp29a #0-amp29b, f 5;
#X floatatom 323 753 5 0 0 0 - #0-freq29a #0-freq29b, f 5;
#X text 358 750 f;
#X text 359 776 a;
#X floatatom 377 776 5 0 0 0 - #0-amp30a #0-amp30b, f 5;
#X floatatom 377 753 5 0 0 0 - #0-freq30a #0-freq30b, f 5;
#X text 412 750 f;
#X text 413 776 a;
#X floatatom 429 775 5 0 0 0 - #0-amp31a #0-amp31b, f 5;
#X floatatom 429 752 5 0 0 0 - #0-freq31a #0-freq31b, f 5;
#X text 464 749 f;
#X text 465 775 a;
#X floatatom 483 775 5 0 0 0 - #0-amp32a #0-amp32b, f 5;
#X floatatom 483 752 5 0 0 0 - #0-freq32a #0-freq32b, f 5;
#X text 518 749 f;
#X text 519 775 a;
#X floatatom 537 775 5 0 0 0 - #0-amp33a #0-amp33b, f 5;
#X floatatom 537 752 5 0 0 0 - #0-freq33a #0-freq33b, f 5;
#X text 572 749 f;
#X text 573 775 a;
#X floatatom 590 775 5 0 0 0 - #0-amp34a #0-amp34b, f 5;
#X floatatom 590 752 5 0 0 0 - #0-freq34a #0-freq34b, f 5;
#X text 625 749 f;
#X text 626 775 a;
#X floatatom 644 775 5 0 0 0 - #0-amp35a #0-amp35b, f 5;
#X floatatom 644 752 5 0 0 0 - #0-freq35a #0-freq35b, f 5;
#X text 679 749 f;
#X text 680 775 a;
#X floatatom 698 775 5 0 0 0 - #0-amp36a #0-amp36b, f 5;
#X floatatom 698 752 5 0 0 0 - #0-freq36a #0-freq36b, f 5;
#X text 733 749 f;
#X text 734 775 a;
#X floatatom 107 844 5 0 0 0 - #0-amp37a #0-amp37b, f 5;
#X floatatom 107 821 5 0 0 0 - #0-freq37a #0-freq37b, f 5;
#X text 142 818 f;
#X text 143 844 a;
#X floatatom 162 844 5 0 0 0 - #0-amp38a #0-amp38b, f 5;
#X floatatom 162 821 5 0 0 0 - #0-freq38a #0-freq38b, f 5;
#X text 197 818 f;
#X text 198 844 a;
#X floatatom 216 844 5 0 0 0 - #0-amp39a #0-amp39b, f 5;
#X floatatom 216 821 5 0 0 0 - #0-freq39a #0-freq39b, f 5;
#X text 251 818 f;
#X text 252 844 a;
#X floatatom 269 844 5 0 0 0 - #0-amp40a #0-amp40b, f 5;
#X floatatom 269 821 5 0 0 0 - #0-freq40a #0-freq40b, f 5;
#X text 304 818 f;
#X text 305 844 a;
#X floatatom 323 844 5 0 0 0 - #0-amp41a #0-amp41b, f 5;
#X floatatom 323 821 5 0 0 0 - #0-freq41a #0-freq41b, f 5;
#X text 358 818 f;
#X text 359 844 a;
#X floatatom 377 844 5 0 0 0 - #0-amp42a #0-amp42b, f 5;
#X floatatom 377 821 5 0 0 0 - #0-freq42a #0-freq42b, f 5;
#X text 412 818 f;
#X text 413 844 a;
#X floatatom 428 844 5 0 0 0 - #0-amp43a #0-amp43b, f 5;
#X floatatom 428 821 5 0 0 0 - #0-freq43a #0-freq43b, f 5;
#X text 463 818 f;
#X text 464 844 a;
#X floatatom 482 844 5 0 0 0 - #0-amp44a #0-amp44b, f 5;
#X floatatom 482 821 5 0 0 0 - #0-freq44a #0-freq44b, f 5;
#X text 517 818 f;
#X text 518 844 a;
#X floatatom 536 844 5 0 0 0 - #0-amp45a #0-amp45b, f 5;
#X floatatom 536 821 5 0 0 0 - #0-freq45a #0-freq45b, f 5;
#X text 571 818 f;
#X text 572 844 a;
#X floatatom 589 844 5 0 0 0 - #0-amp46a #0-amp46b, f 5;
#X floatatom 589 821 5 0 0 0 - #0-freq46a #0-freq46b, f 5;
#X text 624 818 f;
#X text 625 844 a;
#X floatatom 643 844 5 0 0 0 - #0-amp47a #0-amp47b, f 5;
#X floatatom 643 821 5 0 0 0 - #0-freq47a #0-freq47b, f 5;
#X text 678 818 f;
#X text 679 844 a;
#X floatatom 697 844 5 0 0 0 - #0-amp48a #0-amp48b, f 5;
#X floatatom 697 821 5 0 0 0 - #0-freq48a #0-freq48b, f 5;
#X text 732 818 f;
#X text 733 844 a;
#X text 110 735 25;
#X text 165 735 26;
#X text 219 735 27;
#X text 272 735 28;
#X text 327 735 29;
#X text 380 735 30;
#X text 431 734 31;
#X text 485 734 32;
#X text 549 734 33;
#X text 602 734 34;
#X text 656 734 35;
#X text 710 734 36;
#X text 110 803 37;
#X text 165 803 38;
#X text 219 803 39;
#X text 272 803 40;
#X text 327 803 41;
#X text 380 803 42;
#X text 430 803 43;
#X text 484 803 44;
#X text 548 803 45;
#X text 601 803 46;
#X text 655 803 47;
#X text 709 803 48;
#X obj 31 1075 osc~ 440;
#X floatatom 46 1045 5 0 0 0 - #0-amp1b -, f 5;
#X floatatom 31 1022 5 0 0 0 - #0-freq1b -, f 5;
#X text 66 1019 f;
#X text 82 1045 a;
#X obj 156 1591 send~ sig4;
#X obj 31 1099 *~;
#X obj 101 1075 osc~ 440;
#X floatatom 116 1045 5 0 0 0 - #0-amp2b -, f 5;
#X floatatom 101 1022 5 0 0 0 - #0-freq2b -, f 5;
#X text 136 1019 f;
#X text 152 1045 a;
#X obj 101 1099 *~;
#X obj 171 1075 osc~ 440;
#X floatatom 186 1045 5 0 0 0 - #0-amp3b -, f 5;
#X floatatom 171 1022 5 0 0 0 - #0-freq3b -, f 5;
#X text 206 1019 f;
#X text 222 1045 a;
#X obj 172 1099 *~;
#X floatatom 256 1045 5 0 0 0 - #0-amp4b -, f 5;
#X floatatom 241 1022 5 0 0 0 - #0-freq4b -, f 5;
#X text 276 1019 f;
#X text 292 1045 a;
#X obj 241 1099 *~;
#X obj 242 1077 osc~ 440;
#X floatatom 326 1045 5 0 0 0 - #0-amp5b -, f 5;
#X floatatom 311 1022 5 0 0 0 - #0-freq5b -, f 5;
#X text 346 1019 f;
#X text 362 1045 a;
#X obj 311 1099 *~;
#X obj 312 1077 osc~ 440;
#X floatatom 396 1045 5 0 0 0 - #0-amp6b -, f 5;
#X floatatom 381 1022 5 0 0 0 - #0-freq6b -, f 5;
#X text 416 1019 f;
#X text 432 1045 a;
#X obj 381 1099 *~;
#X obj 382 1077 osc~ 440;
#X obj 452 1075 osc~ 440;
#X floatatom 467 1045 5 0 0 0 - #0-amp7b -, f 5;
#X floatatom 452 1022 5 0 0 0 - #0-freq7b -, f 5;
#X text 487 1019 f;
#X text 503 1045 a;
#X obj 452 1099 *~;
#X obj 522 1075 osc~ 440;
#X floatatom 537 1045 5 0 0 0 - #0-amp8b -, f 5;
#X floatatom 522 1022 5 0 0 0 - #0-freq8b -, f 5;
#X text 557 1019 f;
#X text 573 1045 a;
#X obj 522 1099 *~;
#X obj 592 1075 osc~ 440;
#X floatatom 607 1045 5 0 0 0 - #0-amp9b -, f 5;
#X floatatom 592 1022 5 0 0 0 - #0-freq9b -, f 5;
#X text 627 1019 f;
#X text 643 1045 a;
#X obj 593 1099 *~;
#X floatatom 677 1045 5 0 0 0 - #0-amp10b -, f 5;
#X floatatom 662 1022 5 0 0 0 - #0-freq10b -, f 5;
#X text 697 1019 f;
#X text 713 1045 a;
#X obj 662 1099 *~;
#X obj 663 1077 osc~ 440;
#X floatatom 747 1045 5 0 0 0 - #0-amp11b -, f 5;
#X floatatom 732 1022 5 0 0 0 - #0-freq11b -, f 5;
#X text 767 1019 f;
#X text 783 1045 a;
#X obj 732 1099 *~;
#X obj 733 1077 osc~ 440;
#X floatatom 817 1045 5 0 0 0 - #0-amp12b -, f 5;
#X floatatom 802 1022 5 0 0 0 - #0-freq12b -, f 5;
#X text 837 1019 f;
#X text 853 1045 a;
#X obj 802 1099 *~;
#X obj 803 1077 osc~ 440;
#X text 34 994 1;
#X text 104 994 2;
#X text 174 994 3;
#X text 244 994 4;
#X text 315 994 5;
#X text 384 994 6;
#X text 454 994 7;
#X text 524 994 8;
#X text 604 994 9;
#X text 674 994 10;
#X text 744 994 11;
#X text 814 994 12;
#X obj 871 1075 osc~ 440;
#X floatatom 886 1045 5 0 0 0 - #0-amp13b -, f 5;
#X floatatom 871 1022 5 0 0 0 - #0-freq13b -, f 5;
#X text 906 1019 f;
#X text 922 1045 a;
#X obj 871 1099 *~;
#X obj 941 1075 osc~ 440;
#X floatatom 956 1045 5 0 0 0 - #0-amp14b -, f 5;
#X floatatom 941 1022 5 0 0 0 - #0-freq14b -, f 5;
#X text 976 1019 f;
#X text 992 1045 a;
#X obj 941 1099 *~;
#X obj 1011 1075 osc~ 440;
#X floatatom 1026 1045 5 0 0 0 - #0-amp15b -, f 5;
#X floatatom 1011 1022 5 0 0 0 - #0-freq15b -, f 5;
#X text 1046 1019 f;
#X text 1062 1045 a;
#X obj 1012 1099 *~;
#X floatatom 1096 1045 5 0 0 0 - #0-amp16b -, f 5;
#X floatatom 1081 1022 5 0 0 0 - #0-freq16b -, f 5;
#X text 1116 1019 f;
#X text 1132 1045 a;
#X obj 1081 1099 *~;
#X obj 1082 1077 osc~ 440;
#X floatatom 1166 1045 5 0 0 0 - #0-amp17b -, f 5;
#X floatatom 1151 1022 5 0 0 0 - #0-freq17b -, f 5;
#X text 1186 1019 f;
#X text 1202 1045 a;
#X obj 1151 1099 *~;
#X obj 1152 1077 osc~ 440;
#X floatatom 1236 1045 5 0 0 0 - #0-amp18b -, f 5;
#X floatatom 1221 1022 5 0 0 0 - #0-freq18b -, f 5;
#X text 1256 1019 f;
#X text 1272 1045 a;
#X obj 1221 1099 *~;
#X obj 1222 1077 osc~ 440;
#X obj 1292 1075 osc~ 440;
#X floatatom 1307 1045 5 0 0 0 - #0-amp19b -, f 5;
#X floatatom 1292 1022 5 0 0 0 - #0-freq19b -, f 5;
#X text 1327 1019 f;
#X text 1343 1045 a;
#X obj 1292 1099 *~;
#X obj 1362 1075 osc~ 440;
#X floatatom 1377 1045 5 0 0 0 - #0-amp20b -, f 5;
#X floatatom 1362 1022 5 0 0 0 - #0-freq20b -, f 5;
#X text 1397 1019 f;
#X text 1413 1045 a;
#X obj 1362 1099 *~;
#X obj 1432 1075 osc~ 440;
#X floatatom 1447 1045 5 0 0 0 - #0-amp21b -, f 5;
#X floatatom 1432 1022 5 0 0 0 - #0-freq21b -, f 5;
#X text 1467 1019 f;
#X text 1483 1045 a;
#X obj 1433 1099 *~;
#X floatatom 1517 1045 5 0 0 0 - #0-amp22b -, f 5;
#X floatatom 1502 1022 5 0 0 0 - #0-freq22b -, f 5;
#X text 1537 1019 f;
#X text 1553 1045 a;
#X obj 1502 1099 *~;
#X obj 1503 1077 osc~ 440;
#X floatatom 1587 1045 5 0 0 0 - #0-amp23b -, f 5;
#X floatatom 1572 1022 5 0 0 0 - #0-freq23b -, f 5;
#X text 1607 1019 f;
#X text 1623 1045 a;
#X obj 1572 1099 *~;
#X obj 1573 1077 osc~ 440;
#X floatatom 1657 1045 5 0 0 0 - #0-amp24b -, f 5;
#X floatatom 1642 1022 5 0 0 0 - #0-freq24b -, f 5;
#X text 1677 1019 f;
#X text 1693 1045 a;
#X obj 1642 1099 *~;
#X obj 1643 1077 osc~ 440;
#X text 874 994 13;
#X text 944 994 14;
#X text 1014 994 15;
#X text 1084 994 16;
#X text 1155 994 17;
#X text 1224 994 18;
#X text 1294 994 19;
#X text 1364 994 20;
#X text 1444 994 21;
#X text 1514 994 22;
#X text 1584 994 23;
#X text 1654 994 24;
#X obj 32 1591 outlet~;
#X obj 31 1496 *~;
#X obj 139 1493 / 127;
#X obj 142 1470 hsl 128 15 0 127 0 0 empty \$0-gainslider empty -2
-8 0 10 -262144 -1 -1 3342 1;
#X text 279 1468 gain;
#X obj 41 1244 osc~ 440;
#X floatatom 56 1214 5 0 0 0 - #0-amp25b -, f 5;
#X floatatom 41 1191 5 0 0 0 - #0-freq25b -, f 5;
#X text 76 1188 f;
#X text 92 1214 a;
#X obj 41 1268 *~;
#X obj 111 1244 osc~ 440;
#X floatatom 126 1214 5 0 0 0 - #0-amp26b -, f 5;
#X floatatom 111 1191 5 0 0 0 - #0-freq26b -, f 5;
#X text 146 1188 f;
#X text 162 1214 a;
#X obj 111 1268 *~;
#X obj 181 1244 osc~ 440;
#X floatatom 196 1214 5 0 0 0 - #0-amp27b -, f 5;
#X floatatom 181 1191 5 0 0 0 - #0-freq27b -, f 5;
#X text 216 1188 f;
#X text 232 1214 a;
#X obj 182 1268 *~;
#X floatatom 266 1214 5 0 0 0 - #0-amp28b -, f 5;
#X floatatom 251 1191 5 0 0 0 - #0-freq28b -, f 5;
#X text 286 1188 f;
#X text 302 1214 a;
#X obj 251 1268 *~;
#X obj 252 1246 osc~ 440;
#X floatatom 336 1214 5 0 0 0 - #0-amp29b -, f 5;
#X floatatom 321 1191 5 0 0 0 - #0-freq29b -, f 5;
#X text 356 1188 f;
#X text 372 1214 a;
#X obj 321 1268 *~;
#X obj 322 1246 osc~ 440;
#X floatatom 406 1214 5 0 0 0 - #0-amp30b -, f 5;
#X floatatom 391 1191 5 0 0 0 - #0-freq30b -, f 5;
#X text 426 1188 f;
#X text 442 1214 a;
#X obj 391 1268 *~;
#X obj 392 1246 osc~ 440;
#X obj 462 1244 osc~ 440;
#X floatatom 477 1214 5 0 0 0 - #0-amp31b -, f 5;
#X floatatom 462 1191 5 0 0 0 - #0-freq31b -, f 5;
#X text 497 1188 f;
#X text 513 1214 a;
#X obj 462 1268 *~;
#X obj 532 1244 osc~ 440;
#X floatatom 547 1214 5 0 0 0 - #0-amp32b -, f 5;
#X floatatom 532 1191 5 0 0 0 - #0-freq32b -, f 5;
#X text 567 1188 f;
#X text 583 1214 a;
#X obj 532 1268 *~;
#X obj 602 1244 osc~ 440;
#X floatatom 617 1214 5 0 0 0 - #0-amp33b -, f 5;
#X floatatom 602 1191 5 0 0 0 - #0-freq33b -, f 5;
#X text 637 1188 f;
#X text 653 1214 a;
#X obj 603 1268 *~;
#X floatatom 687 1214 5 0 0 0 - #0-amp34b -, f 5;
#X floatatom 672 1191 5 0 0 0 - #0-freq34b -, f 5;
#X text 707 1188 f;
#X text 723 1214 a;
#X obj 672 1268 *~;
#X obj 673 1246 osc~ 440;
#X floatatom 757 1214 5 0 0 0 - #0-amp35b -, f 5;
#X floatatom 742 1191 5 0 0 0 - #0-freq35b -, f 5;
#X text 777 1188 f;
#X text 793 1214 a;
#X obj 742 1268 *~;
#X obj 743 1246 osc~ 440;
#X floatatom 827 1214 5 0 0 0 - #0-amp36b -, f 5;
#X floatatom 812 1191 5 0 0 0 - #0-freq36b -, f 5;
#X text 847 1188 f;
#X text 863 1214 a;
#X obj 812 1268 *~;
#X obj 813 1246 osc~ 440;
#X text 873 1214 a;
#X obj 891 1244 osc~ 440;
#X floatatom 906 1214 5 0 0 0 - #0-amp37b -, f 5;
#X floatatom 891 1191 5 0 0 0 - #0-freq37b -, f 5;
#X text 926 1188 f;
#X text 942 1214 a;
#X obj 891 1268 *~;
#X obj 961 1244 osc~ 440;
#X floatatom 976 1214 5 0 0 0 - #0-amp38b -, f 5;
#X floatatom 961 1191 5 0 0 0 - #0-freq38b -, f 5;
#X text 996 1188 f;
#X text 1012 1214 a;
#X obj 961 1268 *~;
#X obj 1031 1244 osc~ 440;
#X floatatom 1046 1214 5 0 0 0 - #0-amp39b -, f 5;
#X floatatom 1031 1191 5 0 0 0 - #0-freq39b -, f 5;
#X text 1066 1188 f;
#X text 1082 1214 a;
#X obj 1032 1268 *~;
#X floatatom 1116 1214 5 0 0 0 - #0-amp40b -, f 5;
#X floatatom 1101 1191 5 0 0 0 - #0-freq40b -, f 5;
#X text 1136 1188 f;
#X text 1152 1214 a;
#X obj 1101 1268 *~;
#X obj 1102 1246 osc~ 440;
#X floatatom 1186 1214 5 0 0 0 - #0-amp41b -, f 5;
#X floatatom 1171 1191 5 0 0 0 - #0-freq41b -, f 5;
#X text 1206 1188 f;
#X text 1222 1214 a;
#X obj 1171 1268 *~;
#X obj 1172 1246 osc~ 440;
#X floatatom 1256 1214 5 0 0 0 - #0-amp42b -, f 5;
#X floatatom 1241 1191 5 0 0 0 - #0-freq42b -, f 5;
#X text 1276 1188 f;
#X text 1292 1214 a;
#X obj 1241 1268 *~;
#X obj 1242 1246 osc~ 440;
#X obj 1312 1244 osc~ 440;
#X floatatom 1327 1214 5 0 0 0 - #0-amp43b -, f 5;
#X floatatom 1312 1191 5 0 0 0 - #0-freq43b -, f 5;
#X text 1347 1188 f;
#X text 1363 1214 a;
#X obj 1312 1268 *~;
#X obj 1382 1244 osc~ 440;
#X floatatom 1397 1214 5 0 0 0 - #0-amp44b -, f 5;
#X floatatom 1382 1191 5 0 0 0 - #0-freq44b -, f 5;
#X text 1417 1188 f;
#X text 1433 1214 a;
#X obj 1382 1268 *~;
#X obj 1452 1244 osc~ 440;
#X floatatom 1467 1214 5 0 0 0 - #0-amp45b -, f 5;
#X floatatom 1452 1191 5 0 0 0 - #0-freq45b -, f 5;
#X text 1487 1188 f;
#X text 1503 1214 a;
#X obj 1453 1268 *~;
#X floatatom 1537 1214 5 0 0 0 - #0-amp46b -, f 5;
#X floatatom 1522 1191 5 0 0 0 - #0-freq46b -, f 5;
#X text 1557 1188 f;
#X text 1573 1214 a;
#X obj 1522 1268 *~;
#X obj 1523 1246 osc~ 440;
#X floatatom 1607 1214 5 0 0 0 - #0-amp47b -, f 5;
#X floatatom 1592 1191 5 0 0 0 - #0-freq47b -, f 5;
#X text 1627 1188 f;
#X text 1643 1214 a;
#X obj 1592 1268 *~;
#X obj 1593 1246 osc~ 440;
#X floatatom 1677 1214 5 0 0 0 - #0-amp48b -, f 5;
#X floatatom 1662 1191 5 0 0 0 - #0-freq48b -, f 5;
#X text 1697 1188 f;
#X text 1713 1214 a;
#X obj 1662 1268 *~;
#X obj 1663 1246 osc~ 440;
#X text 46 1166 25;
#X text 111 1166 26;
#X text 185 1166 27;
#X text 248 1166 28;
#X text 323 1166 29;
#X text 396 1166 30;
#X text 465 1165 31;
#X text 530 1165 32;
#X text 604 1165 33;
#X text 667 1165 34;
#X text 741 1165 35;
#X text 815 1165 36;
#X text 895 1163 37;
#X text 970 1163 38;
#X text 1034 1163 39;
#X text 1107 1163 40;
#X text 1172 1163 41;
#X text 1245 1163 42;
#X text 1313 1163 43;
#X text 1388 1163 44;
#X text 1452 1163 45;
#X text 1525 1163 46;
#X text 1599 1163 47;
#X text 1663 1163 48;
#N canvas 25 23 592 344 freq.calc.sine 0;
#X obj 246 291 send, f 5;
#X obj 148 52 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 148 110 send \$0-freq1a;
#X msg 148 84 440;
#N canvas 25 23 869 484 for.loop.2-48 0;
#X obj 54 111 until;
#X obj 115 133 + 1;
#X text 142 133 iterator \, increase by 1 each time [until] sends a
"bang";
#X text 341 207 this mechanism resets the iterator to "1" when the
max iterations have occured, f 40;
#X obj 328 233 loadbang;
#X obj 54 160 trigger f f;
#X text 131 157 send the iterator first to the loop mechanism \, then
to the [sel] object to test if the loop is over (and reset the iterator
back to 1);
#X obj 54 88 t f f;
#X obj 54 20 inlet;
#X obj 117 244 outlet;
#X msg 295 233 2;
#X obj 54 133 float 2;
#X msg 54 67 47;
#X obj 295 211 sel 48;
#X connect 0 0 11 0;
#X connect 1 0 11 1;
#X connect 4 0 10 0;
#X connect 5 0 13 0;
#X connect 5 1 9 0;
#X connect 7 0 0 0;
#X connect 8 0 12 0;
#X connect 10 0 11 1;
#X connect 11 0 1 0;
#X connect 11 0 5 0;
#X connect 12 0 7 0;
#X connect 13 0 10 0;
#X restore 246 87 pd for.loop.2-48;
#X msg 246 250 0;
#X obj 246 160 float \$0;
#X obj 246 134 t b s;
#X obj 246 212 t b s;
#X obj 246 110 makefilename %%d-freq%da;
#X obj 246 186 makefilename;
#X msg 307 162 set \$1;
#X text 24 82 set first partial to the fundamental, f 18;
#X text 363 78 set the remaining partials to zero, f 18;
#X obj 145 27 inlet;
#X connect 1 0 4 0;
#X connect 1 0 3 0;
#X connect 3 0 2 0;
#X connect 4 0 9 0;
#X connect 5 0 0 0;
#X connect 6 0 10 0;
#X connect 7 0 6 0;
#X connect 7 1 11 0;
#X connect 8 0 5 0;
#X connect 8 1 0 1;
#X connect 9 0 7 0;
#X connect 10 0 8 0;
#X connect 11 0 10 0;
#X connect 14 0 1 0;
#X restore 1304 104 pd freq.calc.sine;
#N canvas 26 23 822 657 amp.calc.sine 0;
#X obj 251 309 send, f 5;
#X obj 153 57 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#N canvas 25 23 869 484 for.loop.2-48 0;
#X obj 54 111 until;
#X obj 115 133 + 1;
#X text 142 133 iterator \, increase by 1 each time [until] sends a
"bang";
#X text 341 207 this mechanism resets the iterator to "1" when the
max iterations have occured, f 40;
#X obj 328 233 loadbang;
#X obj 54 160 trigger f f;
#X text 131 157 send the iterator first to the loop mechanism \, then
to the [sel] object to test if the loop is over (and reset the iterator
back to 1);
#X obj 54 88 t f f;
#X obj 54 20 inlet;
#X obj 117 244 outlet;
#X msg 295 233 2;
#X obj 54 133 float 2;
#X msg 54 67 47;
#X obj 295 211 sel 48;
#X connect 0 0 11 0;
#X connect 1 0 11 1;
#X connect 4 0 10 0;
#X connect 5 0 13 0;
#X connect 5 1 9 0;
#X connect 7 0 0 0;
#X connect 8 0 12 0;
#X connect 10 0 11 1;
#X connect 11 0 1 0;
#X connect 11 0 5 0;
#X connect 12 0 7 0;
#X connect 13 0 10 0;
#X restore 251 122 pd for.loop.2-48;
#X msg 251 281 0;
#X obj 251 195 float \$0;
#X obj 251 169 t b s;
#X obj 251 247 t b s;
#X obj 251 221 makefilename;
#X msg 312 197 set \$1;
#X text 368 113 set the remaining partials to zero, f 18;
#X msg 153 89 1;
#X text 185 59 set first partial amplitude to 1, f 17;
#X obj 251 145 makefilename %%d-amp%da;
#X obj 153 125 send \$0-amp1a;
#X obj 152 39 inlet;
#X connect 1 0 2 0;
#X connect 1 0 10 0;
#X connect 2 0 12 0;
#X connect 3 0 0 0;
#X connect 4 0 7 0;
#X connect 5 0 4 0;
#X connect 5 1 8 0;
#X connect 6 0 3 0;
#X connect 6 1 0 1;
#X connect 7 0 6 0;
#X connect 8 0 7 0;
#X connect 10 0 13 0;
#X connect 12 0 5 0;
#X connect 14 0 1 0;
#X restore 1424 104 pd amp.calc.sine;
#X obj 1301 397 bng 15 250 50 0 empty \$0-harmonicspec_c empty 17 7
0 10 -262144 -1 -1;
#X obj 1301 422 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 1461 417 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text 1301 373 Harmonic Spectrum C (Rectangle Wave) Preset;
#N canvas 25 23 1415 855 freq.calc.rect 0;
#X obj 54 111 until;
#X obj 115 133 + 1;
#X obj 54 133 float 1;
#X obj 189 386 f;
#X text 226 386 the iterator is stored here as an index to be used
by the [route] object, f 72;
#X text 142 133 iterator \, increase by 1 each time [until] sends a
"bang";
#X obj 117 351 trigger b f;
#X obj 135 427 pack f f;
#X text 196 425 combine the iterator/partial number with the calculated
partial amplitude value as a pair for [route];
#X msg 295 233 1;
#X obj 295 211 sel 48;
#X text 341 207 this mechanism resets the iterator to "1" when the
max iterations have occured, f 40;
#X obj 328 233 loadbang;
#X obj 54 160 trigger f f;
#X text 131 157 send the iterator first to the loop mechanism \, then
to the [sel] object to test if the loop is over (and reset the iterator
back to 1);
#X obj 117 268 t f f, f 15;
#X obj 24 468 route 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
43 44 45 46 47 48, f 227;
#X obj 54 88 t f f;
#X msg 54 67 48;
#X obj 143 19 inlet;
#X text 184 18 Fundamental Frequency;
#X obj 54 20 inlet;
#X obj 24 524 send \$0-freq1a;
#X obj 220 524 send \$0-freq3a;
#X obj 414 524 send \$0-freq5a;
#X obj 610 524 send \$0-freq7a;
#X obj 804 524 send \$0-freq9a;
#X obj 997 524 send \$0-freq11a;
#X obj 1191 524 send \$0-freq13a;
#X obj 1386 524 send \$0-freq15a;
#X obj 24 551 send \$0-freq17a;
#X obj 220 551 send \$0-freq19a;
#X obj 414 551 send \$0-freq21a;
#X obj 611 551 send \$0-freq23a;
#X obj 805 551 send \$0-freq25a;
#X obj 998 551 send \$0-freq27a;
#X obj 1191 551 send \$0-freq29a;
#X obj 1386 551 send \$0-freq31a;
#X obj 24 578 send \$0-freq33a;
#X obj 220 578 send \$0-freq35a;
#X obj 415 578 send \$0-freq37a;
#X obj 611 578 send \$0-freq39a;
#X obj 807 578 send \$0-freq41a;
#X obj 1001 578 send \$0-freq43a;
#X obj 1194 578 send \$0-freq45a;
#X obj 1388 578 send \$0-freq47a;
#X obj 117 312 * 440;
#X connect 0 0 2 0;
#X connect 1 0 2 1;
#X connect 2 0 1 0;
#X connect 2 0 13 0;
#X connect 3 0 7 0;
#X connect 6 0 3 0;
#X connect 6 1 7 1;
#X connect 7 0 16 0;
#X connect 9 0 2 1;
#X connect 10 0 9 0;
#X connect 12 0 9 0;
#X connect 13 0 10 0;
#X connect 13 1 15 0;
#X connect 15 0 46 0;
#X connect 15 1 3 1;
#X connect 16 0 22 0;
#X connect 16 2 23 0;
#X connect 16 4 24 0;
#X connect 16 6 25 0;
#X connect 16 8 26 0;
#X connect 16 10 27 0;
#X connect 16 12 28 0;
#X connect 16 14 29 0;
#X connect 16 16 30 0;
#X connect 16 18 31 0;
#X connect 16 20 32 0;
#X connect 16 22 33 0;
#X connect 16 24 34 0;
#X connect 16 26 35 0;
#X connect 16 28 36 0;
#X connect 16 30 37 0;
#X connect 16 32 38 0;
#X connect 16 34 39 0;
#X connect 16 36 40 0;
#X connect 16 38 41 0;
#X connect 16 40 42 0;
#X connect 16 42 43 0;
#X connect 16 44 44 0;
#X connect 16 46 45 0;
#X connect 17 0 0 0;
#X connect 17 1 10 1;
#X connect 18 0 17 0;
#X connect 19 0 46 1;
#X connect 21 0 18 0;
#X connect 46 0 6 0;
#X restore 1301 447 pd freq.calc.rect;
#N canvas 25 23 1415 855 amp.calc.rect 0;
#X obj 52 91 until;
#X obj 113 113 + 1;
#X obj 52 113 float 1;
#X obj 115 298 /;
#X obj 187 386 f;
#X text 224 386 the iterator is stored here as an index to be used
by the [route] object, f 72;
#X text 140 113 iterator \, increase by 1 each time [until] sends a
"bang";
#X obj 115 351 trigger b f;
#X obj 133 427 pack f f;
#X text 194 425 combine the iterator/partial number with the calculated
partial amplitude value as a pair for [route];
#X msg 293 213 1;
#X obj 293 191 sel 48;
#X text 339 187 this mechanism resets the iterator to "1" when the
max iterations have occured, f 40;
#X obj 326 213 loadbang;
#X obj 52 140 trigger f f;
#X text 129 137 send the iterator first to the loop mechanism \, then
to the [sel] object to test if the loop is over (and reset the iterator
back to 1);
#X obj 115 271 swap 1;
#X floatatom 115 325 5 0 0 0 - - -, f 5;
#X obj 52 68 t f f;
#X msg 52 47 48;
#X obj 24 538 route 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
43 44 45 46 47 48, f 227;
#X obj 24 674 send \$0-amp1a;
#X obj 123 674 send \$0-amp2a;
#X obj 220 674 send \$0-amp3a;
#X obj 317 674 send \$0-amp4a;
#X obj 414 674 send \$0-amp5a;
#X obj 511 674 send \$0-amp6a;
#X obj 610 674 send \$0-amp7a;
#X obj 707 674 send \$0-amp8a;
#X obj 804 674 send \$0-amp9a;
#X obj 901 674 send \$0-amp10a;
#X obj 997 674 send \$0-amp11a;
#X obj 1095 674 send \$0-amp12a;
#X obj 1191 674 send \$0-amp13a;
#X obj 1386 674 send \$0-amp15a;
#X obj 1484 673 send \$0-amp16a;
#X obj 24 781 send \$0-amp17a;
#X obj 123 781 send \$0-amp18a;
#X obj 220 781 send \$0-amp19a;
#X obj 317 781 send \$0-amp20a;
#X obj 414 781 send \$0-amp21a;
#X obj 511 781 send \$0-amp22a;
#X obj 611 781 send \$0-amp23a;
#X obj 708 781 send \$0-amp24a;
#X obj 805 781 send \$0-amp25a;
#X obj 902 781 send \$0-amp26a;
#X obj 998 781 send \$0-amp27a;
#X obj 1191 781 send \$0-amp29a;
#X obj 1288 781 send \$0-amp30a;
#X obj 1386 781 send \$0-amp31a;
#X obj 1483 781 send \$0-amp32a;
#X obj 24 908 send \$0-amp33a;
#X obj 123 908 send \$0-amp34a;
#X obj 220 908 send \$0-amp35a;
#X obj 319 908 send \$0-amp36a;
#X obj 415 908 send \$0-amp37a;
#X obj 511 908 send \$0-amp38a;
#X obj 611 908 send \$0-amp39a;
#X obj 709 908 send \$0-amp40a;
#X obj 807 908 send \$0-amp41a;
#X obj 904 908 send \$0-amp42a;
#X obj 1001 908 send \$0-amp43a;
#X obj 1291 908 send \$0-amp46a;
#X obj 1388 908 send \$0-amp47a;
#X obj 1485 908 send \$0-amp48a;
#X obj 52 20 inlet;
#X obj 1095 781 send \$0-amp28a;
#X obj 1097 908 send \$0-amp44a;
#X obj 1194 908 send \$0-amp45a;
#X obj 133 449 t l b;
#X msg 160 474 0;
#X obj 1288 674 send \$0-amp14a;
#X text 195 473 All even partials need to be zeroed;
#X obj 115 188 t f f, f 15;
#X text 145 298 divide 1/n \, where n is the interator (and the partial
number), f 61;
#X connect 0 0 2 0;
#X connect 1 0 2 1;
#X connect 2 0 1 0;
#X connect 2 0 14 0;
#X connect 3 0 17 0;
#X connect 4 0 8 0;
#X connect 7 0 4 0;
#X connect 7 1 8 1;
#X connect 8 0 69 0;
#X connect 10 0 2 1;
#X connect 11 0 10 0;
#X connect 13 0 10 0;
#X connect 14 0 11 0;
#X connect 14 1 73 0;
#X connect 16 0 3 0;
#X connect 16 1 3 1;
#X connect 17 0 7 0;
#X connect 18 0 0 0;
#X connect 18 1 11 1;
#X connect 19 0 18 0;
#X connect 20 0 21 0;
#X connect 20 2 23 0;
#X connect 20 4 25 0;
#X connect 20 6 27 0;
#X connect 20 8 29 0;
#X connect 20 10 31 0;
#X connect 20 12 33 0;
#X connect 20 14 34 0;
#X connect 20 16 36 0;
#X connect 20 18 38 0;
#X connect 20 20 40 0;
#X connect 20 22 42 0;
#X connect 20 24 44 0;
#X connect 20 26 46 0;
#X connect 20 28 47 0;
#X connect 20 30 49 0;
#X connect 20 32 51 0;
#X connect 20 34 53 0;
#X connect 20 36 55 0;
#X connect 20 38 57 0;
#X connect 20 40 59 0;
#X connect 20 42 61 0;
#X connect 20 44 68 0;
#X connect 20 46 63 0;
#X connect 65 0 19 0;
#X connect 69 0 20 0;
#X connect 69 1 70 0;
#X connect 70 0 22 0;
#X connect 70 0 37 0;
#X connect 70 0 52 0;
#X connect 70 0 24 0;
#X connect 70 0 39 0;
#X connect 70 0 54 0;
#X connect 70 0 26 0;
#X connect 70 0 41 0;
#X connect 70 0 56 0;
#X connect 70 0 28 0;
#X connect 70 0 43 0;
#X connect 70 0 58 0;
#X connect 70 0 30 0;
#X connect 70 0 45 0;
#X connect 70 0 60 0;
#X connect 70 0 32 0;
#X connect 70 0 66 0;
#X connect 70 0 67 0;
#X connect 70 0 71 0;
#X connect 70 0 48 0;
#X connect 70 0 62 0;
#X connect 70 0 35 0;
#X connect 70 0 50 0;
#X connect 70 0 64 0;
#X connect 73 0 16 0;
#X connect 73 1 4 1;
#X restore 1461 442 pd amp.calc.rect;
#X obj 1308 516 bng 15 250 50 0 empty \$0-inharmonicspec empty 17 7
0 10 -262144 -1 -1;
#N canvas 25 23 592 344 freq.calc.inharm 0;
#X obj 246 291 send, f 5;
#X obj 244 64 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 246 160 float \$0;
#X obj 246 134 t b s;
#X obj 246 212 t b s;
#X obj 246 110 makefilename %%d-freq%da;
#X obj 246 186 makefilename;
#X msg 307 162 set \$1;
#X obj 241 39 inlet;
#N canvas 25 23 869 484 for.loop.1-48 0;
#X obj 54 111 until;
#X obj 115 133 + 1;
#X text 142 133 iterator \, increase by 1 each time [until] sends a
"bang";
#X text 341 207 this mechanism resets the iterator to "1" when the
max iterations have occured, f 40;
#X obj 328 233 loadbang;
#X obj 54 160 trigger f f;
#X text 131 157 send the iterator first to the loop mechanism \, then
to the [sel] object to test if the loop is over (and reset the iterator
back to 1);
#X obj 54 88 t f f;
#X obj 54 20 inlet;
#X obj 117 244 outlet;
#X obj 295 211 sel 48;
#X msg 54 67 48;
#X msg 295 233 1;
#X obj 54 133 float 1;
#X connect 0 0 13 0;
#X connect 1 0 13 1;
#X connect 4 0 12 0;
#X connect 5 0 10 0;
#X connect 5 1 9 0;
#X connect 7 0 0 0;
#X connect 8 0 11 0;
#X connect 10 0 12 0;
#X connect 11 0 7 0;
#X connect 12 0 13 1;
#X connect 13 0 1 0;
#X connect 13 0 5 0;
#X restore 246 87 pd for.loop.1-48;
#X obj 195 238 random 20001;
#X text 19 180 randomly choose partial frequency;
#X connect 1 0 9 0;
#X connect 2 0 6 0;
#X connect 3 0 2 0;
#X connect 3 1 7 0;
#X connect 4 0 10 0;
#X connect 4 1 0 1;
#X connect 5 0 3 0;
#X connect 6 0 4 0;
#X connect 7 0 6 0;
#X connect 8 0 1 0;
#X connect 9 0 5 0;
#X connect 10 0 0 0;
#X restore 1308 547 pd freq.calc.inharm;
#N canvas 26 23 907 626 amp.calc.inharm 0;
#X obj 546 566 send, f 5;
#X obj 428 119 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 428 215 float \$0;
#X obj 428 189 t b s;
#X obj 428 241 makefilename;
#X msg 489 217 set \$1;
#X obj 428 94 inlet;
#N canvas 25 23 869 484 for.loop.1-48 0;
#X obj 54 111 until;
#X obj 115 133 + 1;
#X text 142 133 iterator \, increase by 1 each time [until] sends a
"bang";
#X text 341 207 this mechanism resets the iterator to "1" when the
max iterations have occured, f 40;
#X obj 328 233 loadbang;
#X obj 54 160 trigger f f;
#X text 131 157 send the iterator first to the loop mechanism \, then
to the [sel] object to test if the loop is over (and reset the iterator
back to 1);
#X obj 54 88 t f f;
#X obj 54 20 inlet;
#X obj 117 244 outlet;
#X obj 295 211 sel 48;
#X msg 54 67 48;
#X msg 295 233 1;
#X obj 54 133 float 1;
#X connect 0 0 13 0;
#X connect 1 0 13 1;
#X connect 4 0 12 0;
#X connect 5 0 10 0;
#X connect 5 1 9 0;
#X connect 7 0 0 0;
#X connect 8 0 11 0;
#X connect 10 0 12 0;
#X connect 11 0 7 0;
#X connect 12 0 13 1;
#X connect 13 0 1 0;
#X connect 13 0 5 0;
#X restore 428 142 pd for.loop.1-48;
#X text 172 266 randomly choose partial amp (weighted low so that our
signal won't be too loud), f 28;
#X obj 283 370 random 101;
#X obj 283 391 / 100;
#X obj 267 518 f;
#X obj 428 267 t b s;
#X obj 231 334 t b b;
#X obj 199 370 random 101;
#X obj 199 391 / 100;
#X obj 188 518 f;
#X obj 223 456 sel 1 0;
#X obj 223 422 <;
#X text 276 445 If left number is less \, send left number \, else
send right number;
#X text 78 508 store the two generated random values, f 17;
#X obj 745 564 print;
#X obj 737 520 pack f s;
#X obj 428 165 makefilename %%d-amp%da;
#X obj 248 573 * 0.25;
#X text 114 572 Scale all amplitudes to prevent clipping, f 20;
#X connect 1 0 7 0;
#X connect 2 0 4 0;
#X connect 3 0 2 0;
#X connect 3 1 5 0;
#X connect 4 0 12 0;
#X connect 5 0 4 0;
#X connect 6 0 1 0;
#X connect 7 0 23 0;
#X connect 9 0 10 0;
#X connect 10 0 11 1;
#X connect 10 0 18 1;
#X connect 11 0 24 0;
#X connect 12 0 13 0;
#X connect 12 1 0 1;
#X connect 13 0 14 0;
#X connect 13 1 9 0;
#X connect 14 0 15 0;
#X connect 15 0 16 1;
#X connect 15 0 18 0;
#X connect 16 0 24 0;
#X connect 17 0 16 0;
#X connect 17 1 11 0;
#X connect 18 0 17 0;
#X connect 22 0 21 0;
#X connect 23 0 3 0;
#X connect 24 0 0 0;
#X restore 1450 546 pd amp.calc.inharm;
#X obj 32 1328 catch~ additive;
#X obj 31 1129 throw~ additive;
#X obj 32 1538 clip~ -0.99 0.99;
#X obj 41 1295 throw~ additive;
#X obj 1135 246 vsl 15 115 0 127 0 1 \$0-gainslider empty Gain/Volume
-25 -10 0 10 -4032 -1 -1 3000 1;
#X obj 297 1580 dac~ 1 2;
#X text 1302 133 Harmonic Spectrum A (Triangle Wave) Preset;
#X text 1304 242 Harmonic Spectrum B (Sawtooth Wave) Preset;
#N canvas 551 178 822 657 amp.calc.sine 0;
#X obj 251 309 send, f 5;
#X obj 153 57 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#N canvas 26 23 869 484 for.loop.2-48 0;
#X obj 54 111 until;
#X obj 115 133 + 1;
#X text 142 133 iterator \, increase by 1 each time [until] sends a
"bang";
#X text 341 207 this mechanism resets the iterator to "1" when the
max iterations have occured, f 40;
#X obj 328 233 loadbang;
#X obj 54 160 trigger f f;
#X text 131 157 send the iterator first to the loop mechanism \, then
to the [sel] object to test if the loop is over (and reset the iterator
back to 1);
#X obj 54 88 t f f;
#X obj 54 20 inlet;
#X obj 117 244 outlet;
#X obj 295 211 sel 48;
#X obj 54 133 float 1;
#X msg 295 233 1;
#X msg 54 67 48;
#X connect 0 0 11 0;
#X connect 1 0 11 1;
#X connect 4 0 12 0;
#X connect 5 0 10 0;
#X connect 5 1 9 0;
#X connect 7 0 0 0;
#X connect 8 0 13 0;
#X connect 10 0 12 0;
#X connect 11 0 1 0;
#X connect 11 0 5 0;
#X connect 12 0 11 1;
#X connect 13 0 7 0;
#X restore 251 122 pd for.loop.2-48;
#X msg 251 281 0;
#X obj 251 195 float \$0;
#X obj 251 169 t b s;
#X obj 251 247 t b s;
#X obj 251 221 makefilename;
#X msg 312 197 set \$1;
#X obj 251 145 makefilename %%d-amp%da;
#X obj 152 39 inlet;
#X text 348 77 set the amp of all partials to 0;
#X connect 1 0 2 0;
#X connect 2 0 9 0;
#X connect 3 0 0 0;
#X connect 4 0 7 0;
#X connect 5 0 4 0;
#X connect 5 1 8 0;
#X connect 6 0 3 0;
#X connect 6 1 0 1;
#X connect 7 0 6 0;
#X connect 8 0 7 0;
#X connect 9 0 5 0;
#X connect 10 0 1 0;
#X restore 1424 -24 pd amp.calc.sine;
#N canvas 27 23 592 344 freq.calc.init 0;
#X obj 151 291 send, f 5;
#X obj 148 52 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X msg 151 250 0;
#X obj 151 160 float \$0;
#X obj 151 134 t b s;
#X obj 151 212 t b s;
#X obj 151 110 makefilename %%d-freq%da;
#X obj 151 186 makefilename;
#X msg 215 161 set \$1;
#X obj 145 27 inlet;
#N canvas 26 23 869 484 for.loop.1-48 0;
#X obj 54 111 until;
#X obj 115 133 + 1;
#X text 142 133 iterator \, increase by 1 each time [until] sends a
"bang";
#X text 341 207 this mechanism resets the iterator to "1" when the
max iterations have occured, f 40;
#X obj 328 233 loadbang;
#X obj 54 160 trigger f f;
#X text 131 157 send the iterator first to the loop mechanism \, then
to the [sel] object to test if the loop is over (and reset the iterator
back to 1);
#X obj 54 88 t f f;
#X obj 54 20 inlet;
#X obj 117 244 outlet;
#X obj 295 211 sel 48;
#X obj 54 133 float 1;
#X msg 54 67 48;
#X msg 295 233 1;
#X connect 0 0 11 0;
#X connect 1 0 11 1;
#X connect 4 0 13 0;
#X connect 5 0 10 0;
#X connect 5 1 9 0;
#X connect 7 0 0 0;
#X connect 8 0 12 0;
#X connect 10 0 13 0;
#X connect 11 0 1 0;
#X connect 11 0 5 0;
#X connect 12 0 7 0;
#X connect 13 0 11 1;
#X restore 151 87 pd for.loop.1-48;
#X text 246 32 sets all partials to 0;
#X connect 1 0 10 0;
#X connect 2 0 0 0;
#X connect 3 0 7 0;
#X connect 4 0 3 0;
#X connect 4 1 8 0;
#X connect 5 0 2 0;
#X connect 5 1 0 1;
#X connect 6 0 4 0;
#X connect 7 0 5 0;
#X connect 8 0 7 0;
#X connect 9 0 1 0;
#X connect 10 0 6 0;
#X restore 1304 -24 pd freq.calc.init;
#X text 1301 -3 All topmost [bang] buttons are remotely triggered by
the button's in the UI;
#X text 105 54 User interface -----------------------------------------------------------------------------------------------------------------------------------------------------------------------
, f 182;
#X obj 1304 -56 bng 15 250 50 0 empty \$0-idealnoise empty 17 7 0 10
-262144 -1 -1;
#X text 1300 -112 Intialize;
#X obj 1302 -86 loadbang;
#X text 1305 488 Inharmonic Spectrum;
#X obj 1308 609 bng 15 250 50 0 empty \$0-noise empty 17 7 0 10 -262144
-1 -1;
#N canvas 480 54 847 767 freq.calc.noise 0;
#X obj 286 633 send, f 5;
#X obj 282 183 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 286 502 float \$0;
#X obj 286 476 t b s;
#X obj 286 554 t b s;
#X obj 286 452 makefilename %%d-freq%da;
#X obj 286 528 makefilename;
#X msg 347 504 set \$1;
#X obj 282 161 inlet;
#N canvas 25 23 869 484 for.loop.1-48 0;
#X obj 54 111 until;
#X obj 115 133 + 1;
#X text 142 133 iterator \, increase by 1 each time [until] sends a
"bang";
#X text 341 207 this mechanism resets the iterator to "1" when the
max iterations have occured, f 40;
#X obj 328 233 loadbang;
#X obj 54 160 trigger f f;
#X text 131 157 send the iterator first to the loop mechanism \, then
to the [sel] object to test if the loop is over (and reset the iterator
back to 1);
#X obj 54 88 t f f;
#X obj 54 20 inlet;
#X obj 117 244 outlet;
#X obj 295 211 sel 48;
#X msg 54 67 48;
#X msg 295 233 1;
#X obj 54 133 float 1;
#X connect 0 0 13 0;
#X connect 1 0 13 1;
#X connect 4 0 12 0;
#X connect 5 0 10 0;
#X connect 5 1 9 0;
#X connect 7 0 0 0;
#X connect 8 0 11 0;
#X connect 10 0 12 0;
#X connect 11 0 7 0;
#X connect 12 0 13 1;
#X connect 13 0 1 0;
#X connect 13 0 5 0;
#X restore 286 429 pd for.loop.1-48;
#X obj 235 580 random 20001;
#X text 6 586 randomly choose partial frequency;
#X obj 560 178 bng 15 250 50 0 empty \$0-sine empty 17 7 0 10 -262144
-1 -1;
#X text 583 176 From Sine;
#X msg 513 346 0;
#X obj 560 204 bng 15 250 50 0 empty \$0-harmonicspec_b empty 17 7
0 10 -262144 -1 -1;
#X text 583 202 From Tri;
#X obj 560 230 bng 15 250 50 0 empty \$0-harmonicspec_a empty 17 7
0 10 -262144 -1 -1;
#X text 583 228 From Saw;
#X obj 560 256 bng 15 250 50 0 empty \$0-harmonicspec_c empty 17 7
0 10 -262144 -1 -1;
#X text 583 254 From Rect;
#X obj 560 282 bng 15 250 50 0 empty \$0-inharmonicspec empty 17 7
0 10 -262144 -1 -1;
#X text 583 280 From Inharm;
#X text 489 132 These buttons are from all the other presets \, which
will turn off the [metro] object, f 34;
#X msg 282 204 1;
#X text 301 36 The only difference between the "Inharmonic Spectrum"
and white noise is that the white noise module continuously generates
random values \, which then gives an even distribution of random (whole
number) frequencies \, thus approaching white noise. This continual
generation is provided by [metro].;
#X obj 282 387 metro 10;
#X text 267 129 When the white noise preset is triggered \, turn metro
on, f 28;
#X text 401 501 here \, the "set" command sets [makefilename] as if
its argument was the symbol output above. Then the \$0 locally generated
unique number replaces %d in the above symbol;
#X text 445 438 generates the symbol "%d-freqNa" where N is 1-48 generated
from the for loop above. the portion "%%d" from the argument is translated
to just "%d" so that we can use it as a replaceable element below;
#X obj 1101 109 bng 15 250 50 0 empty \$0-idealnoise empty 17 7 0 10
-262144 -1 -1;
#X obj 562 306 bng 15 250 50 0 empty \$0-idealnoise empty 17 7 0 10
-262144 -1 -1;
#X connect 1 0 24 0;
#X connect 2 0 6 0;
#X connect 3 0 2 0;
#X connect 3 1 7 0;
#X connect 4 0 10 0;
#X connect 4 1 0 1;
#X connect 5 0 3 0;
#X connect 6 0 4 0;
#X connect 7 0 6 0;
#X connect 8 0 1 0;
#X connect 9 0 5 0;
#X connect 10 0 0 0;
#X connect 12 0 14 0;
#X connect 14 0 26 0;
#X connect 15 0 14 0;
#X connect 17 0 14 0;
#X connect 19 0 14 0;
#X connect 21 0 14 0;
#X connect 24 0 26 0;
#X connect 26 0 9 0;
#X connect 31 0 14 0;
#X restore 1308 647 pd freq.calc.noise;
#N canvas -1281 -280 847 767 amp.calc.noise 0;
#X obj 296 675 send, f 5;
#X obj 282 183 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 286 502 float \$0;
#X obj 286 476 t b s;
#X obj 286 554 t b s;
#X obj 286 528 makefilename;
#X msg 347 504 set \$1;
#X obj 282 161 inlet;
#N canvas 25 23 869 484 for.loop.1-48 0;
#X obj 54 111 until;
#X obj 115 133 + 1;
#X text 142 133 iterator \, increase by 1 each time [until] sends a
"bang";
#X text 341 207 this mechanism resets the iterator to "1" when the
max iterations have occured, f 40;
#X obj 328 233 loadbang;
#X obj 54 160 trigger f f;
#X text 131 157 send the iterator first to the loop mechanism \, then
to the [sel] object to test if the loop is over (and reset the iterator
back to 1);
#X obj 54 88 t f f;
#X obj 54 20 inlet;
#X obj 117 244 outlet;
#X obj 295 211 sel 48;
#X msg 54 67 48;
#X msg 295 233 1;
#X obj 54 133 float 1;
#X connect 0 0 13 0;
#X connect 1 0 13 1;
#X connect 4 0 12 0;
#X connect 5 0 10 0;
#X connect 5 1 9 0;
#X connect 7 0 0 0;
#X connect 8 0 11 0;
#X connect 10 0 12 0;
#X connect 11 0 7 0;
#X connect 12 0 13 1;
#X connect 13 0 1 0;
#X connect 13 0 5 0;
#X restore 286 429 pd for.loop.1-48;
#X obj 560 178 bng 15 250 50 0 empty \$0-sine empty 17 7 0 10 -262144
-1 -1;
#X text 583 176 From Sine;
#X msg 516 314 0;
#X obj 560 204 bng 15 250 50 0 empty \$0-harmonicspec_b empty 17 7
0 10 -262144 -1 -1;
#X text 583 202 From Tri;
#X obj 560 230 bng 15 250 50 0 empty \$0-harmonicspec_a empty 17 7
0 10 -262144 -1 -1;
#X text 583 228 From Saw;
#X obj 560 256 bng 15 250 50 0 empty \$0-harmonicspec_c empty 17 7
0 10 -262144 -1 -1;
#X text 583 254 From Rect;
#X obj 560 282 bng 15 250 50 0 empty \$0-inharmonicspec empty 17 7
0 10 -262144 -1 -1;
#X text 583 280 From Inharm;
#X text 489 132 These buttons are from all the other presets \, which
will turn off the [metro] object, f 34;
#X msg 282 204 1;
#X text 301 36 The only difference between the "Inharmonic Spectrum"
and white noise is that the white noise module continuously generates
random values \, which then gives an even distribution of random (whole
number) frequencies \, thus approaching white noise. This continual
generation is provided by [metro].;
#X text 267 129 When the white noise preset is triggered \, turn metro
on, f 28;
#X text 401 501 here \, the "set" command sets [makefilename] as if
its argument was the symbol output above. Then the \$0 locally generated
unique number replaces %d in the above symbol;
#X obj 286 452 makefilename %%d-amp%da;
#X text 445 438 generates the symbol "%d-ampNa" where N is 1-48 generated
from the for loop above. the portion "%%d" from the argument is translated
to just "%d" so that we can use it as a replaceable element below;
#X obj 235 580 random 100;
#X text 6 586 randomly choose partial amp;
#X obj 235 601 * 0.01;
#X obj 234 622 * 0.25;
#X obj 282 387 metro 5;
#X obj 578 315 bng 15 250 50 0 empty \$0-idealnoise empty 17 7 0 10
-262144 -1 -1;
#X connect 1 0 21 0;
#X connect 2 0 5 0;
#X connect 3 0 2 0;
#X connect 3 1 6 0;
#X connect 4 0 27 0;
#X connect 4 1 0 1;
#X connect 5 0 4 0;
#X connect 6 0 5 0;
#X connect 7 0 1 0;
#X connect 8 0 25 0;
#X connect 9 0 11 0;
#X connect 11 0 31 0;
#X connect 12 0 11 0;
#X connect 14 0 11 0;
#X connect 16 0 11 0;
#X connect 18 0 11 0;
#X connect 21 0 31 0;
#X connect 25 0 3 0;
#X connect 27 0 29 0;
#X connect 29 0 30 0;
#X connect 30 0 0 0;
#X connect 31 0 8 0;
#X connect 32 0 11 0;
#X restore 1437 644 pd amp.calc.noise;
#X obj 782 329 bng 15 250 50 0 \$0-noise empty Noise_(Continuously_Generated_Random_Freq_and_Amp)
17 7 0 10 -4032 -1 -1;
#X obj 182 1329 noise~;
#X text 1305 588 Continuous Noise;
#X text 779 219 Preset Timbres -------------------------------------
;
#X obj 782 347 bng 15 250 50 0 \$0-idealnoise empty Idealized_Noise
17 7 0 10 -4032 -1 -1;
#X obj 212 1352 bng 15 250 50 0 empty \$0-idealnoise empty 17 7 0 10
-262144 -1 -1;
#X msg 212 1372 0 \, 0.8 250;
#X obj 212 1393 line~;
#X obj 183 1426 *~;
#X obj 380 1345 bng 15 250 50 0 empty \$0-harmonicspec_a empty 17 7
0 10 -262144 -1 -1;
#X obj 357 1345 bng 15 250 50 0 empty \$0-harmonicspec_b empty 17 7
0 10 -262144 -1 -1;
#X obj 333 1346 bng 15 250 50 0 empty \$0-sine empty 17 7 0 10 -262144
-1 -1;
#X obj 400 1344 bng 15 250 50 0 empty \$0-harmonicspec_c empty 17 7
0 10 -262144 -1 -1;
#X obj 420 1345 bng 15 250 50 0 empty \$0-inharmonicspec empty 17 7
0 10 -262144 -1 -1;
#X obj 442 1344 bng 15 250 50 0 empty \$0-noise empty 17 7 0 10 -262144
-1 -1;
#X msg 331 1383 0;
#X text 332 1312 If any other preset is triggered \, silence the noise
oscillator immediately;
#X text 102 122 All sound waves are actually composed of many individual
simple sound waves called SINE WAVES. Turn on DSP at the top (if it
isn’t on already). Click on the blue PRESET BUTTON labeled SINE WAVE
to see and hear a sine wave on its own (you will likely recognize it
from the Frequency and Amplitude module). On their own \, sine waves
don't exist in nature \, they must by synthetically made. When a natural
sound occurs \, it is composed of hundreds of sine waves that sum together
to form a COMPLEX WAVE., f 108;
#X text 102 192 These individual sine waves are known as partials or
harmonics. Each partial within a complex wave has its own frequency
and amplitude. You can manipulate 48 different sine waves below.,
f 108;
#X text 102 232 Complex waves are comprised of many sine waves. Try
adding a second sine wave to what you hear. Set the second the second
partial to a different frequency (number box labelled "f") and increase
that partial's amplitude (number box labelled "a"). Notice the change
in the displayed waveform as the two sine waves add together. This
change in waveform is due to the phase interference of the many sine
waves amongst each other., f 108;
#X text 102 302 When sine waves sum together to create a complex wave
that creates a musical tone \, we call this harmonic spectrum. A harmonic
spectrum has sine waves that are related by whole number multiples
(2x \, 3x \, etc.) based on the lowest frequency partial (known as
the fundamental). This partial often has the highest amplitude as well.
On the right are three different harmonic spectra that are commonly
found on synthesizer instruments \, because they are easily designed
through specified partials. Listen to the three spectra and notice
the change in wave shape and the change in sound., f 108;
#X text 102 382 A spectrum whose partials are not related by integer
multiples are known as inharmonic spectrum. This is the spectrum of
percussive sounds with little to no pitch. Depending on how many sine
waves are present and how unrelated they are will determine how noisy
the content will be. At the right is a preset button labelled INHARMONIC
SPECTRUM. The resulting spectrum is a spectrum where every frequency
and amplitude value is randomly chosen by the computer. Each click
will choose a new spectrum., f 108;
#X text 102 462 While the inharmonic spectrum is noisy \, it could
be noisier. The noisiest spectrum is known (not surprisingly) as noise.
In noise \, we have completely random frequencies and amplitudes \,
sort of like our inharmonic spectrum \, except ideally we have EVERY
audible frequency represented. The preset labelled NOISE attempts to
simulate that by constantly changing the frequencies and amplitudes
of each partial to random values. When the probability of every audible
frequency is equal \, we have what is called WHITE NOISE. Noise actually
comes in 3 colors: white \, pink \, and brown \, and each has its own
statistics of how frequencies are present (their details are beyond
the scope of this demonstration). While noise is difficult to develop
with only 48 partials \, so a built in generator in Pd is available
\, which is heard by the preset labelled IDEALIZED NOISE \, which gives
an exact version of white noise., f 108;
#X text 105 101 Spectrum and Timbre;
#X connect 1 0 0 0;
#X connect 3 0 12 0;
#X connect 3 0 14 0;
#X connect 5 0 16 0;
#X connect 5 0 17 0;
#X connect 12 0 13 0;
#X connect 14 0 15 0;
#X connect 16 0 18 0;
#X connect 17 0 19 0;
#X connect 20 0 605 0;
#X connect 20 0 604 0;
#X connect 261 0 267 0;
#X connect 262 0 267 1;
#X connect 263 0 261 0;
#X connect 267 0 616 0;
#X connect 268 0 273 0;
#X connect 269 0 273 1;
#X connect 270 0 268 0;
#X connect 273 0 616 0;
#X connect 274 0 279 0;
#X connect 275 0 279 1;
#X connect 276 0 274 0;
#X connect 279 0 616 0;
#X connect 280 0 284 1;
#X connect 281 0 285 0;
#X connect 284 0 616 0;
#X connect 285 0 284 0;
#X connect 286 0 290 1;
#X connect 287 0 291 0;
#X connect 290 0 616 0;
#X connect 291 0 290 0;
#X connect 292 0 296 1;
#X connect 293 0 297 0;
#X connect 296 0 616 0;
#X connect 297 0 296 0;
#X connect 298 0 303 0;
#X connect 299 0 303 1;
#X connect 300 0 298 0;
#X connect 303 0 616 0;
#X connect 304 0 309 0;
#X connect 305 0 309 1;
#X connect 306 0 304 0;
#X connect 309 0 616 0;
#X connect 310 0 315 0;
#X connect 311 0 315 1;
#X connect 312 0 310 0;
#X connect 315 0 616 0;
#X connect 316 0 320 1;
#X connect 317 0 321 0;
#X connect 320 0 616 0;
#X connect 321 0 320 0;
#X connect 322 0 326 1;
#X connect 323 0 327 0;
#X connect 326 0 616 0;
#X connect 327 0 326 0;
#X connect 328 0 332 1;
#X connect 329 0 333 0;
#X connect 332 0 616 0;
#X connect 333 0 332 0;
#X connect 346 0 351 0;
#X connect 347 0 351 1;
#X connect 348 0 346 0;
#X connect 351 0 616 0;
#X connect 352 0 357 0;
#X connect 353 0 357 1;
#X connect 354 0 352 0;
#X connect 357 0 616 0;
#X connect 358 0 363 0;
#X connect 359 0 363 1;
#X connect 360 0 358 0;
#X connect 363 0 616 0;
#X connect 364 0 368 1;
#X connect 365 0 369 0;
#X connect 368 0 616 0;
#X connect 369 0 368 0;
#X connect 370 0 374 1;
#X connect 371 0 375 0;
#X connect 374 0 616 0;
#X connect 375 0 374 0;
#X connect 376 0 380 1;
#X connect 377 0 381 0;
#X connect 380 0 616 0;
#X connect 381 0 380 0;
#X connect 382 0 387 0;
#X connect 383 0 387 1;
#X connect 384 0 382 0;
#X connect 387 0 616 0;
#X connect 388 0 393 0;
#X connect 389 0 393 1;
#X connect 390 0 388 0;
#X connect 393 0 616 0;
#X connect 394 0 399 0;
#X connect 395 0 399 1;
#X connect 396 0 394 0;
#X connect 399 0 616 0;
#X connect 400 0 404 1;
#X connect 401 0 405 0;
#X connect 404 0 616 0;
#X connect 405 0 404 0;
#X connect 406 0 410 1;
#X connect 407 0 411 0;
#X connect 410 0 616 0;
#X connect 411 0 410 0;
#X connect 412 0 416 1;
#X connect 413 0 417 0;
#X connect 416 0 616 0;
#X connect 417 0 416 0;
#X connect 431 0 617 0;
#X connect 432 0 431 1;
#X connect 433 0 432 0;
#X connect 435 0 440 0;
#X connect 436 0 440 1;
#X connect 437 0 435 0;
#X connect 440 0 618 0;
#X connect 441 0 446 0;
#X connect 442 0 446 1;
#X connect 443 0 441 0;
#X connect 446 0 618 0;
#X connect 447 0 452 0;
#X connect 448 0 452 1;
#X connect 449 0 447 0;
#X connect 452 0 618 0;
#X connect 453 0 457 1;
#X connect 454 0 458 0;
#X connect 457 0 618 0;
#X connect 458 0 457 0;
#X connect 459 0 463 1;
#X connect 460 0 464 0;
#X connect 463 0 618 0;
#X connect 464 0 463 0;
#X connect 465 0 469 1;
#X connect 466 0 470 0;
#X connect 469 0 618 0;
#X connect 470 0 469 0;
#X connect 471 0 476 0;
#X connect 472 0 476 1;
#X connect 473 0 471 0;
#X connect 476 0 618 0;
#X connect 477 0 482 0;
#X connect 478 0 482 1;
#X connect 479 0 477 0;
#X connect 482 0 618 0;
#X connect 483 0 488 0;
#X connect 484 0 488 1;
#X connect 485 0 483 0;
#X connect 488 0 618 0;
#X connect 489 0 493 1;
#X connect 490 0 494 0;
#X connect 493 0 618 0;
#X connect 494 0 493 0;
#X connect 495 0 499 1;
#X connect 496 0 500 0;
#X connect 499 0 618 0;
#X connect 500 0 499 0;
#X connect 501 0 505 1;
#X connect 502 0 506 0;
#X connect 505 0 618 0;
#X connect 506 0 505 0;
#X connect 508 0 513 0;
#X connect 509 0 513 1;
#X connect 510 0 508 0;
#X connect 513 0 618 0;
#X connect 514 0 519 0;
#X connect 515 0 519 1;
#X connect 516 0 514 0;
#X connect 519 0 618 0;
#X connect 520 0 525 0;
#X connect 521 0 525 1;
#X connect 522 0 520 0;
#X connect 525 0 618 0;
#X connect 526 0 530 1;
#X connect 527 0 531 0;
#X connect 530 0 618 0;
#X connect 531 0 530 0;
#X connect 532 0 536 1;
#X connect 533 0 537 0;
#X connect 536 0 618 0;
#X connect 537 0 536 0;
#X connect 538 0 542 1;
#X connect 539 0 543 0;
#X connect 542 0 618 0;
#X connect 543 0 542 0;
#X connect 544 0 549 0;
#X connect 545 0 549 1;
#X connect 546 0 544 0;
#X connect 549 0 618 0;
#X connect 550 0 555 0;
#X connect 551 0 555 1;
#X connect 552 0 550 0;
#X connect 555 0 618 0;
#X connect 556 0 561 0;
#X connect 557 0 561 1;
#X connect 558 0 556 0;
#X connect 561 0 618 0;
#X connect 562 0 566 1;
#X connect 563 0 567 0;
#X connect 566 0 618 0;
#X connect 567 0 566 0;
#X connect 568 0 572 1;
#X connect 569 0 573 0;
#X connect 572 0 618 0;
#X connect 573 0 572 0;
#X connect 574 0 578 1;
#X connect 575 0 579 0;
#X connect 578 0 618 0;
#X connect 579 0 578 0;
#X connect 606 0 607 0;
#X connect 606 0 608 0;
#X connect 607 0 610 0;
#X connect 608 0 611 0;
#X connect 612 0 614 0;
#X connect 612 0 613 0;
#X connect 615 0 431 0;
#X connect 617 0 430 0;
#X connect 617 0 266 0;
#X connect 617 0 620 0;
#X connect 617 0 620 1;
#X connect 627 0 624 0;
#X connect 627 0 623 0;
#X connect 629 0 627 0;
#X connect 631 0 632 0;
#X connect 631 0 633 0;
#X connect 635 0 642 0;
#X connect 639 0 640 0;
#X connect 640 0 641 0;
#X connect 641 0 642 1;
#X connect 642 0 431 0;
#X connect 643 0 649 0;
#X connect 644 0 649 0;
#X connect 645 0 649 0;
#X connect 646 0 649 0;
#X connect 647 0 649 0;
#X connect 648 0 649 0;
#X connect 649 0 641 0;
#X coords 0 -1 1 1 1100 775 2 100 100;
